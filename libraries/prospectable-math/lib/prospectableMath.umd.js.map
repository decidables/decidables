{"version":3,"file":"prospectableMath.umd.js","sources":["../src/cpt-math.js","../src/index.js"],"sourcesContent":["\n/*\n  CPTMath Static Class - Not intended for instantiation!\n\n  Variables:\n    x = objective value\n    v = subjective value\n    p = objective probability\n    w = subjective probability/decision weight\n    u = subjective utility\n\n    a = alpha (curvature for value function)\n    l = lambda (loss aversion for value function)\n    g = gamma (sensitivity for decision weighting function)\n\n  Equations:\n    v = if (x >= 0) x^a; if (x < 0) -l * (-x)^a\n    a = if (x >= 0) log(v) / log(x); if (x < 0) (log(-v) - log(l)) / log(-x)\n    l = if (x >= 0) 1; if (x < 0) -v / (-x)^a\n\n    w = p^g / (p^g + (1 - p)^g)^(1 / g)\n\n    u = Sum_n(v_n * w_n)\n*/\nexport default class CPTMath {\n  static xal2v(x, a, l) {\n    if (x >= 0) {\n      return x ** a;\n    }\n    // else (x < 0)\n    return -l * ((-x) ** a);\n  }\n\n  static xlv2a(x, l, v) {\n    if (x >= 0) {\n      return Math.log(v) / Math.log(x);\n    }\n    // else (x < 0)\n    return (Math.log(-v) - Math.log(l)) / Math.log(-x);\n  }\n\n  static xav2l(x, a, v) {\n    if (x >= 0) {\n      return NaN;\n    }\n    // else (x < 0)\n    return -v / ((-x) ** a);\n  }\n\n  static pg2w(p, g) {\n    return (p ** g) / (((p ** g) + ((1 - p) ** g)) ** (1 / g));\n  }\n\n  static vw2u(v, w) {\n    // Numbers\n    if (typeof v === 'number' && typeof w === 'number') {\n      return v * w;\n    }\n    // Arrays\n    if (v instanceof Array && w instanceof Array && v.length > 0 && v.length === w.length) {\n      let u = 0;\n      for (let n = 0; n < v.length; n += 1) {\n        u += v[n] * w[n];\n      }\n      return u;\n    }\n    // Otherwise\n    return NaN;\n  }\n}\n","\n// Internal dependencies\nimport CPTMath from './cpt-math';\n\nexport default CPTMath;\n"],"names":["CPTMath","xal2v","x","a","l","xlv2a","v","Math","log","xav2l","NaN","pg2w","p","g","vw2u","w","Array","length","u","n"],"mappings":";;;;;;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;AACA;EACA;AACA;EACA;EACA;EACe,MAAMA,OAAN,CAAc;EACf,EAAA,OAALC,KAAK,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAU;EACpB,IAAIF,IAAAA,CAAC,IAAI,CAAT,EAAY;EACV,MAAOA,OAAAA,CAAC,IAAIC,CAAZ,CAAA;EACD,KAHmB;;;EAKpB,IAAA,OAAO,CAACC,CAAD,GAAM,CAAC,CAACF,CAAF,KAAQC,CAArB,CAAA;EACD,GAAA;;EAEW,EAAA,OAALE,KAAK,CAACH,CAAD,EAAIE,CAAJ,EAAOE,CAAP,EAAU;EACpB,IAAIJ,IAAAA,CAAC,IAAI,CAAT,EAAY;EACV,MAAOK,OAAAA,IAAI,CAACC,GAAL,CAASF,CAAT,CAAcC,GAAAA,IAAI,CAACC,GAAL,CAASN,CAAT,CAArB,CAAA;EACD,KAHmB;;;EAKpB,IAAO,OAAA,CAACK,IAAI,CAACC,GAAL,CAAS,CAACF,CAAV,IAAeC,IAAI,CAACC,GAAL,CAASJ,CAAT,CAAhB,IAA+BG,IAAI,CAACC,GAAL,CAAS,CAACN,CAAV,CAAtC,CAAA;EACD,GAAA;;EAEW,EAAA,OAALO,KAAK,CAACP,CAAD,EAAIC,CAAJ,EAAOG,CAAP,EAAU;EACpB,IAAIJ,IAAAA,CAAC,IAAI,CAAT,EAAY;EACV,MAAA,OAAOQ,GAAP,CAAA;EACD,KAHmB;;;EAKpB,IAAA,OAAO,CAACJ,CAAD,GAAM,CAAC,CAACJ,CAAF,KAAQC,CAArB,CAAA;EACD,GAAA;;EAEU,EAAA,OAAJQ,IAAI,CAACC,CAAD,EAAIC,CAAJ,EAAO;EAChB,IAAA,OAAQD,CAAC,IAAIC,CAAN,GAAY,CAAED,CAAC,IAAIC,CAAN,GAAY,CAAC,IAAID,CAAL,KAAWC,CAAxB,MAAgC,CAAA,GAAIA,CAApC,CAAnB,CAAA;EACD,GAAA;;EAEU,EAAA,OAAJC,IAAI,CAACR,CAAD,EAAIS,CAAJ,EAAO;EAChB;EACA,IAAI,IAAA,OAAOT,CAAP,KAAa,QAAb,IAAyB,OAAOS,CAAP,KAAa,QAA1C,EAAoD;EAClD,MAAOT,OAAAA,CAAC,GAAGS,CAAX,CAAA;EACD,KAJe;;;EAMhB,IAAIT,IAAAA,CAAC,YAAYU,KAAb,IAAsBD,CAAC,YAAYC,KAAnC,IAA4CV,CAAC,CAACW,MAAF,GAAW,CAAvD,IAA4DX,CAAC,CAACW,MAAF,KAAaF,CAAC,CAACE,MAA/E,EAAuF;EACrF,MAAIC,IAAAA,CAAC,GAAG,CAAR,CAAA;;EACA,MAAA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAAC,CAACW,MAAtB,EAA8BE,CAAC,IAAI,CAAnC,EAAsC;EACpCD,QAAAA,CAAC,IAAIZ,CAAC,CAACa,CAAD,CAAD,GAAOJ,CAAC,CAACI,CAAD,CAAb,CAAA;EACD,OAAA;;EACD,MAAA,OAAOD,CAAP,CAAA;EACD,KAZe;;;EAchB,IAAA,OAAOR,GAAP,CAAA;EACD,GAAA;;EA5C0B;;ECvB7B;;;;;;;;"}