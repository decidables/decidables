{"version":3,"file":"prospectableMath.esm.js","sources":["../src/cpt-math.js","../src/index.js"],"sourcesContent":["\n/*\n  CPTMath Static Class - Not intended for instantiation!\n\n  Variables:\n    x = objective value\n    v = subjective value\n    p = objective probability\n    w = subjective probability/decision weight\n    u = subjective utility\n\n    a = alpha (curvature for value function)\n    l = lambda (loss aversion for value function)\n    g = gamma (sensitivity for decision weighting function)\n\n  Equations:\n    v = if (x >= 0) x^a; if (x < 0) -l * (-x)^a\n    a = if (x >= 0) log(v) / log(x); if (x < 0) (log(-v) - log(l)) / log(-x)\n    l = if (x >= 0) 1; if (x < 0) -v / (-x)^a\n\n    w = p^g / (p^g + (1 - p)^g)^(1 / g)\n\n    u = Sum_n(v_n * w_n)\n*/\nexport default class CPTMath {\n  static xal2v(x, a, l) {\n    if (x >= 0) {\n      return x ** a;\n    }\n    // else (x < 0)\n    return -l * ((-x) ** a);\n  }\n\n  static xlv2a(x, l, v) {\n    if (x >= 0) {\n      return Math.log(v) / Math.log(x);\n    }\n    // else (x < 0)\n    return (Math.log(-v) - Math.log(l)) / Math.log(-x);\n  }\n\n  static xav2l(x, a, v) {\n    if (x >= 0) {\n      return NaN;\n    }\n    // else (x < 0)\n    return -v / ((-x) ** a);\n  }\n\n  static pg2w(p, g) {\n    return (p ** g) / (((p ** g) + ((1 - p) ** g)) ** (1 / g));\n  }\n\n  static vw2u(v, w) {\n    // Numbers\n    if (typeof v === 'number' && typeof w === 'number') {\n      return v * w;\n    }\n    // Arrays\n    if (v instanceof Array && w instanceof Array && v.length > 0 && v.length === w.length) {\n      let u = 0;\n      for (let n = 0; n < v.length; n += 1) {\n        u += v[n] * w[n];\n      }\n      return u;\n    }\n    // Otherwise\n    return NaN;\n  }\n}\n","\n// Internal dependencies\nimport CPTMath from './cpt-math';\n\nexport default CPTMath;\n"],"names":["CPTMath","xal2v","x","a","l","xlv2a","v","Math","log","xav2l","NaN","pg2w","p","g","vw2u","w","Array","length","u","n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,OAAO,CAAC;AAC3B,EAAA,OAAOC,KAAKA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACpB,IAAIF,CAAC,IAAI,CAAC,EAAE;MACV,OAAOA,CAAC,IAAIC,CAAC,CAAA;AACf,KAAA;AACA;AACA,IAAA,OAAO,CAACC,CAAC,GAAI,CAAC,CAACF,CAAC,KAAKC,CAAE,CAAA;AACzB,GAAA;AAEA,EAAA,OAAOE,KAAKA,CAACH,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAE;IACpB,IAAIJ,CAAC,IAAI,CAAC,EAAE;AACV,MAAA,OAAOK,IAAI,CAACC,GAAG,CAACF,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACN,CAAC,CAAC,CAAA;AAClC,KAAA;AACA;IACA,OAAO,CAACK,IAAI,CAACC,GAAG,CAAC,CAACF,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACJ,CAAC,CAAC,IAAIG,IAAI,CAACC,GAAG,CAAC,CAACN,CAAC,CAAC,CAAA;AACpD,GAAA;AAEA,EAAA,OAAOO,KAAKA,CAACP,CAAC,EAAEC,CAAC,EAAEG,CAAC,EAAE;IACpB,IAAIJ,CAAC,IAAI,CAAC,EAAE;AACV,MAAA,OAAOQ,GAAG,CAAA;AACZ,KAAA;AACA;AACA,IAAA,OAAO,CAACJ,CAAC,GAAI,CAAC,CAACJ,CAAC,KAAKC,CAAE,CAAA;AACzB,GAAA;AAEA,EAAA,OAAOQ,IAAIA,CAACC,CAAC,EAAEC,CAAC,EAAE;AAChB,IAAA,OAAQD,CAAC,IAAIC,CAAC,GAAK,CAAED,CAAC,IAAIC,CAAC,GAAK,CAAC,CAAC,GAAGD,CAAC,KAAKC,CAAE,MAAM,CAAC,GAAGA,CAAC,CAAE,CAAA;AAC5D,GAAA;AAEA,EAAA,OAAOC,IAAIA,CAACR,CAAC,EAAES,CAAC,EAAE;AAChB;IACA,IAAI,OAAOT,CAAC,KAAK,QAAQ,IAAI,OAAOS,CAAC,KAAK,QAAQ,EAAE;MAClD,OAAOT,CAAC,GAAGS,CAAC,CAAA;AACd,KAAA;AACA;IACA,IAAIT,CAAC,YAAYU,KAAK,IAAID,CAAC,YAAYC,KAAK,IAAIV,CAAC,CAACW,MAAM,GAAG,CAAC,IAAIX,CAAC,CAACW,MAAM,KAAKF,CAAC,CAACE,MAAM,EAAE;MACrF,IAAIC,CAAC,GAAG,CAAC,CAAA;AACT,MAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,CAAC,CAACW,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAE;QACpCD,CAAC,IAAIZ,CAAC,CAACa,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,CAAC,CAAA;AAClB,OAAA;AACA,MAAA,OAAOD,CAAC,CAAA;AACV,KAAA;AACA;AACA,IAAA,OAAOR,GAAG,CAAA;AACZ,GAAA;AACF;;ACpEA;;;;"}