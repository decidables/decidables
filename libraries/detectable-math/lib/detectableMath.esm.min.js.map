{"version":3,"file":"detectableMath.esm.min.js","sources":["../../../node_modules/jstat/dist/jstat.js","../src/sdt-math.js"],"sourcesContent":["(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n})(this, function () {\nvar jStat = (function(Math, undefined) {\n\n// For quick reference.\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n// Calculate correction for IEEE error\n// TODO: This calculation can be improved.\nfunction calcRdx(n, m) {\n  var val = n > m ? n : m;\n  return Math.pow(10,\n                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));\n}\n\n\nvar isArray = Array.isArray || function isArray(arg) {\n  return toString.call(arg) === '[object Array]';\n};\n\n\nfunction isFunction(arg) {\n  return toString.call(arg) === '[object Function]';\n}\n\n\nfunction isNumber(num) {\n  return (typeof num === 'number') ? num - num === 0 : false;\n}\n\n\n// Converts the jStat matrix to vector.\nfunction toVector(arr) {\n  return concat.apply([], arr);\n}\n\n\n// The one and only jStat constructor.\nfunction jStat() {\n  return new jStat._init(arguments);\n}\n\n\n// TODO: Remove after all references in src files have been removed.\njStat.fn = jStat.prototype;\n\n\n// By separating the initializer from the constructor it's easier to handle\n// always returning a new instance whether \"new\" was used or not.\njStat._init = function _init(args) {\n  // If first argument is an array, must be vector or matrix.\n  if (isArray(args[0])) {\n    // Check if matrix.\n    if (isArray(args[0][0])) {\n      // See if a mapping function was also passed.\n      if (isFunction(args[1]))\n        args[0] = jStat.map(args[0], args[1]);\n      // Iterate over each is faster than this.push.apply(this, args[0].\n      for (var i = 0; i < args[0].length; i++)\n        this[i] = args[0][i];\n      this.length = args[0].length;\n\n    // Otherwise must be a vector.\n    } else {\n      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n      this.length = 1;\n    }\n\n  // If first argument is number, assume creation of sequence.\n  } else if (isNumber(args[0])) {\n    this[0] = jStat.seq.apply(null, args);\n    this.length = 1;\n\n  // Handle case when jStat object is passed to jStat.\n  } else if (args[0] instanceof jStat) {\n    // Duplicate the object and pass it back.\n    return jStat(args[0].toArray());\n\n  // Unexpected argument value, return empty jStat object.\n  // TODO: This is strange behavior. Shouldn't this throw or some such to let\n  // the user know they had bad arguments?\n  } else {\n    this[0] = [];\n    this.length = 1;\n  }\n\n  return this;\n};\njStat._init.prototype = jStat.prototype;\njStat._init.constructor = jStat;\n\n\n// Utility functions.\n// TODO: for internal use only?\njStat.utils = {\n  calcRdx: calcRdx,\n  isArray: isArray,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  toVector: toVector\n};\n\n\njStat._random_fn = Math.random;\njStat.setRandom = function setRandom(fn) {\n  if (typeof fn !== 'function')\n    throw new TypeError('fn is not a function');\n  jStat._random_fn = fn;\n};\n\n\n// Easily extend the jStat object.\n// TODO: is this seriously necessary?\njStat.extend = function extend(obj) {\n  var i, j;\n\n  if (arguments.length === 1) {\n    for (j in obj)\n      jStat[j] = obj[j];\n    return this;\n  }\n\n  for (i = 1; i < arguments.length; i++) {\n    for (j in arguments[i])\n      obj[j] = arguments[i][j];\n  }\n\n  return obj;\n};\n\n\n// Returns the number of rows in the matrix.\njStat.rows = function rows(arr) {\n  return arr.length || 1;\n};\n\n\n// Returns the number of columns in the matrix.\njStat.cols = function cols(arr) {\n  return arr[0].length || 1;\n};\n\n\n// Returns the dimensions of the object { rows: i, cols: j }\njStat.dimensions = function dimensions(arr) {\n  return {\n    rows: jStat.rows(arr),\n    cols: jStat.cols(arr)\n  };\n};\n\n\n// Returns a specified row as a vector or return a sub matrix by pick some rows\njStat.row = function row(arr, index) {\n  if (isArray(index)) {\n    return index.map(function(i) {\n      return jStat.row(arr, i);\n    })\n  }\n  return arr[index];\n};\n\n\n// return row as array\n// rowa([[1,2],[3,4]],0) -> [1,2]\njStat.rowa = function rowa(arr, i) {\n  return jStat.row(arr, i);\n};\n\n\n// Returns the specified column as a vector or return a sub matrix by pick some\n// columns\njStat.col = function col(arr, index) {\n  if (isArray(index)) {\n    var submat = jStat.arange(arr.length).map(function() {\n      return new Array(index.length);\n    });\n    index.forEach(function(ind, i){\n      jStat.arange(arr.length).forEach(function(j) {\n        submat[j][i] = arr[j][ind];\n      });\n    });\n    return submat;\n  }\n  var column = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++)\n    column[i] = [arr[i][index]];\n  return column;\n};\n\n\n// return column as array\n// cola([[1,2],[3,4]],0) -> [1,3]\njStat.cola = function cola(arr, i) {\n  return jStat.col(arr, i).map(function(a){ return a[0] });\n};\n\n\n// Returns the diagonal of the matrix\njStat.diag = function diag(arr) {\n  var nrow = jStat.rows(arr);\n  var res = new Array(nrow);\n  for (var row = 0; row < nrow; row++)\n    res[row] = [arr[row][row]];\n  return res;\n};\n\n\n// Returns the anti-diagonal of the matrix\njStat.antidiag = function antidiag(arr) {\n  var nrow = jStat.rows(arr) - 1;\n  var res = new Array(nrow);\n  for (var i = 0; nrow >= 0; nrow--, i++)\n    res[i] = [arr[i][nrow]];\n  return res;\n};\n\n// Transpose a matrix or array.\njStat.transpose = function transpose(arr) {\n  var obj = [];\n  var objArr, rows, cols, j, i;\n\n  // Make sure arr is in matrix format.\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  rows = arr.length;\n  cols = arr[0].length;\n\n  for (i = 0; i < cols; i++) {\n    objArr = new Array(rows);\n    for (j = 0; j < rows; j++)\n      objArr[j] = arr[j][i];\n    obj.push(objArr);\n  }\n\n  // If obj is vector, return only single array.\n  return obj.length === 1 ? obj[0] : obj;\n};\n\n\n// Map a function to an array or array of arrays.\n// \"toAlter\" is an internal variable.\njStat.map = function map(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    for (col = 0; col < ncol; col++)\n      res[row][col] = func(arr[row][col], row, col);\n  }\n\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Cumulatively combine the elements of an array or array of arrays using a function.\njStat.cumreduce = function cumreduce(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    if (ncol > 0)\n      res[row][0] = arr[row][0];\n    for (col = 1; col < ncol; col++)\n      res[row][col] = func(res[row][col-1], arr[row][col]);\n  }\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Destructively alter an array.\njStat.alter = function alter(arr, func) {\n  return jStat.map(arr, func, true);\n};\n\n\n// Generate a rows x cols matrix according to the supplied function.\njStat.create = function  create(rows, cols, func) {\n  var res = new Array(rows);\n  var i, j;\n\n  if (isFunction(cols)) {\n    func = cols;\n    cols = rows;\n  }\n\n  for (i = 0; i < rows; i++) {\n    res[i] = new Array(cols);\n    for (j = 0; j < cols; j++)\n      res[i][j] = func(i, j);\n  }\n\n  return res;\n};\n\n\nfunction retZero() { return 0; }\n\n\n// Generate a rows x cols matrix of zeros.\njStat.zeros = function zeros(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retZero);\n};\n\n\nfunction retOne() { return 1; }\n\n\n// Generate a rows x cols matrix of ones.\njStat.ones = function ones(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retOne);\n};\n\n\n// Generate a rows x cols matrix of uniformly random numbers.\njStat.rand = function rand(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, jStat._random_fn);\n};\n\n\nfunction retIdent(i, j) { return i === j ? 1 : 0; }\n\n\n// Generate an identity matrix of size row x cols.\njStat.identity = function identity(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retIdent);\n};\n\n\n// Tests whether a matrix is symmetric\njStat.symmetric = function symmetric(arr) {\n  var size = arr.length;\n  var row, col;\n\n  if (arr.length !== arr[0].length)\n    return false;\n\n  for (row = 0; row < size; row++) {\n    for (col = 0; col < size; col++)\n      if (arr[col][row] !== arr[row][col])\n        return false;\n  }\n\n  return true;\n};\n\n\n// Set all values to zero.\njStat.clear = function clear(arr) {\n  return jStat.alter(arr, retZero);\n};\n\n\n// Generate sequence.\njStat.seq = function seq(min, max, length, func) {\n  if (!isFunction(func))\n    func = false;\n\n  var arr = [];\n  var hival = calcRdx(min, max);\n  var step = (max * hival - min * hival) / ((length - 1) * hival);\n  var current = min;\n  var cnt;\n\n  // Current is assigned using a technique to compensate for IEEE error.\n  // TODO: Needs better implementation.\n  for (cnt = 0;\n       current <= max && cnt < length;\n       cnt++, current = (min * hival + step * hival * cnt) / hival) {\n    arr.push((func ? func(current, cnt) : current));\n  }\n\n  return arr;\n};\n\n\n// arange(5) -> [0,1,2,3,4]\n// arange(1,5) -> [1,2,3,4]\n// arange(5,1,-1) -> [5,4,3,2]\njStat.arange = function arange(start, end, step) {\n  var rl = [];\n  var i;\n  step = step || 1;\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  if (start === end || step === 0) {\n    return [];\n  }\n  if (start < end && step < 0) {\n    return [];\n  }\n  if (start > end && step > 0) {\n    return [];\n  }\n  if (step > 0) {\n    for (i = start; i < end; i += step) {\n      rl.push(i);\n    }\n  } else {\n    for (i = start; i > end; i += step) {\n      rl.push(i);\n    }\n  }\n  return rl;\n};\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n// slice(A,1,{start:1}) -> [5,6]\n// as numpy code A[:2,1:]\njStat.slice = (function(){\n  function _slice(list, start, end, step) {\n    // note it's not equal to range.map mode it's a bug\n    var i;\n    var rl = [];\n    var length = list.length;\n    if (start === undefined && end === undefined && step === undefined) {\n      return jStat.copy(list);\n    }\n\n    start = start || 0;\n    end = end || list.length;\n    start = start >= 0 ? start : length + start;\n    end = end >= 0 ? end : length + end;\n    step = step || 1;\n    if (start === end || step === 0) {\n      return [];\n    }\n    if (start < end && step < 0) {\n      return [];\n    }\n    if (start > end && step > 0) {\n      return [];\n    }\n    if (step > 0) {\n      for (i = start; i < end; i += step) {\n        rl.push(list[i]);\n      }\n    } else {\n      for (i = start; i > end;i += step) {\n        rl.push(list[i]);\n      }\n    }\n    return rl;\n  }\n\n  function slice(list, rcSlice) {\n    var colSlice, rowSlice;\n    rcSlice = rcSlice || {};\n    if (isNumber(rcSlice.row)) {\n      if (isNumber(rcSlice.col))\n        return list[rcSlice.row][rcSlice.col];\n      var row = jStat.rowa(list, rcSlice.row);\n      colSlice = rcSlice.col || {};\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    }\n\n    if (isNumber(rcSlice.col)) {\n      var col = jStat.cola(list, rcSlice.col);\n      rowSlice = rcSlice.row || {};\n      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n    }\n\n    rowSlice = rcSlice.row || {};\n    colSlice = rcSlice.col || {};\n    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n    return rows.map(function(row) {\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    });\n  }\n\n  return slice;\n}());\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n// A=[[1,2,3],[4,0,0],[7,0,0]]\njStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n  var nl, ml;\n  if (isNumber(rcSlice.row)) {\n    if (isNumber(rcSlice.col))\n      return A[rcSlice.row][rcSlice.col] = B;\n    rcSlice.col = rcSlice.col || {};\n    rcSlice.col.start = rcSlice.col.start || 0;\n    rcSlice.col.end = rcSlice.col.end || A[0].length;\n    rcSlice.col.step = rcSlice.col.step || 1;\n    nl = jStat.arange(rcSlice.col.start,\n                          Math.min(A.length, rcSlice.col.end),\n                          rcSlice.col.step);\n    var m = rcSlice.row;\n    nl.forEach(function(n, i) {\n      A[m][n] = B[i];\n    });\n    return A;\n  }\n\n  if (isNumber(rcSlice.col)) {\n    rcSlice.row = rcSlice.row || {};\n    rcSlice.row.start = rcSlice.row.start || 0;\n    rcSlice.row.end = rcSlice.row.end || A.length;\n    rcSlice.row.step = rcSlice.row.step || 1;\n    ml = jStat.arange(rcSlice.row.start,\n                          Math.min(A[0].length, rcSlice.row.end),\n                          rcSlice.row.step);\n    var n = rcSlice.col;\n    ml.forEach(function(m, j) {\n      A[m][n] = B[j];\n    });\n    return A;\n  }\n\n  if (B[0].length === undefined) {\n    B = [B];\n  }\n  rcSlice.row.start = rcSlice.row.start || 0;\n  rcSlice.row.end = rcSlice.row.end || A.length;\n  rcSlice.row.step = rcSlice.row.step || 1;\n  rcSlice.col.start = rcSlice.col.start || 0;\n  rcSlice.col.end = rcSlice.col.end || A[0].length;\n  rcSlice.col.step = rcSlice.col.step || 1;\n  ml = jStat.arange(rcSlice.row.start,\n                        Math.min(A.length, rcSlice.row.end),\n                        rcSlice.row.step);\n  nl = jStat.arange(rcSlice.col.start,\n                        Math.min(A[0].length, rcSlice.col.end),\n                        rcSlice.col.step);\n  ml.forEach(function(m, i) {\n    nl.forEach(function(n, j) {\n      A[m][n] = B[i][j];\n    });\n  });\n  return A;\n};\n\n\n// [1,2,3] ->\n// [[1,0,0],[0,2,0],[0,0,3]]\njStat.diagonal = function diagonal(diagArray) {\n  var mat = jStat.zeros(diagArray.length, diagArray.length);\n  diagArray.forEach(function(t, i) {\n    mat[i][i] = t;\n  });\n  return mat;\n};\n\n\n// return copy of A\njStat.copy = function copy(A) {\n  return A.map(function(row) {\n    if (isNumber(row))\n      return row;\n    return row.map(function(t) {\n      return t;\n    });\n  });\n};\n\n\n// TODO: Go over this entire implementation. Seems a tragic waste of resources\n// doing all this work. Instead, and while ugly, use new Function() to generate\n// a custom function for each static method.\n\n// Quick reference.\nvar jProto = jStat.prototype;\n\n// Default length.\njProto.length = 0;\n\n// For internal use only.\n// TODO: Check if they're actually used, and if they are then rename them\n// to _*\njProto.push = Array.prototype.push;\njProto.sort = Array.prototype.sort;\njProto.splice = Array.prototype.splice;\njProto.slice = Array.prototype.slice;\n\n\n// Return a clean array.\njProto.toArray = function toArray() {\n  return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n};\n\n\n// Map a function to a matrix or vector.\njProto.map = function map(func, toAlter) {\n  return jStat(jStat.map(this, func, toAlter));\n};\n\n\n// Cumulatively combine the elements of a matrix or vector using a function.\njProto.cumreduce = function cumreduce(func, toAlter) {\n  return jStat(jStat.cumreduce(this, func, toAlter));\n};\n\n\n// Destructively alter an array.\njProto.alter = function alter(func) {\n  jStat.alter(this, func);\n  return this;\n};\n\n\n// Extend prototype with methods that have no argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(func) {\n      var self = this,\n      results;\n      // Check for callback.\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self));\n        });\n        return this;\n      }\n      results = jStat[passfunc](this);\n      return isArray(results) ? jStat(results) : results;\n    };\n  })(funcs[i]);\n})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n\n// Extend prototype with methods that have one argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(index, func) {\n      var self = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self, index));\n        });\n        return this;\n      }\n      return jStat(jStat[passfunc](this, index));\n    };\n  })(funcs[i]);\n})('row col'.split(' '));\n\n\n// Extend prototype with simple shortcut methods.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('create zeros ones rand identity'.split(' '));\n\n\n// Exposing jStat.\nreturn jStat;\n\n}(Math));\n(function(jStat, Math) {\n\nvar isFunction = jStat.utils.isFunction;\n\n// Ascending functions for sort\nfunction ascNum(a, b) { return a - b; }\n\nfunction clip(arg, min, max) {\n  return Math.max(min, Math.min(arg, max));\n}\n\n\n// sum of an array\njStat.sum = function sum(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n\n// sum squared\njStat.sumsqrd = function sumsqrd(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i] * arr[i];\n  return sum;\n};\n\n\n// sum of squared errors of prediction (SSE)\njStat.sumsqerr = function sumsqerr(arr) {\n  var mean = jStat.mean(arr);\n  var sum = 0;\n  var i = arr.length;\n  var tmp;\n  while (--i >= 0) {\n    tmp = arr[i] - mean;\n    sum += tmp * tmp;\n  }\n  return sum;\n};\n\n// sum of an array in each row\njStat.sumrow = function sumrow(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n// product of an array\njStat.product = function product(arr) {\n  var prod = 1;\n  var i = arr.length;\n  while (--i >= 0)\n    prod *= arr[i];\n  return prod;\n};\n\n\n// minimum value of an array\njStat.min = function min(arr) {\n  var low = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] < low)\n      low = arr[i];\n  return low;\n};\n\n\n// maximum value of an array\njStat.max = function max(arr) {\n  var high = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] > high)\n      high = arr[i];\n  return high;\n};\n\n\n// unique values of an array\njStat.unique = function unique(arr) {\n  var hash = {}, _arr = [];\n  for(var i = 0; i < arr.length; i++) {\n    if (!hash[arr[i]]) {\n      hash[arr[i]] = true;\n      _arr.push(arr[i]);\n    }\n  }\n  return _arr;\n};\n\n\n// mean value of an array\njStat.mean = function mean(arr) {\n  return jStat.sum(arr) / arr.length;\n};\n\n\n// mean squared error (MSE)\njStat.meansqerr = function meansqerr(arr) {\n  return jStat.sumsqerr(arr) / arr.length;\n};\n\n\n// geometric mean of an array\njStat.geomean = function geomean(arr) {\n  var logs = arr.map(Math.log)\n  var meanOfLogs = jStat.mean(logs)\n  return Math.exp(meanOfLogs)\n};\n\n\n// median of an array\njStat.median = function median(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  // check if array is even or odd, then return the appropriate\n  return !(arrlen & 1)\n    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2\n    : _arr[(arrlen / 2) | 0 ];\n};\n\n\n// cumulative sum of an array\njStat.cumsum = function cumsum(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a + b; });\n};\n\n\n// cumulative product of an array\njStat.cumprod = function cumprod(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a * b; });\n};\n\n\n// successive differences of a sequence\njStat.diff = function diff(arr) {\n  var diffs = [];\n  var arrLen = arr.length;\n  var i;\n  for (i = 1; i < arrLen; i++)\n    diffs.push(arr[i] - arr[i - 1]);\n  return diffs;\n};\n\n\n// ranks of an array\njStat.rank = function (arr) {\n  var i;\n  var distinctNumbers = [];\n  var numberCounts = {};\n  for (i = 0; i < arr.length; i++) {\n    var number = arr[i];\n    if (numberCounts[number]) {\n      numberCounts[number]++;\n    } else {\n      numberCounts[number] = 1;\n      distinctNumbers.push(number);\n    }\n  }\n\n  var sortedDistinctNumbers = distinctNumbers.sort(ascNum);\n  var numberRanks = {};\n  var currentRank = 1;\n  for (i = 0; i < sortedDistinctNumbers.length; i++) {\n    var number = sortedDistinctNumbers[i];\n    var count = numberCounts[number];\n    var first = currentRank;\n    var last = currentRank + count - 1;\n    var rank = (first + last) / 2;\n    numberRanks[number] = rank;\n    currentRank += count;\n  }\n\n  return arr.map(function (number) {\n    return numberRanks[number];\n  });\n};\n\n\n// mode of an array\n// if there are multiple modes of an array, return all of them\n// is this the appropriate way of handling it?\njStat.mode = function mode(arr) {\n  var arrLen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  var count = 1;\n  var maxCount = 0;\n  var numMaxCount = 0;\n  var mode_arr = [];\n  var i;\n\n  for (i = 0; i < arrLen; i++) {\n    if (_arr[i] === _arr[i + 1]) {\n      count++;\n    } else {\n      if (count > maxCount) {\n        mode_arr = [_arr[i]];\n        maxCount = count;\n        numMaxCount = 0;\n      }\n      // are there multiple max counts\n      else if (count === maxCount) {\n        mode_arr.push(_arr[i]);\n        numMaxCount++;\n      }\n      // resetting count for new value in array\n      count = 1;\n    }\n  }\n\n  return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n};\n\n\n// range of an array\njStat.range = function range(arr) {\n  return jStat.max(arr) - jStat.min(arr);\n};\n\n// variance of an array\n// flag = true indicates sample instead of population\njStat.variance = function variance(arr, flag) {\n  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n};\n\n// pooled variance of an array of arrays\njStat.pooledvariance = function pooledvariance(arr) {\n  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);\n  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);\n  return sumsqerr / (count - arr.length);\n};\n\n// deviation of an array\njStat.deviation = function (arr) {\n  var mean = jStat.mean(arr);\n  var arrlen = arr.length;\n  var dev = new Array(arrlen);\n  for (var i = 0; i < arrlen; i++) {\n    dev[i] = arr[i] - mean;\n  }\n  return dev;\n};\n\n// standard deviation of an array\n// flag = true indicates sample instead of population\njStat.stdev = function stdev(arr, flag) {\n  return Math.sqrt(jStat.variance(arr, flag));\n};\n\n// pooled standard deviation of an array of arrays\njStat.pooledstdev = function pooledstdev(arr) {\n  return Math.sqrt(jStat.pooledvariance(arr));\n};\n\n// mean deviation (mean absolute deviation) of an array\njStat.meandev = function meandev(arr) {\n  var mean = jStat.mean(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - mean));\n  }\n  return jStat.mean(a);\n};\n\n\n// median deviation (median absolute deviation) of an array\njStat.meddev = function meddev(arr) {\n  var median = jStat.median(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - median));\n  }\n  return jStat.median(a);\n};\n\n\n// coefficient of variation\njStat.coeffvar = function coeffvar(arr) {\n  return jStat.stdev(arr) / jStat.mean(arr);\n};\n\n\n// quartiles of an array\njStat.quartiles = function quartiles(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  return [\n    _arr[ Math.round((arrlen) / 4) - 1 ],\n    _arr[ Math.round((arrlen) / 2) - 1 ],\n    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]\n  ];\n};\n\n\n// Arbitary quantiles of an array. Direct port of the scipy.stats\n// implementation by Pierre GF Gerard-Marchant.\njStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n  var sortedArray = arr.slice().sort(ascNum);\n  var quantileVals = [quantilesArray.length];\n  var n = arr.length;\n  var i, p, m, aleph, k, gamma;\n\n  if (typeof alphap === 'undefined')\n    alphap = 3 / 8;\n  if (typeof betap === 'undefined')\n    betap = 3 / 8;\n\n  for (i = 0; i < quantilesArray.length; i++) {\n    p = quantilesArray[i];\n    m = alphap + p * (1 - alphap - betap);\n    aleph = n * p + m;\n    k = Math.floor(clip(aleph, 1, n - 1));\n    gamma = clip(aleph - k, 0, 1);\n    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n  }\n\n  return quantileVals;\n};\n\n// Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n// Passing true for the exclusive parameter excludes both endpoints of the range.\njStat.percentile = function percentile(arr, k, exclusive) {\n  var _arr = arr.slice().sort(ascNum);\n  var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n  var index = parseInt(realIndex);\n  var frac = realIndex - index;\n  if (index + 1 < _arr.length) {\n    return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n  } else {\n    return _arr[index - 1];\n  }\n}\n\n// The percentile rank of score in a given array. Returns the percentage\n// of all values in the input array that are less than (kind='strict') or\n// less or equal than (kind='weak') score. Default is weak.\njStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n  var counter = 0;\n  var len = arr.length;\n  var strict = false;\n  var value, i;\n\n  if (kind === 'strict')\n    strict = true;\n\n  for (i = 0; i < len; i++) {\n    value = arr[i];\n    if ((strict && value < score) ||\n        (!strict && value <= score)) {\n      counter++;\n    }\n  }\n\n  return counter / len;\n};\n\n\n// Histogram (bin count) data\njStat.histogram = function histogram(arr, binCnt) {\n  binCnt = binCnt || 4;\n  var first = jStat.min(arr);\n  var binWidth = (jStat.max(arr) - first) / binCnt;\n  var len = arr.length;\n  var bins = [];\n  var i;\n\n  for (i = 0; i < binCnt; i++)\n    bins[i] = 0;\n  for (i = 0; i < len; i++)\n    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;\n\n  return bins;\n};\n\n\n// covariance of two arrays\njStat.covariance = function covariance(arr1, arr2) {\n  var u = jStat.mean(arr1);\n  var v = jStat.mean(arr2);\n  var arr1Len = arr1.length;\n  var sq_dev = new Array(arr1Len);\n  var i;\n\n  for (i = 0; i < arr1Len; i++)\n    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n  return jStat.sum(sq_dev) / (arr1Len - 1);\n};\n\n\n// (pearson's) population correlation coefficient, rho\njStat.corrcoeff = function corrcoeff(arr1, arr2) {\n  return jStat.covariance(arr1, arr2) /\n      jStat.stdev(arr1, 1) /\n      jStat.stdev(arr2, 1);\n};\n\n  // (spearman's) rank correlation coefficient, sp\njStat.spearmancoeff =  function (arr1, arr2) {\n  arr1 = jStat.rank(arr1);\n  arr2 = jStat.rank(arr2);\n  //return pearson's correlation of the ranks:\n  return jStat.corrcoeff(arr1, arr2);\n}\n\n\n// statistical standardized moments (general form of skew/kurt)\njStat.stanMoment = function stanMoment(arr, n) {\n  var mu = jStat.mean(arr);\n  var sigma = jStat.stdev(arr);\n  var len = arr.length;\n  var skewSum = 0;\n\n  for (var i = 0; i < len; i++)\n    skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n  return skewSum / arr.length;\n};\n\n// (pearson's) moment coefficient of skewness\njStat.skewness = function skewness(arr) {\n  return jStat.stanMoment(arr, 3);\n};\n\n// (pearson's) (excess) kurtosis\njStat.kurtosis = function kurtosis(arr) {\n  return jStat.stanMoment(arr, 4) - 3;\n};\n\n\nvar jProto = jStat.prototype;\n\n\n// Extend jProto with method for calculating cumulative sums and products.\n// This differs from the similar extension below as cumsum and cumprod should\n// not be run again in the case fullbool === true.\n// If a matrix is passed, automatically assume operation should be done on the\n// columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('cumsum cumprod').split(' '));\n\n\n// Extend jProto with methods which don't require arguments and work on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        if (passfunc !== 'sumrow')\n          tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return fullbool === true\n            ? jStat[passfunc](jStat.utils.toVector(arr))\n            : arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +\n    'geomean median diff rank mode range variance deviation stdev meandev ' +\n    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n\n// Extend jProto with functions that take arguments. Operations on matrices are\n// done on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callbackFunction;\n\n      // If the last argument is a function, we assume it's a callback; we\n      // strip the callback out and call the function again.\n      if (isFunction(args[args.length - 1])) {\n        callbackFunction = args[args.length - 1];\n        var argsToPass = args.slice(0, args.length - 1);\n\n        setTimeout(function() {\n          callbackFunction.call(tmpthis,\n                                jProto[passfunc].apply(tmpthis, argsToPass));\n        });\n        return this;\n\n      // Otherwise we curry the function args and call normally.\n      } else {\n        callbackFunction = undefined;\n        var curriedFunction = function curriedFunction(vector) {\n          return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n        }\n      }\n\n      // If this is a matrix, run column-by-column.\n      if (this.length > 1) {\n        tmpthis = tmpthis.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = curriedFunction(tmpthis[i]);\n        return arr;\n      }\n\n      // Otherwise run on the vector.\n      return curriedFunction(this[0]);\n    };\n  })(funcs[i]);\n})('quantiles percentileOfScore'.split(' '));\n\n}(jStat, Math));\n// Special functions //\n(function(jStat, Math) {\n\n// Log-gamma function\njStat.gammaln = function gammaln(x) {\n  var j = 0;\n  var cof = [\n    76.18009172947146, -86.50532032941677, 24.01409824083091,\n    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n  ];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++)\n    ser += cof[j] / ++y;\n  return Math.log(2.5066282746310005 * ser / xx) - tmp;\n};\n\n/*\n * log-gamma function to support poisson distribution sampling. The\n * algorithm comes from SPECFUN by Shanjie Zhang and Jianming Jin and their\n * book \"Computation of Special Functions\", 1996, John Wiley & Sons, Inc.\n */\njStat.loggam = function loggam(x) {\n  var x0, x2, xp, gl, gl0;\n  var k, n;\n\n  var a = [8.333333333333333e-02, -2.777777777777778e-03,\n          7.936507936507937e-04, -5.952380952380952e-04,\n          8.417508417508418e-04, -1.917526917526918e-03,\n          6.410256410256410e-03, -2.955065359477124e-02,\n          1.796443723688307e-01, -1.39243221690590e+00];\n  x0 = x;\n  n = 0;\n  if ((x == 1.0) || (x == 2.0)) {\n      return 0.0;\n  }\n  if (x <= 7.0) {\n      n = Math.floor(7 - x);\n      x0 = x + n;\n  }\n  x2 = 1.0 / (x0 * x0);\n  xp = 2 * Math.PI;\n  gl0 = a[9];\n  for (k = 8; k >= 0; k--) {\n      gl0 *= x2;\n      gl0 += a[k];\n  }\n  gl = gl0 / x0 + 0.5 * Math.log(xp) + (x0 - 0.5) * Math.log(x0) - x0;\n  if (x <= 7.0) {\n      for (k = 1; k <= n; k++) {\n          gl -= Math.log(x0 - 1.0);\n          x0 -= 1.0;\n      }\n  }\n  return gl;\n}\n\n// gamma of x\njStat.gammafn = function gammafn(x) {\n  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n           629.3311553128184, 866.9662027904133, -31451.272968848367,\n           -36144.413418691176, 66456.14382024054\n  ];\n  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n           -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n           -134659.9598649693, -115132.2596755535];\n  var fact = false;\n  var n = 0;\n  var xden = 0;\n  var xnum = 0;\n  var y = x;\n  var i, z, yi, res;\n  if (x > 171.6243769536076) {\n    return Infinity;\n  }\n  if (y <= 0) {\n    res = y % 1 + 3.6e-16;\n    if (res) {\n      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n      y = 1 - y;\n    } else {\n      return Infinity;\n    }\n  }\n  yi = y;\n  if (y < 1) {\n    z = y++;\n  } else {\n    z = (y -= n = (y | 0) - 1) - 1;\n  }\n  for (i = 0; i < 8; ++i) {\n    xnum = (xnum + p[i]) * z;\n    xden = xden * z + q[i];\n  }\n  res = xnum / xden + 1;\n  if (yi < y) {\n    res /= yi;\n  } else if (yi > y) {\n    for (i = 0; i < n; ++i) {\n      res *= y;\n      y++;\n    }\n  }\n  if (fact) {\n    res = fact / res;\n  }\n  return res;\n};\n\n\n// lower incomplete gamma function, which is usually typeset with a\n// lower-case greek gamma as the function symbol\njStat.gammap = function gammap(a, x) {\n  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n};\n\n\n// The lower regularized incomplete gamma function, usually written P(a,x)\njStat.lowRegGamma = function lowRegGamma(a, x) {\n  var aln = jStat.gammaln(a);\n  var ap = a;\n  var sum = 1 / a;\n  var del = sum;\n  var b = x + 1 - a;\n  var c = 1 / 1.0e-30;\n  var d = 1 / b;\n  var h = d;\n  var i = 1;\n  // calculate maximum number of itterations required for a\n  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n  var an;\n\n  if (x < 0 || a <= 0) {\n    return NaN;\n  } else if (x < a + 1) {\n    for (; i <= ITMAX; i++) {\n      sum += del *= x / ++ap;\n    }\n    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n  }\n\n  for (; i <= ITMAX; i++) {\n    an = -i * (i - a);\n    b += 2;\n    d = an * d + b;\n    c = b + an / c;\n    d = 1 / d;\n    h *= d * c;\n  }\n\n  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n};\n\n// natural log factorial of n\njStat.factorialln = function factorialln(n) {\n  return n < 0 ? NaN : jStat.gammaln(n + 1);\n};\n\n// factorial of n\njStat.factorial = function factorial(n) {\n  return n < 0 ? NaN : jStat.gammafn(n + 1);\n};\n\n// combinations of n, m\njStat.combination = function combination(n, m) {\n  // make sure n or m don't exceed the upper limit of usable values\n  return (n > 170 || m > 170)\n      ? Math.exp(jStat.combinationln(n, m))\n      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);\n};\n\n\njStat.combinationln = function combinationln(n, m){\n  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n};\n\n\n// permutations of n, m\njStat.permutation = function permutation(n, m) {\n  return jStat.factorial(n) / jStat.factorial(n - m);\n};\n\n\n// beta function\njStat.betafn = function betafn(x, y) {\n  // ensure arguments are positive\n  if (x <= 0 || y <= 0)\n    return undefined;\n  // make sure x + y doesn't exceed the upper limit of usable values\n  return (x + y > 170)\n      ? Math.exp(jStat.betaln(x, y))\n      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n};\n\n\n// natural logarithm of beta function\njStat.betaln = function betaln(x, y) {\n  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n};\n\n\n// Evaluates the continued fraction for incomplete beta function by modified\n// Lentz's method.\njStat.betacf = function betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q's will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin)\n    d = fpmin;\n  d = 1 / d;\n  h = d;\n\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7)\n      break;\n  }\n\n  return h;\n};\n\n\n// Returns the inverse of the lower regularized inomplete gamma function\njStat.gammapinv = function gammapinv(p, a) {\n  var j = 0;\n  var a1 = a - 1;\n  var EPS = 1e-8;\n  var gln = jStat.gammaln(a);\n  var x, err, t, u, pp, lna1, afac;\n\n  if (p >= 1)\n    return Math.max(100, a + 100 * Math.sqrt(a));\n  if (p <= 0)\n    return 0;\n  if (a > 1) {\n    lna1 = Math.log(a1);\n    afac = Math.exp(a1 * (lna1 - 1) - gln);\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    x = Math.max(1e-3,\n                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n  } else {\n    t = 1 - a * (0.253 + a * 0.12);\n    if (p < t)\n      x = Math.pow(p / t, 1 / a);\n    else\n      x = 1 - Math.log(1 - (p - t) / (1 - t));\n  }\n\n  for(; j < 12; j++) {\n    if (x <= 0)\n      return 0;\n    err = jStat.lowRegGamma(a, x) - p;\n    if (a > 1)\n      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n    else\n      t = Math.exp(-x + a1 * Math.log(x) - gln);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (Math.abs(t) < EPS * x)\n      break;\n  }\n\n  return x;\n};\n\n\n// Returns the error function erf(x)\njStat.erf = function erf(x) {\n  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n             -6.886027e-12, 8.94487e-13, 3.13092e-13,\n             -1.12708e-13, 3.81e-16, 7.106e-15,\n             -1.523e-15, -9.4e-17, 1.21e-16,\n             -2.8e-17];\n  var j = cof.length - 1;\n  var isneg = false;\n  var d = 0;\n  var dd = 0;\n  var t, ty, tmp, res;\n\n  if (x < 0) {\n    x = -x;\n    isneg = true;\n  }\n\n  t = 2 / (2 + x);\n  ty = 4 * t - 2;\n\n  for(; j > 0; j--) {\n    tmp = d;\n    d = ty * d - dd + cof[j];\n    dd = tmp;\n  }\n\n  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n  return isneg ? res - 1 : 1 - res;\n};\n\n\n// Returns the complmentary error function erfc(x)\njStat.erfc = function erfc(x) {\n  return 1 - jStat.erf(x);\n};\n\n\n// Returns the inverse of the complementary error function\njStat.erfcinv = function erfcinv(p) {\n  var j = 0;\n  var x, err, t, pp;\n  if (p >= 2)\n    return -100;\n  if (p <= 0)\n    return 100;\n  pp = (p < 1) ? p : 2 - p;\n  t = Math.sqrt(-2 * Math.log(pp / 2));\n  x = -0.70711 * ((2.30753 + t * 0.27061) /\n                  (1 + t * (0.99229 + t * 0.04481)) - t);\n  for (; j < 2; j++) {\n    err = jStat.erfc(x) - pp;\n    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n  }\n  return (p < 1) ? x : -x;\n};\n\n\n// Returns the inverse of the incomplete beta function\njStat.ibetainv = function ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0)\n    return 0;\n  if (p >= 1)\n    return 1;\n  if (a >= 1 && b >= 1) {\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));\n    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n        (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w)\n      x = Math.pow(a * w * p, 1 / a);\n    else\n      x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n  for(; j < 10; j++) {\n    if (x === 0 || x === 1)\n      return x;\n    err = jStat.ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (x >= 1)\n      x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0)\n      break;\n  }\n  return x;\n};\n\n\n// Returns the incomplete beta function I_x(a,b)\njStat.ibeta = function ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = (x === 0 || x === 1) ?  0 :\n    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -\n             jStat.gammaln(b) + a * Math.log(x) + b *\n             Math.log(1 - x));\n  if (x < 0 || x > 1)\n    return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * jStat.betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n};\n\n\n// Returns a normal deviate (mu=0, sigma=1).\n// If n and m are specified it returns a object of normal deviates.\njStat.randn = function randn(n, m) {\n  var u, v, x, y, q;\n  if (!m)\n    m = n;\n  if (n)\n    return jStat.create(n, m, function() { return jStat.randn(); });\n  do {\n    u = jStat._random_fn();\n    v = 1.7156 * (jStat._random_fn() - 0.5);\n    x = u - 0.449871;\n    y = Math.abs(v) + 0.386595;\n    q = x * x + y * (0.19600 * y - 0.25472 * x);\n  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n  return v / u;\n};\n\n\n// Returns a gamma deviate by the method of Marsaglia and Tsang.\njStat.randg = function randg(shape, n, m) {\n  var oalph = shape;\n  var a1, a2, u, v, x, mat;\n  if (!m)\n    m = n;\n  if (!shape)\n    shape = 1;\n  if (n) {\n    mat = jStat.zeros(n,m);\n    mat.alter(function() { return jStat.randg(shape); });\n    return mat;\n  }\n  if (shape < 1)\n    shape += 1;\n  a1 = shape - 1 / 3;\n  a2 = 1 / Math.sqrt(9 * a1);\n  do {\n    do {\n      x = jStat.randn();\n      v = 1 + a2 * x;\n    } while(v <= 0);\n    v = v * v * v;\n    u = jStat._random_fn();\n  } while(u > 1 - 0.331 * Math.pow(x, 4) &&\n          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));\n  // alpha > 1\n  if (shape == oalph)\n    return a1 * v;\n  // alpha < 1\n  do {\n    u = jStat._random_fn();\n  } while(u === 0);\n  return Math.pow(u, 1 / oalph) * a1 * v;\n};\n\n\n// making use of static methods on the instance\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(\n          jStat.map(this, function(value) { return jStat[passfunc](value); }));\n    }\n  })(funcs[i]);\n})('gammaln gammafn factorial factorialln'.split(' '));\n\n\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('randn'.split(' '));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\n// generate all distribution instance methods\n(function(list) {\n  for (var i = 0; i < list.length; i++) (function(func) {\n    // distribution instance method\n    jStat[func] = function f(a, b, c) {\n      if (!(this instanceof f))\n        return new f(a, b, c);\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      return this;\n    };\n    // distribution method to be used on a jStat instance\n    jStat.fn[func] = function(a, b, c) {\n      var newthis = jStat[func](a, b, c);\n      newthis.data = this;\n      return newthis;\n    };\n    // sample instance method\n    jStat[func].prototype.sample = function(arr) {\n      var a = this._a;\n      var b = this._b;\n      var c = this._c;\n      if (arr)\n        return jStat.alter(arr, function() {\n          return jStat[func].sample(a, b, c);\n        });\n      else\n        return jStat[func].sample(a, b, c);\n    };\n    // generate the pdf, cdf and inv instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function(x) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (!x && x !== 0)\n            x = this.data;\n          if (typeof x !== 'number') {\n            return jStat.fn.map.call(x, function(x) {\n              return jStat[func][fnfunc](x, a, b, c);\n            });\n          }\n          return jStat[func][fnfunc](x, a, b, c);\n        };\n      })(vals[i]);\n    })('pdf cdf inv'.split(' '));\n    // generate the mean, median, mode and variance instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function() {\n          return jStat[func][fnfunc](this._a, this._b, this._c);\n        };\n      })(vals[i]);\n    })('mean median mode variance'.split(' '));\n  })(list[i]);\n})((\n  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +\n  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +\n  'binomial negbin hypgeom poisson triangular tukey arcsine'\n).split(' '));\n\n\n\n// extend beta function with static methods\njStat.extend(jStat.beta, {\n  pdf: function pdf(x, alpha, beta) {\n    // PDF is zero outside the support\n    if (x > 1 || x < 0)\n      return 0;\n    // PDF is one for the uniform case\n    if (alpha == 1 && beta == 1)\n      return 1;\n\n    if (alpha < 512 && beta < 512) {\n      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n          jStat.betafn(alpha, beta);\n    } else {\n      return Math.exp((alpha - 1) * Math.log(x) +\n                      (beta - 1) * Math.log(1 - x) -\n                      jStat.betaln(alpha, beta));\n    }\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n  },\n\n  inv: function inv(x, alpha, beta) {\n    return jStat.ibetainv(x, alpha, beta);\n  },\n\n  mean: function mean(alpha, beta) {\n    return alpha / (alpha + beta);\n  },\n\n  median: function median(alpha, beta) {\n    return jStat.ibetainv(0.5, alpha, beta);\n  },\n\n  mode: function mode(alpha, beta) {\n    return (alpha - 1 ) / ( alpha + beta - 2);\n  },\n\n  // return a random sample\n  sample: function sample(alpha, beta) {\n    var u = jStat.randg(alpha);\n    return u / (u + jStat.randg(beta));\n  },\n\n  variance: function variance(alpha, beta) {\n    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n  }\n});\n\n// extend F function with static methods\njStat.extend(jStat.centralF, {\n  // This implementation of the pdf function avoids float overflow\n  // See the way that R calculates this value:\n  // https://svn.r-project.org/R/trunk/src/nmath/df.c\n  pdf: function pdf(x, df1, df2) {\n    var p, q, f;\n\n    if (x < 0)\n      return 0;\n\n    if (df1 <= 2) {\n      if (x === 0 && df1 < 2) {\n        return Infinity;\n      }\n      if (x === 0 && df1 === 2) {\n        return 1;\n      }\n      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *\n              Math.pow(df1 / df2, df1 / 2) *\n              Math.pow(x, (df1/2) - 1) *\n              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n    }\n\n    p = (df1 * x) / (df2 + x * df1);\n    q = df2 / (df2 + x * df1);\n    f = df1 * q / 2.0;\n    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n  },\n\n  cdf: function cdf(x, df1, df2) {\n    if (x < 0)\n      return 0;\n    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n  },\n\n  inv: function inv(x, df1, df2) {\n    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n  },\n\n  mean: function mean(df1, df2) {\n    return (df2 > 2) ? df2 / (df2 - 2) : undefined;\n  },\n\n  mode: function mode(df1, df2) {\n    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;\n  },\n\n  // return a random sample\n  sample: function sample(df1, df2) {\n    var x1 = jStat.randg(df1 / 2) * 2;\n    var x2 = jStat.randg(df2 / 2) * 2;\n    return (x1 / df1) / (x2 / df2);\n  },\n\n  variance: function variance(df1, df2) {\n    if (df2 <= 4)\n      return undefined;\n    return 2 * df2 * df2 * (df1 + df2 - 2) /\n        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n  }\n});\n\n\n// extend cauchy function with static methods\njStat.extend(jStat.cauchy, {\n  pdf: function pdf(x, local, scale) {\n    if (scale < 0) { return 0; }\n\n    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;\n  },\n\n  cdf: function cdf(x, local, scale) {\n    return Math.atan((x - local) / scale) / Math.PI + 0.5;\n  },\n\n  inv: function(p, local, scale) {\n    return local + scale * Math.tan(Math.PI * (p - 0.5));\n  },\n\n  median: function median(local/*, scale*/) {\n    return local;\n  },\n\n  mode: function mode(local/*, scale*/) {\n    return local;\n  },\n\n  sample: function sample(local, scale) {\n    return jStat.randn() *\n        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n  }\n});\n\n\n\n// extend chisquare function with static methods\njStat.extend(jStat.chisquare, {\n  pdf: function pdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && dof === 2) ? 0.5 :\n        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                 Math.log(2) - jStat.gammaln(dof / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(dof / 2, x / 2);\n  },\n\n  inv: function(p, dof) {\n    return 2 * jStat.gammapinv(p, 0.5 * dof);\n  },\n\n  mean : function(dof) {\n    return dof;\n  },\n\n  // TODO: this is an approximation (is there a better way?)\n  median: function median(dof) {\n    return dof * Math.pow(1 - (2 / (9 * dof)), 3);\n  },\n\n  mode: function mode(dof) {\n    return (dof - 2 > 0) ? dof - 2 : 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randg(dof / 2) * 2;\n  },\n\n  variance: function variance(dof) {\n    return 2 * dof;\n  }\n});\n\n\n\n// extend exponential function with static methods\njStat.extend(jStat.exponential, {\n  pdf: function pdf(x, rate) {\n    return x < 0 ? 0 : rate * Math.exp(-rate * x);\n  },\n\n  cdf: function cdf(x, rate) {\n    return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n  },\n\n  inv: function(p, rate) {\n    return -Math.log(1 - p) / rate;\n  },\n\n  mean : function(rate) {\n    return 1 / rate;\n  },\n\n  median: function (rate) {\n    return (1 / rate) * Math.log(2);\n  },\n\n  mode: function mode(/*rate*/) {\n    return 0;\n  },\n\n  sample: function sample(rate) {\n    return -1 / rate * Math.log(jStat._random_fn());\n  },\n\n  variance : function(rate) {\n    return Math.pow(rate, -2);\n  }\n});\n\n\n\n// extend gamma function with static methods\njStat.extend(jStat.gamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                    jStat.gammaln(shape) - shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(shape, x / scale);\n  },\n\n  inv: function(p, shape, scale) {\n    return jStat.gammapinv(p, shape) * scale;\n  },\n\n  mean : function(shape, scale) {\n    return shape * scale;\n  },\n\n  mode: function mode(shape, scale) {\n    if(shape > 1) return (shape - 1) * scale;\n    return undefined;\n  },\n\n  sample: function sample(shape, scale) {\n    return jStat.randg(shape) * scale;\n  },\n\n  variance: function variance(shape, scale) {\n    return shape * scale * scale;\n  }\n});\n\n// extend inverse gamma function with static methods\njStat.extend(jStat.invgamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -\n                    jStat.gammaln(shape) + shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return 1 - jStat.lowRegGamma(shape, scale / x);\n  },\n\n  inv: function(p, shape, scale) {\n    return scale / jStat.gammapinv(1 - p, shape);\n  },\n\n  mean : function(shape, scale) {\n    return (shape > 1) ? scale / (shape - 1) : undefined;\n  },\n\n  mode: function mode(shape, scale) {\n    return scale / (shape + 1);\n  },\n\n  sample: function sample(shape, scale) {\n    return scale / jStat.randg(shape);\n  },\n\n  variance: function variance(shape, scale) {\n    if (shape <= 2)\n      return undefined;\n    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n  }\n});\n\n\n// extend kumaraswamy function with static methods\njStat.extend(jStat.kumaraswamy, {\n  pdf: function pdf(x, alpha, beta) {\n    if (x === 0 && alpha === 1)\n      return beta;\n    else if (x === 1 && beta === 1)\n      return alpha;\n    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *\n                    Math.log(x) + (beta - 1) *\n                    Math.log(1 - Math.pow(x, alpha)));\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    if (x < 0)\n      return 0;\n    else if (x > 1)\n      return 1;\n    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));\n  },\n\n  inv: function inv(p, alpha, beta) {\n    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n  },\n\n  mean : function(alpha, beta) {\n    return (beta * jStat.gammafn(1 + 1 / alpha) *\n            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));\n  },\n\n  median: function median(alpha, beta) {\n    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n  },\n\n  mode: function mode(alpha, beta) {\n    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n      return undefined;\n    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n  },\n\n  variance: function variance(/*alpha, beta*/) {\n    throw new Error('variance not yet implemented');\n    // TODO: complete this\n  }\n});\n\n\n\n// extend lognormal function with static methods\njStat.extend(jStat.lognormal, {\n  pdf: function pdf(x, mu, sigma) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n                    (2 * sigma * sigma));\n  },\n\n  cdf: function cdf(x, mu, sigma) {\n    if (x < 0)\n      return 0;\n    return 0.5 +\n        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n  },\n\n  inv: function(p, mu, sigma) {\n    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n  },\n\n  mean: function mean(mu, sigma) {\n    return Math.exp(mu + sigma * sigma / 2);\n  },\n\n  median: function median(mu/*, sigma*/) {\n    return Math.exp(mu);\n  },\n\n  mode: function mode(mu, sigma) {\n    return Math.exp(mu - sigma * sigma);\n  },\n\n  sample: function sample(mu, sigma) {\n    return Math.exp(jStat.randn() * sigma + mu);\n  },\n\n  variance: function variance(mu, sigma) {\n    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n  }\n});\n\n\n\n// extend noncentralt function with static methods\njStat.extend(jStat.noncentralt, {\n  pdf: function pdf(x, dof, ncp) {\n    var tol = 1e-14;\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.pdf(x, dof)\n\n    if (Math.abs(x) < tol) {  // different formula for x == 0\n      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -\n                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n    }\n\n    // formula for x != 0\n    return dof / x *\n        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -\n         jStat.noncentralt.cdf(x, dof, ncp));\n  },\n\n  cdf: function cdf(x, dof, ncp) {\n    var tol = 1e-14;\n    var min_iterations = 200;\n\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.cdf(x, dof);\n\n    // turn negative x into positive and flip result afterwards\n    var flip = false;\n    if (x < 0) {\n      flip = true;\n      ncp = -ncp;\n    }\n\n    var prob = jStat.normal.cdf(-ncp, 0, 1);\n    var value = tol + 1;\n    // use value at last two steps to determine convergence\n    var lastvalue = value;\n    var y = x * x / (x * x + dof);\n    var j = 0;\n    var p = Math.exp(-ncp * ncp / 2);\n    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -\n                     jStat.gammaln(3 / 2)) * ncp;\n    while (j < min_iterations || lastvalue > tol || value > tol) {\n      lastvalue = value;\n      if (j > 0) {\n        p *= (ncp * ncp) / (2 * j);\n        q *= (ncp * ncp) / (2 * (j + 1 / 2));\n      }\n      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +\n          q * jStat.beta.cdf(y, j+1, dof/2);\n      prob += 0.5 * value;\n      j++;\n    }\n\n    return flip ? (1 - prob) : prob;\n  }\n});\n\n\n// extend normal function with static methods\njStat.extend(jStat.normal, {\n  pdf: function pdf(x, mean, std) {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n  },\n\n  cdf: function cdf(x, mean, std) {\n    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n  },\n\n  inv: function(p, mean, std) {\n    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n  },\n\n  mean : function(mean/*, std*/) {\n    return mean;\n  },\n\n  median: function median(mean/*, std*/) {\n    return mean;\n  },\n\n  mode: function (mean/*, std*/) {\n    return mean;\n  },\n\n  sample: function sample(mean, std) {\n    return jStat.randn() * std + mean;\n  },\n\n  variance : function(mean, std) {\n    return std * std;\n  }\n});\n\n\n\n// extend pareto function with static methods\njStat.extend(jStat.pareto, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return 1 - Math.pow(scale / x, shape);\n  },\n\n  inv: function inv(p, scale, shape) {\n    return scale / Math.pow(1 - p, 1 / shape);\n  },\n\n  mean: function mean(scale, shape) {\n    if (shape <= 1)\n      return undefined;\n    return (shape * Math.pow(scale, shape)) / (shape - 1);\n  },\n\n  median: function median(scale, shape) {\n    return scale * (shape * Math.SQRT2);\n  },\n\n  mode: function mode(scale/*, shape*/) {\n    return scale;\n  },\n\n  variance : function(scale, shape) {\n    if (shape <= 2)\n      return undefined;\n    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));\n  }\n});\n\n\n\n// extend studentt function with static methods\njStat.extend(jStat.studentt, {\n  pdf: function pdf(x, dof) {\n    dof = dof > 1e100 ? 1e100 : dof;\n    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *\n        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    var dof2 = dof / 2;\n    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /\n                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n  },\n\n  inv: function(p, dof) {\n    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt(dof * (1 - x) / x);\n    return (p > 0.5) ? x : -x;\n  },\n\n  mean: function mean(dof) {\n    return (dof > 1) ? 0 : undefined;\n  },\n\n  median: function median(/*dof*/) {\n    return 0;\n  },\n\n  mode: function mode(/*dof*/) {\n    return 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n  },\n\n  variance: function variance(dof) {\n    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;\n  }\n});\n\n\n\n// extend weibull function with static methods\njStat.extend(jStat.weibull, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < 0 || scale < 0 || shape < 0)\n      return 0;\n    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n        Math.exp(-(Math.pow((x / scale), shape)));\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n  },\n\n  inv: function(p, scale, shape) {\n    return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n  },\n\n  mean : function(scale, shape) {\n    return scale * jStat.gammafn(1 + 1 / shape);\n  },\n\n  median: function median(scale, shape) {\n    return scale * Math.pow(Math.log(2), 1 / shape);\n  },\n\n  mode: function mode(scale, shape) {\n    if (shape <= 1)\n      return 0;\n    return scale * Math.pow((shape - 1) / shape, 1 / shape);\n  },\n\n  sample: function sample(scale, shape) {\n    return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n  },\n\n  variance: function variance(scale, shape) {\n    return scale * scale * jStat.gammafn(1 + 2 / shape) -\n        Math.pow(jStat.weibull.mean(scale, shape), 2);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.uniform, {\n  pdf: function pdf(x, a, b) {\n    return (x < a || x > b) ? 0 : 1 / (b - a);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (x - a) / (b - a);\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (p * (b - a));\n  },\n\n  mean: function mean(a, b) {\n    return 0.5 * (a + b);\n  },\n\n  median: function median(a, b) {\n    return jStat.mean(a, b);\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n  },\n\n  variance: function variance(a, b) {\n    return Math.pow(b - a, 2) / 12;\n  }\n});\n\n\n// Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\nfunction betinc(x, a, b, eps) {\n  var a0 = 0;\n  var b0 = 1;\n  var a1 = 1;\n  var b1 = 1;\n  var m9 = 0;\n  var a2 = 0;\n  var c9;\n\n  while (Math.abs((a1 - a2) / a1) > eps) {\n    a2 = a1;\n    c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n    a0 = a1 + c9 * a0;\n    b0 = b1 + c9 * b0;\n    m9 = m9 + 1;\n    c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n    a1 = a0 + c9 * a1;\n    b1 = b0 + c9 * b1;\n    a0 = a0 / b1;\n    b0 = b0 / b1;\n    a1 = a1 / b1;\n    b1 = 1;\n  }\n\n  return a1 / a;\n}\n\n\n// extend uniform function with static methods\njStat.extend(jStat.binomial, {\n  pdf: function pdf(k, n, p) {\n    return (p === 0 || p === 1) ?\n      ((n * p) === k ? 1 : 0) :\n      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n  },\n\n  cdf: function cdf(x, n, p) {\n    var betacdf;\n    var eps = 1e-10;\n\n    if (x < 0)\n      return 0;\n    if (x >= n)\n      return 1;\n    if (p < 0 || p > 1 || n <= 0)\n      return NaN;\n\n    x = Math.floor(x);\n    var z = p;\n    var a = x + 1;\n    var b = n - x;\n    var s = a + b;\n    var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) -\n                      jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n\n    if (z < (a + 1) / (s + 2))\n      betacdf = bt * betinc(z, a, b, eps);\n    else\n      betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n\n    return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.negbin, {\n  pdf: function pdf(k, r, p) {\n    if (k !== k >>> 0)\n      return false;\n    if (k < 0)\n      return 0;\n    return jStat.combination(k + r - 1, r - 1) *\n        Math.pow(1 - p, k) * Math.pow(p, r);\n  },\n\n  cdf: function cdf(x, r, p) {\n    var sum = 0,\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sum += jStat.negbin.pdf(k, r, p);\n    }\n    return sum;\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.hypgeom, {\n  pdf: function pdf(k, N, m, n) {\n    // Hypergeometric PDF.\n\n    // A simplification of the CDF algorithm below.\n\n    // k = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(k !== k | 0) {\n      return false;\n    } else if(k < 0 || k < m - (N - n)) {\n      // It's impossible to have this few successes drawn.\n      return 0;\n    } else if(k > n || k > m) {\n      // It's impossible to have this many successes drawn.\n      return 0;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return jStat.hypgeom.pdf(m - k, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.pdf(k, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate product to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < k; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledPDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          scaledPDF *= 1 - (m / (N - samplesDone));\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledPDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledPDF));\n    }\n  },\n\n  cdf: function cdf(x, N, m, n) {\n    // Hypergeometric CDF.\n\n    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n    // and comes from his hypergeometric test calculator at\n    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n    // x = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(x < 0 || x < m - (N - n)) {\n      // It's impossible to have this few successes drawn or fewer.\n      return 0;\n    } else if(x >= n || x >= m) {\n      // We will always have this many successes or fewer.\n      return 1;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.cdf(x, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate sum to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // Holds the intermediate, scaled total CDF.\n      var scaledCDF = 1;\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < x; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledCDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          var factor = 1 - (m / (N - samplesDone));\n\n          scaledPDF *= factor;\n          scaledCDF *= factor;\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n        // Add to the CDF answer.\n        scaledCDF += scaledPDF;\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledCDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledCDF));\n    }\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.poisson, {\n  pdf: function pdf(k, l) {\n    if (l < 0 || (k % 1) !== 0 || k < 0) {\n      return 0;\n    }\n\n    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n  },\n\n  cdf: function cdf(x, l) {\n    var sumarr = [],\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sumarr.push(jStat.poisson.pdf(k, l));\n    }\n    return jStat.sum(sumarr);\n  },\n\n  mean : function(l) {\n    return l;\n  },\n\n  variance : function(l) {\n    return l;\n  },\n\n  sampleSmall: function sampleSmall(l) {\n    var p = 1, k = 0, L = Math.exp(-l);\n    do {\n      k++;\n      p *= jStat._random_fn();\n    } while (p > L);\n    return k - 1;\n  },\n\n  sampleLarge: function sampleLarge(l) {\n    var lam = l;\n    var k;\n    var U, V, slam, loglam, a, b, invalpha, vr, us;\n\n    slam = Math.sqrt(lam);\n    loglam = Math.log(lam);\n    b = 0.931 + 2.53 * slam;\n    a = -0.059 + 0.02483 * b;\n    invalpha = 1.1239 + 1.1328 / (b - 3.4);\n    vr = 0.9277 - 3.6224 / (b - 2);\n\n    while (1) {\n      U = Math.random() - 0.5;\n      V = Math.random();\n      us = 0.5 - Math.abs(U);\n      k = Math.floor((2 * a / us + b) * U + lam + 0.43);\n      if ((us >= 0.07) && (V <= vr)) {\n          return k;\n      }\n      if ((k < 0) || ((us < 0.013) && (V > us))) {\n          continue;\n      }\n      /* log(V) == log(0.0) ok here */\n      /* if U==0.0 so that us==0.0, log is ok since always returns */\n      if ((Math.log(V) + Math.log(invalpha) - Math.log(a / (us * us) + b)) <= (-lam + k * loglam - jStat.loggam(k + 1))) {\n          return k;\n      }\n    }\n  },\n\n  sample: function sample(l) {\n    if (l < 10)\n      return this.sampleSmall(l);\n    else\n      return this.sampleLarge(l);\n  }\n});\n\n// extend triangular function with static methods\njStat.extend(jStat.triangular, {\n  pdf: function pdf(x, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (x < a || x > b) {\n        return 0;\n      } else if (x < c) {\n          return (2 * (x - a)) / ((b - a) * (c - a));\n      } else if (x === c) {\n          return (2 / (b - a));\n      } else { // x > c\n          return (2 * (b - x)) / ((b - a) * (b - c));\n      }\n    }\n  },\n\n  cdf: function cdf(x, a, b, c) {\n    if (b <= a || c < a || c > b)\n      return NaN;\n    if (x <= a)\n      return 0;\n    else if (x >= b)\n      return 1;\n    if (x <= c)\n      return Math.pow(x - a, 2) / ((b - a) * (c - a));\n    else // x > c\n      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n  },\n\n  inv: function inv(p, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (p <= ((c - a) / (b - a))) {\n        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n      } else { // p > ((c - a) / (b - a))\n        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));\n      }\n    }\n  },\n\n  mean: function mean(a, b, c) {\n    return (a + b + c) / 3;\n  },\n\n  median: function median(a, b, c) {\n    if (c <= (a + b) / 2) {\n      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n    } else if (c > (a + b) / 2) {\n      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n    }\n  },\n\n  mode: function mode(a, b, c) {\n    return c;\n  },\n\n  sample: function sample(a, b, c) {\n    var u = jStat._random_fn();\n    if (u < ((c - a) / (b - a)))\n      return a + Math.sqrt(u * (b - a) * (c - a))\n    return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n  },\n\n  variance: function variance(a, b, c) {\n    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n  }\n});\n\n\n// extend arcsine function with static methods\njStat.extend(jStat.arcsine, {\n  pdf: function pdf(x, a, b) {\n    if (b <= a) return NaN;\n\n    return (x <= a || x >= b) ? 0 :\n      (2 / Math.PI) *\n        Math.pow(Math.pow(b - a, 2) -\n                  Math.pow(2 * x - a - b, 2), -0.5);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n  },\n\n  mean: function mean(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  median: function median(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return ((a + b) / 2) + ((b - a) / 2) *\n      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n  },\n\n  variance: function variance(a, b) {\n    if (b <= a) return NaN;\n    return Math.pow(b - a, 2) / 8;\n  }\n});\n\n\nfunction laplaceSign(x) { return x / Math.abs(x); }\n\njStat.extend(jStat.laplace, {\n  pdf: function pdf(x, mu, b) {\n    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);\n  },\n\n  cdf: function cdf(x, mu, b) {\n    if (b <= 0) { return 0; }\n\n    if(x < mu) {\n      return 0.5 * Math.exp((x - mu) / b);\n    } else {\n      return 1 - 0.5 * Math.exp(- (x - mu) / b);\n    }\n  },\n\n  mean: function(mu/*, b*/) {\n    return mu;\n  },\n\n  median: function(mu/*, b*/) {\n    return mu;\n  },\n\n  mode: function(mu/*, b*/) {\n    return mu;\n  },\n\n  variance: function(mu, b) {\n    return 2 * b * b;\n  },\n\n  sample: function sample(mu, b) {\n    var u = jStat._random_fn() - 0.5;\n\n    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));\n  }\n});\n\nfunction tukeyWprob(w, rr, cc) {\n  var nleg = 12;\n  var ihalf = 6;\n\n  var C1 = -30;\n  var C2 = -50;\n  var C3 = 60;\n  var bb   = 8;\n  var wlar = 3;\n  var wincr1 = 2;\n  var wincr2 = 3;\n  var xleg = [\n    0.981560634246719250690549090149,\n    0.904117256370474856678465866119,\n    0.769902674194304687036893833213,\n    0.587317954286617447296702418941,\n    0.367831498998180193752691536644,\n    0.125233408511468915472441369464\n  ];\n  var aleg = [\n    0.047175336386511827194615961485,\n    0.106939325995318430960254718194,\n    0.160078328543346226334652529543,\n    0.203167426723065921749064455810,\n    0.233492536538354808760849898925,\n    0.249147045813402785000562436043\n  ];\n\n  var qsqz = w * 0.5;\n\n  // if w >= 16 then the integral lower bound (occurs for c=20)\n  // is 0.99999999999995 so return a value of 1.\n\n  if (qsqz >= bb)\n    return 1.0;\n\n  // find (f(w/2) - 1) ^ cc\n  // (first term in integral of hartley's form).\n\n  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n  // if pr_w ^ cc < 2e-22 then set pr_w = 0\n  if (pr_w >= Math.exp(C2 / cc))\n    pr_w = Math.pow(pr_w, cc);\n  else\n    pr_w = 0.0;\n\n  // if w is large then the second component of the\n  // integral is small, so fewer intervals are needed.\n\n  var wincr;\n  if (w > wlar)\n    wincr = wincr1;\n  else\n    wincr = wincr2;\n\n  // find the integral of second term of hartley's form\n  // for the integral of the range for equal-length\n  // intervals using legendre quadrature.  limits of\n  // integration are from (w/2, 8).  two or three\n  // equal-length intervals are used.\n\n  // blb and bub are lower and upper limits of integration.\n\n  var blb = qsqz;\n  var binc = (bb - qsqz) / wincr;\n  var bub = blb + binc;\n  var einsum = 0.0;\n\n  // integrate over each interval\n\n  var cc1 = cc - 1.0;\n  for (var wi = 1; wi <= wincr; wi++) {\n    var elsum = 0.0;\n    var a = 0.5 * (bub + blb);\n\n    // legendre quadrature with order = nleg\n\n    var b = 0.5 * (bub - blb);\n\n    for (var jj = 1; jj <= nleg; jj++) {\n      var j, xx;\n      if (ihalf < jj) {\n        j = (nleg - jj) + 1;\n        xx = xleg[j-1];\n      } else {\n        j = jj;\n        xx = -xleg[j-1];\n      }\n      var c = b * xx;\n      var ac = a + c;\n\n      // if exp(-qexpo/2) < 9e-14,\n      // then doesn't contribute to integral\n\n      var qexpo = ac * ac;\n      if (qexpo > C3)\n        break;\n\n      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n      // if rinsum ^ (cc-1) < 9e-14,\n      // then doesn't contribute to integral\n\n      var rinsum = (pplus * 0.5) - (pminus * 0.5);\n      if (rinsum >= Math.exp(C1 / cc1)) {\n        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  // if pr_w ^ rr < 9e-14, then return 0\n  pr_w += einsum;\n  if (pr_w <= Math.exp(C1 / rr))\n    return 0;\n\n  pr_w = Math.pow(pr_w, rr);\n  if (pr_w >= 1) // 1 was iMax was eps\n    return 1;\n  return pr_w;\n}\n\nfunction tukeyQinv(p, c, v) {\n  var p0 = 0.322232421088;\n  var q0 = 0.993484626060e-01;\n  var p1 = -1.0;\n  var q1 = 0.588581570495;\n  var p2 = -0.342242088547;\n  var q2 = 0.531103462366;\n  var p3 = -0.204231210125;\n  var q3 = 0.103537752850;\n  var p4 = -0.453642210148e-04;\n  var q4 = 0.38560700634e-02;\n  var c1 = 0.8832;\n  var c2 = 0.2368;\n  var c3 = 1.214;\n  var c4 = 1.208;\n  var c5 = 1.4142;\n  var vmax = 120.0;\n\n  var ps = 0.5 - 0.5 * p;\n  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)\n     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  var q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * Math.log(c - 1.0) + c5);\n}\n\njStat.extend(jStat.tukey, {\n  cdf: function cdf(q, nmeans, df) {\n    // Identical implementation as the R ptukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var nlegq = 16;\n    var ihalfq = 8;\n\n    var eps1 = -30.0;\n    var eps2 = 1.0e-14;\n    var dhaf  = 100.0;\n    var dquar = 800.0;\n    var deigh = 5000.0;\n    var dlarg = 25000.0;\n    var ulen1 = 1.0;\n    var ulen2 = 0.5;\n    var ulen3 = 0.25;\n    var ulen4 = 0.125;\n    var xlegq = [\n      0.989400934991649932596154173450,\n      0.944575023073232576077988415535,\n      0.865631202387831743880467897712,\n      0.755404408355003033895101194847,\n      0.617876244402643748446671764049,\n      0.458016777657227386342419442984,\n      0.281603550779258913230460501460,\n      0.950125098376374401853193354250e-1\n    ];\n    var alegq = [\n      0.271524594117540948517805724560e-1,\n      0.622535239386478928628438369944e-1,\n      0.951585116824927848099251076022e-1,\n      0.124628971255533872052476282192,\n      0.149595988816576732081501730547,\n      0.169156519395002538189312079030,\n      0.182603415044923588866763667969,\n      0.189450610455068496285396723208\n    ];\n\n    if (q <= 0)\n      return 0;\n\n    // df must be > 1\n    // there must be at least two values\n\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (!Number.isFinite(q))\n      return 1;\n\n    if (df > dlarg)\n      return tukeyWprob(q, rr, cc);\n\n    // calculate leading constant\n\n    var f2 = df * 0.5;\n    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);\n    var f21 = f2 - 1.0;\n\n    // integral is divided into unit, half-unit, quarter-unit, or\n    // eighth-unit length intervals depending on the value of the\n    // degrees of freedom.\n\n    var ff4 = df * 0.25;\n    var ulen;\n    if      (df <= dhaf)  ulen = ulen1;\n    else if (df <= dquar) ulen = ulen2;\n    else if (df <= deigh) ulen = ulen3;\n    else                  ulen = ulen4;\n\n    f2lf += Math.log(ulen);\n\n    // integrate over each subinterval\n\n    var ans = 0.0;\n\n    for (var i = 1; i <= 50; i++) {\n      var otsum = 0.0;\n\n      // legendre quadrature with order = nlegq\n      // nodes (stored in xlegq) are symmetric around zero.\n\n      var twa1 = (2 * i - 1) * ulen;\n\n      for (var jj = 1; jj <= nlegq; jj++) {\n        var j, t1;\n        if (ihalfq < jj) {\n          j = jj - ihalfq - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))\n              - (((xlegq[j] * ulen) + twa1) * ff4);\n        } else {\n          j = jj - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))\n              + (((xlegq[j] * ulen) - twa1) * ff4);\n        }\n\n        // if exp(t1) < 9e-14, then doesn't contribute to integral\n        var qsqz;\n        if (t1 >= eps1) {\n          if (ihalfq < jj) {\n            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);\n          } else {\n            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);\n          }\n\n          // call wprob to find integral of range portion\n\n          var wprb = tukeyWprob(qsqz, rr, cc);\n          var rotsum = (wprb * alegq[j]) * Math.exp(t1);\n          otsum += rotsum;\n        }\n        // end legendre integral for interval i\n        // L200:\n      }\n\n      // if integral for interval i < 1e-14, then stop.\n      // However, in order to avoid small area under left tail,\n      // at least  1 / ulen  intervals are calculated.\n      if (i * ulen >= 1.0 && otsum <= eps2)\n        break;\n\n      // end of interval i\n      // L330:\n\n      ans += otsum;\n    }\n\n    if (otsum > eps2) { // not converged\n      throw new Error('tukey.cdf failed to converge');\n    }\n    if (ans > 1)\n      ans = 1;\n    return ans;\n  },\n\n  inv: function(p, nmeans, df) {\n    // Identical implementation as the R qtukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var eps = 0.0001;\n    var maxiter = 50;\n\n    // df must be > 1 ; there must be at least two values\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (p < 0 || p > 1) return NaN;\n    if (p === 0) return 0;\n    if (p === 1) return Infinity;\n\n    // Initial value\n\n    var x0 = tukeyQinv(p, cc, df);\n\n    // Find prob(value < x0)\n\n    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n    // Find the second iterate and prob(value < x1).\n    // If the first iterate has probability value\n    // exceeding p then second iterate is 1 less than\n    // first iterate; otherwise it is 1 greater.\n\n    var x1;\n    if (valx0 > 0.0)\n      x1 = Math.max(0.0, x0 - 1.0);\n    else\n      x1 = x0 + 1.0;\n    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n    // Find new iterate\n\n    var ans;\n    for(var iter = 1; iter < maxiter; iter++) {\n      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));\n      valx0 = valx1;\n\n      // New iterate must be >= 0\n\n      x0 = x1;\n      if (ans < 0.0) {\n        ans = 0.0;\n        valx1 = -p;\n      }\n      // Find prob(value < new iterate)\n\n      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n      x1 = ans;\n\n      // If the difference between two successive\n      // iterates is less than eps, stop\n\n      var xabs = Math.abs(x1 - x0);\n      if (xabs < eps)\n        return ans;\n    }\n\n    throw new Error('tukey.inv failed to converge');\n  }\n});\n\n}(jStat, Math));\n/* Provides functions for the solution of linear system of equations, integration, extrapolation,\n * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n(function(jStat, Math) {\n\nvar push = Array.prototype.push;\nvar isArray = jStat.utils.isArray;\n\nfunction isUsable(arg) {\n  return isArray(arg) || arg instanceof jStat;\n}\n\njStat.extend({\n\n  // add a vector/matrix to a vector/matrix or scalar\n  add: function add(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value + arg[row][col];\n      });\n    }\n    return jStat.map(arr, function(value) { return value + arg; });\n  },\n\n  // subtract a vector or scalar from the vector\n  subtract: function subtract(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value - arg[row][col] || 0;\n      });\n    }\n    return jStat.map(arr, function(value) { return value - arg; });\n  },\n\n  // matrix division\n  divide: function divide(arr, arg) {\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.multiply(arr, jStat.inv(arg));\n    }\n    return jStat.map(arr, function(value) { return value / arg; });\n  },\n\n  // matrix multiplication\n  multiply: function multiply(arr, arg) {\n    var row, col, nrescols, sum, nrow, ncol, res, rescols;\n    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n    if (arr.length === undefined && arg.length === undefined) {\n      return arr * arg;\n    }\n    nrow = arr.length,\n    ncol = arr[0].length,\n    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),\n    rescols = 0;\n    if (isUsable(arg)) {\n      for (; rescols < nrescols; rescols++) {\n        for (row = 0; row < nrow; row++) {\n          sum = 0;\n          for (col = 0; col < ncol; col++)\n          sum += arr[row][col] * arg[col][rescols];\n          res[row][rescols] = sum;\n        }\n      }\n      return (nrow === 1 && rescols === 1) ? res[0][0] : res;\n    }\n    return jStat.map(arr, function(value) { return value * arg; });\n  },\n\n  // outer([1,2,3],[4,5,6])\n  // ===\n  // [[1],[2],[3]] times [[4,5,6]]\n  // ->\n  // [[4,5,6],[8,10,12],[12,15,18]]\n  outer:function outer(A, B) {\n    return jStat.multiply(A.map(function(t){ return [t] }), [B]);\n  },\n\n\n  // Returns the dot product of two matricies\n  dot: function dot(arr, arg) {\n    if (!isUsable(arr[0])) arr = [ arr ];\n    if (!isUsable(arg[0])) arg = [ arg ];\n    // convert column to row vector\n    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,\n    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,\n    res = [],\n    row = 0,\n    nrow = left.length,\n    ncol = left[0].length,\n    sum, col;\n    for (; row < nrow; row++) {\n      res[row] = [];\n      sum = 0;\n      for (col = 0; col < ncol; col++)\n      sum += left[row][col] * right[row][col];\n      res[row] = sum;\n    }\n    return (res.length === 1) ? res[0] : res;\n  },\n\n  // raise every element by a scalar\n  pow: function pow(arr, arg) {\n    return jStat.map(arr, function(value) { return Math.pow(value, arg); });\n  },\n\n  // exponentiate every element\n  exp: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.exp(value); });\n  },\n\n  // generate the natural log of every element\n  log: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.log(value); });\n  },\n\n  // generate the absolute values of the vector\n  abs: function abs(arr) {\n    return jStat.map(arr, function(value) { return Math.abs(value); });\n  },\n\n  // computes the p-norm of the vector\n  // In the case that a matrix is passed, uses the first row as the vector\n  norm: function norm(arr, p) {\n    var nnorm = 0,\n    i = 0;\n    // check the p-value of the norm, and set for most common case\n    if (isNaN(p)) p = 2;\n    // check if multi-dimensional array, and make vector correction\n    if (isUsable(arr[0])) arr = arr[0];\n    // vector norm\n    for (; i < arr.length; i++) {\n      nnorm += Math.pow(Math.abs(arr[i]), p);\n    }\n    return Math.pow(nnorm, 1 / p);\n  },\n\n  // computes the angle between two vectors in rads\n  // In case a matrix is passed, this uses the first row as the vector\n  angle: function angle(arr, arg) {\n    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n  },\n\n  // augment one matrix by another\n  // Note: this function returns a matrix, not a jStat object\n  aug: function aug(a, b) {\n    var newarr = [];\n    var i;\n    for (i = 0; i < a.length; i++) {\n      newarr.push(a[i].slice());\n    }\n    for (i = 0; i < newarr.length; i++) {\n      push.apply(newarr[i], b[i]);\n    }\n    return newarr;\n  },\n\n  // The inv() function calculates the inverse of a matrix\n  // Create the inverse by augmenting the matrix by the identity matrix of the\n  // appropriate size, and then use G-J elimination on the augmented matrix.\n  inv: function inv(a) {\n    var rows = a.length;\n    var cols = a[0].length;\n    var b = jStat.identity(rows, cols);\n    var c = jStat.gauss_jordan(a, b);\n    var result = [];\n    var i = 0;\n    var j;\n\n    //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n    for (; i < rows; i++) {\n      result[i] = [];\n      for (j = cols; j < c[0].length; j++)\n        result[i][j - cols] = c[i][j];\n    }\n    return result;\n  },\n\n  // calculate the determinant of a matrix\n  det: function det(a) {\n    if (a.length === 2) {\n      return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n    }\n\n    var determinant = 0;\n    for (var i = 0; i < a.length; i++) {\n      // build a sub matrix without column `i`\n      var submatrix = [];\n      for (var row = 1; row < a.length; row++) {\n        submatrix[row - 1] = [];\n        for (var col = 0; col < a.length; col++) {\n          if (col < i) {\n            submatrix[row - 1][col] = a[row][col];\n          } else if (col > i) {\n            submatrix[row - 1][col - 1] = a[row][col];\n          }\n        }\n      }\n\n      // alternate between + and - between determinants\n      var sign = i % 2 ? -1 : 1;\n      determinant += det(submatrix) * a[0][i] * sign;\n    }\n\n    return determinant\n  },\n\n  gauss_elimination: function gauss_elimination(a, b) {\n    var i = 0,\n    j = 0,\n    n = a.length,\n    m = a[0].length,\n    factor = 1,\n    sum = 0,\n    x = [],\n    maug, pivot, temp, k;\n    a = jStat.aug(a, b);\n    maug = a[0].length;\n    for(i = 0; i < n; i++) {\n      pivot = a[i][i];\n      j = i;\n      for (k = i + 1; k < m; k++) {\n        if (pivot < Math.abs(a[k][i])) {\n          pivot = a[k][i];\n          j = k;\n        }\n      }\n      if (j != i) {\n        for(k = 0; k < maug; k++) {\n          temp = a[i][k];\n          a[i][k] = a[j][k];\n          a[j][k] = temp;\n        }\n      }\n      for (j = i + 1; j < n; j++) {\n        factor = a[j][i] / a[i][i];\n        for(k = i; k < maug; k++) {\n          a[j][k] = a[j][k] - factor * a[i][k];\n        }\n      }\n    }\n    for (i = n - 1; i >= 0; i--) {\n      sum = 0;\n      for (j = i + 1; j<= n - 1; j++) {\n        sum = sum + x[j] * a[i][j];\n      }\n      x[i] =(a[i][maug - 1] - sum) / a[i][i];\n    }\n    return x;\n  },\n\n  gauss_jordan: function gauss_jordan(a, b) {\n    var m = jStat.aug(a, b);\n    var h = m.length;\n    var w = m[0].length;\n    var c = 0;\n    var x, y, y2;\n    // find max pivot\n    for (y = 0; y < h; y++) {\n      var maxrow = y;\n      for (y2 = y+1; y2 < h; y2++) {\n        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n          maxrow = y2;\n      }\n      var tmp = m[y];\n      m[y] = m[maxrow];\n      m[maxrow] = tmp\n      for (y2 = y+1; y2 < h; y2++) {\n        c = m[y2][y] / m[y][y];\n        for (x = y; x < w; x++) {\n          m[y2][x] -= m[y][x] * c;\n        }\n      }\n    }\n    // backsubstitute\n    for (y = h-1; y >= 0; y--) {\n      c = m[y][y];\n      for (y2 = 0; y2 < y; y2++) {\n        for (x = w-1; x > y-1; x--) {\n          m[y2][x] -= m[y][x] * m[y2][y] / c;\n        }\n      }\n      m[y][y] /= c;\n      for (x = h; x < w; x++) {\n        m[y][x] /= c;\n      }\n    }\n    return m;\n  },\n\n  // solve equation\n  // Ax=b\n  // A is upper triangular matrix\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[1,2,3]\n  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n  // if you use matrix style\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[[1],[2],[3]]\n  // will return [[2.666],[0.1666],[1.666]]\n  triaUpSolve: function triaUpSolve(A, b) {\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n    var matrix_mode = false;\n\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size - 1, -1, -1).forEach(function(i) {\n      parts = jStat.arange(i + 1, size).map(function(j) {\n        return x[j] * A[i][j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    });\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n  triaLowSolve: function triaLowSolve(A, b) {\n    // like to triaUpSolve but A is lower triangular matrix\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n\n    var matrix_mode=false;\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(j) {\n        return A[i][j] * x[j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    })\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n\n  // A -> [L,U]\n  // A=LU\n  // L is lower triangular matrix\n  // U is upper triangular matrix\n  lu: function lu(A) {\n    var size = A.length;\n    //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n    var L = jStat.identity(size);\n    var R = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(t) {\n      R[0][t] = A[0][t];\n    });\n    jStat.arange(1, size).forEach(function(l) {\n      jStat.arange(l).forEach(function(i) {\n        parts = jStat.arange(i).map(function(jj) {\n          return L[l][jj] * R[jj][i];\n        });\n        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n      });\n      jStat.arange(l, size).forEach(function(j) {\n        parts = jStat.arange(l).map(function(jj) {\n          return L[l][jj] * R[jj][j];\n        });\n        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n      });\n    });\n    return [L, R];\n  },\n\n  // A -> T\n  // A=TT'\n  // T is lower triangular matrix\n  cholesky: function cholesky(A) {\n    var size = A.length;\n    var T = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(t) {\n        return Math.pow(T[i][t],2);\n      });\n      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n      jStat.arange(i + 1, size).forEach(function(j) {\n        parts = jStat.arange(i).map(function(t) {\n          return T[i][t] * T[j][t];\n        });\n        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n      });\n    });\n    return T;\n  },\n\n\n  gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n    var i = 0;\n    var j = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n    c = jStat.multiply(jStat.inv(d), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  gauss_seidel: function gauss_seidel(a, b, x, r) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i = i + 1;\n    }\n    return xk;\n  },\n\n  SOR: function SOR(a, b, x, r, w) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),\n                       jStat.subtract(jStat.multiply(d, 1 - w),\n                                      jStat.multiply(u, w)));\n    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,\n        jStat.multiply(l, w))), b), w);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  householder: function householder(a) {\n    var m = a.length;\n    var n = a[0].length;\n    var i = 0;\n    var w = [];\n    var p = [];\n    var alpha, r, k, j, factor;\n    for (; i < m - 1; i++) {\n      alpha = 0;\n      for (j = i + 1; j < n; j++)\n      alpha += (a[j][i] * a[j][i]);\n      factor = (a[i + 1][i] > 0) ? -1 : 1;\n      alpha = factor * Math.sqrt(alpha);\n      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));\n      w = jStat.zeros(m, 1);\n      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n      p = jStat.subtract(jStat.identity(m, n),\n          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n      a = jStat.multiply(p, jStat.multiply(a, p));\n    }\n    return a;\n  },\n\n  // A -> [Q,R]\n  // Q is orthogonal matrix\n  // R is upper triangular\n  QR: (function() {\n    // x -> Q\n    // find a orthogonal matrix Q st.\n    // Qx=y\n    // y is [||x||,0,0,...]\n\n    // quick ref\n    var sum   = jStat.sum;\n    var range = jStat.arange;\n\n    function qr2(x) {\n      // quick impletation\n      // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n      var n = x.length;\n      var p = x[0].length;\n\n      var r = jStat.zeros(p, p);\n      x = jStat.copy(x);\n\n      var i,j,k;\n      for(j = 0; j < p; j++){\n        r[j][j] = Math.sqrt(sum(range(n).map(function(i){\n          return x[i][j] * x[i][j];\n        })));\n        for(i = 0; i < n; i++){\n          x[i][j] = x[i][j] / r[j][j];\n        }\n        for(k = j+1; k < p; k++){\n          r[j][k] = sum(range(n).map(function(i){\n            return x[i][j] * x[i][k];\n          }));\n          for(i = 0; i < n; i++){\n            x[i][k] = x[i][k] - x[i][j]*r[j][k];\n          }\n        }\n      }\n      return [x, r];\n    }\n\n    return qr2;\n  }()),\n\n  lstsq: (function() {\n    // solve least squard problem for Ax=b as QR decomposition way if b is\n    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n    function R_I(A) {\n      A = jStat.copy(A);\n      var size = A.length;\n      var I = jStat.identity(size);\n      jStat.arange(size - 1, -1, -1).forEach(function(i) {\n        jStat.sliceAssign(\n            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n        jStat.sliceAssign(\n            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n        jStat.arange(i).forEach(function(j) {\n          var c = jStat.multiply(A[j][i], -1);\n          var Aj = jStat.slice(A, { row: j });\n          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n          var Ij = jStat.slice(I, { row: j });\n          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n        })\n      });\n      return I;\n    }\n\n    function qr_solve(A, b){\n      var array_mode = false;\n      if (b[0].length === undefined) {\n        // [c1,c2,c3] mode\n        b = b.map(function(x){ return [x] });\n        array_mode = true;\n      }\n      var QR = jStat.QR(A);\n      var Q = QR[0];\n      var R = QR[1];\n      var attrs = A[0].length;\n      var Q1 = jStat.slice(Q,{col:{end:attrs}});\n      var R1 = jStat.slice(R,{row:{end:attrs}});\n      var RI = R_I(R1);\n      var Q2 = jStat.transpose(Q1);\n\n      if(Q2[0].length === undefined){\n        Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n      var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n      if(x.length === undefined){\n        x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n\n      if (array_mode)\n        return x.map(function(i){ return i[0] });\n      return x;\n    }\n\n    return qr_solve;\n  }()),\n\n  jacobi: function jacobi(a) {\n    var condition = 1;\n    var n = a.length;\n    var e = jStat.identity(n, n);\n    var ev = [];\n    var b, i, j, p, q, maxim, theta, s;\n    // condition === 1 only if tolerance is not reached\n    while (condition === 1) {\n      maxim = a[0][1];\n      p = 0;\n      q = 1;\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i != j) {\n            if (maxim < Math.abs(a[i][j])) {\n              maxim = Math.abs(a[i][j]);\n              p = i;\n              q = j;\n            }\n          }\n        }\n      }\n      if (a[p][p] === a[q][q])\n        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;\n      else\n        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n      s = jStat.identity(n, n);\n      s[p][p] = Math.cos(theta);\n      s[p][q] = -Math.sin(theta);\n      s[q][p] = Math.sin(theta);\n      s[q][q] = Math.cos(theta);\n      // eigen vector matrix\n      e = jStat.multiply(e, s);\n      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n      a = b;\n      condition = 0;\n      for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n          if (i != j && Math.abs(a[i][j]) > 0.001) {\n            condition = 1;\n          }\n        }\n      }\n    }\n    for (i = 0; i < n; i++) ev.push(a[i][i]);\n    //returns both the eigenvalue and eigenmatrix\n    return [e, ev];\n  },\n\n  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n    var k1, k2, u_j1, k3, k4;\n    if (order === 2) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h, u_j + k1);\n        u_j1 = u_j + (k1 + k2) / 2;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    if (order === 4) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n        k4 = h * f(t_j +h, u_j + k3);\n        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    return u_j;\n  },\n\n  romberg: function romberg(f, a, b, order) {\n    var i = 0;\n    var h = (b - a) / 2;\n    var x = [];\n    var h1 = [];\n    var g = [];\n    var m, a1, j, k, I;\n    while (i < order / 2) {\n      I = f(a);\n      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n      m = x.length;\n      for (j = 1; j < m - 1; j++) {\n        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);\n      }\n      I = (h / 3) * (I + f(b));\n      g[i] = I;\n      h /= 2;\n      i++;\n    }\n    a1 = g.length;\n    m = 1;\n    while (a1 !== 1) {\n      for (j = 0; j < a1 - 1; j++)\n      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a1 = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  richardson: function richardson(X, f, x, h) {\n    function pos(X, x) {\n      var i = 0;\n      var n = X.length;\n      var p;\n      for (; i < n; i++)\n        if (X[i] === x) p = i;\n      return p;\n    }\n    var h_min = Math.abs(x - X[pos(X, x) + 1]);\n    var i = 0;\n    var g = [];\n    var h1 = [];\n    var y1, y2, m, a, j;\n    while (h >= h_min) {\n      y1 = pos(X, x + h);\n      y2 = pos(X, x);\n      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n      h /= 2;\n      i++;\n    }\n    a = g.length;\n    m = 1;\n    while (a != 1) {\n      for (j = 0; j < a - 1; j++)\n        h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  simpson: function simpson(f, a, b, n) {\n    var h = (b - a) / n;\n    var I = f(a);\n    var x = [];\n    var j = a;\n    var k = 0;\n    var i = 1;\n    var m;\n    for (; j <= b; j = j + h, k++)\n      x[k] = j;\n    m = x.length;\n    for (; i < m - 1; i++) {\n      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);\n    }\n    return (h / 3) * (I + f(b));\n  },\n\n  hermite: function hermite(X, F, dF, value) {\n    var n = X.length;\n    var p = 0;\n    var i = 0;\n    var l = [];\n    var dl = [];\n    var A = [];\n    var B = [];\n    var j;\n    for (; i < n; i++) {\n      l[i] = 1;\n      for (j = 0; j < n; j++) {\n        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n      }\n      dl[i] = 0;\n      for (j = 0; j < n; j++) {\n        if (i != j) dl[i] += 1 / (X [i] - X[j]);\n      }\n      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n      B[i] = (value - X[i]) * (l[i] * l[i]);\n      p += (A[i] * F[i] + B[i] * dF[i]);\n    }\n    return p;\n  },\n\n  lagrange: function lagrange(X, F, value) {\n    var p = 0;\n    var i = 0;\n    var j, l;\n    var n = X.length;\n    for (; i < n; i++) {\n      l = F[i];\n      for (j = 0; j < n; j++) {\n        // calculating the lagrange polynomial L_i\n        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n      }\n      // adding the lagrange polynomials found above\n      p += l;\n    }\n    return p;\n  },\n\n  cubic_spline: function cubic_spline(X, F, value) {\n    var n = X.length;\n    var i = 0, j;\n    var A = [];\n    var B = [];\n    var alpha = [];\n    var c = [];\n    var h = [];\n    var b = [];\n    var d = [];\n    for (; i < n - 1; i++)\n      h[i] = X[i + 1] - X[i];\n    alpha[0] = 0;\n    for (i = 1; i < n - 1; i++) {\n      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -\n          (3 / h[i-1]) * (F[i] - F[i-1]);\n    }\n    for (i = 1; i < n - 1; i++) {\n      A[i] = [];\n      B[i] = [];\n      A[i][i-1] = h[i-1];\n      A[i][i] = 2 * (h[i - 1] + h[i]);\n      A[i][i+1] = h[i];\n      B[i][0] = alpha[i];\n    }\n    c = jStat.multiply(jStat.inv(A), B);\n    for (j = 0; j < n - 1; j++) {\n      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n    }\n    for (j = 0; j < n; j++) {\n      if (X[j] > value) break;\n    }\n    j -= 1;\n    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *\n        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n  },\n\n  gauss_quadrature: function gauss_quadrature() {\n    throw new Error('gauss_quadrature not yet implemented');\n  },\n\n  PCA: function PCA(X) {\n    var m = X.length;\n    var n = X[0].length;\n    var i = 0;\n    var j, temp1;\n    var u = [];\n    var D = [];\n    var result = [];\n    var temp2 = [];\n    var Y = [];\n    var Bt = [];\n    var B = [];\n    var C = [];\n    var V = [];\n    var Vt = [];\n    for (i = 0; i < m; i++) {\n      u[i] = jStat.sum(X[i]) / n;\n    }\n    for (i = 0; i < n; i++) {\n      B[i] = [];\n      for(j = 0; j < m; j++) {\n        B[i][j] = X[j][i] - u[j];\n      }\n    }\n    B = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      C[i] = [];\n      for (j = 0; j < m; j++) {\n        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);\n      }\n    }\n    result = jStat.jacobi(C);\n    V = result[0];\n    D = result[1];\n    Vt = jStat.transpose(V);\n    for (i = 0; i < D.length; i++) {\n      for (j = i; j < D.length; j++) {\n        if(D[i] < D[j])  {\n          temp1 = D[i];\n          D[i] = D[j];\n          D[j] = temp1;\n          temp2 = Vt[i];\n          Vt[i] = Vt[j];\n          Vt[j] = temp2;\n        }\n      }\n    }\n    Bt = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      Y[i] = [];\n      for (j = 0; j < Bt.length; j++) {\n        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n      }\n    }\n    return [X, D, Vt, Y];\n  }\n});\n\n// extend jStat.fn with methods that require one argument\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function(arg, func) {\n      var tmpthis = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n        }, 15);\n        return this;\n      }\n      if (typeof jStat[passfunc](this, arg) === 'number')\n        return jStat[passfunc](this, arg);\n      else\n        return jStat(jStat[passfunc](this, arg));\n    };\n  }(funcs[i]));\n}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\nvar slice = [].slice;\nvar isNumber = jStat.utils.isNumber;\nvar isArray = jStat.utils.isArray;\n\n// flag==true denotes use of sample standard deviation\n// Z Statistics\njStat.extend({\n  // 2 different parameter lists:\n  // (value, mean, sd)\n  // (value, array, flag)\n  zscore: function zscore() {\n    var args = slice.call(arguments);\n    if (isNumber(args[1])) {\n      return (args[0] - args[1]) / args[2];\n    }\n    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, sides)\n  // (zscore, sides)\n  // (value, array, sides, flag)\n  ztest: function ztest() {\n    var args = slice.call(arguments);\n    var z;\n    if (isArray(args[1])) {\n      // (value, array, sides, flag)\n      z = jStat.zscore(args[0],args[1],args[3]);\n      return (args[2] === 1) ?\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);\n    } else {\n      if (args.length > 2) {\n        // (value, mean, sd, sides)\n        z = jStat.zscore(args[0],args[1],args[2]);\n        return (args[3] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);\n      } else {\n        // (zscore, sides)\n        z = args[0];\n        return (args[1] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)*2);\n      }\n    }\n  }\n});\n\njStat.extend(jStat.fn, {\n  zscore: function zscore(value, flag) {\n    return (value - this.mean()) / this.stdev(flag);\n  },\n\n  ztest: function ztest(value, sides, flag) {\n    var zscore = Math.abs(this.zscore(value, flag));\n    return (sides === 1) ?\n      (jStat.normal.cdf(-zscore, 0, 1)) :\n      (jStat.normal.cdf(-zscore, 0, 1) * 2);\n  }\n});\n\n// T Statistics\njStat.extend({\n  // 2 parameter lists\n  // (value, mean, sd, n)\n  // (value, array)\n  tscore: function tscore() {\n    var args = slice.call(arguments);\n    return (args.length === 4) ?\n      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :\n      ((args[0] - jStat.mean(args[1])) /\n       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, n, sides)\n  // (tscore, n, sides)\n  // (value, array, sides)\n  ttest: function ttest() {\n    var args = slice.call(arguments);\n    var tscore;\n    if (args.length === 5) {\n      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n      return (args[4] === 1) ?\n        (jStat.studentt.cdf(-tscore, args[3]-1)) :\n        (jStat.studentt.cdf(-tscore, args[3]-1)*2);\n    }\n    if (isNumber(args[1])) {\n      tscore = Math.abs(args[0])\n      return (args[2] == 1) ?\n        (jStat.studentt.cdf(-tscore, args[1]-1)) :\n        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);\n    }\n    tscore = Math.abs(jStat.tscore(args[0], args[1]))\n    return (args[2] == 1) ?\n      (jStat.studentt.cdf(-tscore, args[1].length-1)) :\n      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  tscore: function tscore(value) {\n    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n  },\n\n  ttest: function ttest(value, sides) {\n    return (sides === 1) ?\n      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :\n      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);\n  }\n});\n\n// F Statistics\njStat.extend({\n  // Paramter list is as follows:\n  // (array1, array2, array3, ...)\n  // or it is an array of arrays\n  // array of arrays conversion\n  anovafscore: function anovafscore() {\n    var args = slice.call(arguments),\n    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n    if (args.length === 1) {\n      tmpargs = new Array(args[0].length);\n      for (i = 0; i < args[0].length; i++) {\n        tmpargs[i] = args[0][i];\n      }\n      args = tmpargs;\n    }\n    // Builds sample array\n    sample = new Array();\n    for (i = 0; i < args.length; i++) {\n      sample = sample.concat(args[i]);\n    }\n    sampMean = jStat.mean(sample);\n    // Computes the explained variance\n    expVar = 0;\n    for (i = 0; i < args.length; i++) {\n      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n    }\n    expVar /= (args.length - 1);\n    // Computes unexplained variance\n    unexpVar = 0;\n    for (i = 0; i < args.length; i++) {\n      sampSampMean = jStat.mean(args[i]);\n      for (j = 0; j < args[i].length; j++) {\n        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n      }\n    }\n    unexpVar /= (sample.length - args.length);\n    return expVar / unexpVar;\n  },\n\n  // 2 different paramter setups\n  // (array1, array2, array3, ...)\n  // (anovafscore, df1, df2)\n  anovaftest: function anovaftest() {\n    var args = slice.call(arguments),\n    df1, df2, n, i;\n    if (isNumber(args[0])) {\n      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n    }\n    var anovafscore = jStat.anovafscore(args);\n    df1 = args.length - 1;\n    n = 0;\n    for (i = 0; i < args.length; i++) {\n      n = n + args[i].length;\n    }\n    df2 = n - df1 - 1;\n    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n  },\n\n  ftest: function ftest(fscore, df1, df2) {\n    return 1 - jStat.centralF.cdf(fscore, df1, df2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  anovafscore: function anovafscore() {\n    return jStat.anovafscore(this.toArray());\n  },\n\n  anovaftes: function anovaftes() {\n    var n = 0;\n    var i;\n    for (i = 0; i < this.length; i++) {\n      n = n + this[i].length;\n    }\n    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n  }\n});\n\n// Tukey's range test\njStat.extend({\n  // 2 parameter lists\n  // (mean1, mean2, n1, n2, sd)\n  // (array1, array2, sd)\n  qscore: function qscore() {\n    var args = slice.call(arguments);\n    var mean1, mean2, n1, n2, sd;\n    if (isNumber(args[0])) {\n        mean1 = args[0];\n        mean2 = args[1];\n        n1 = args[2];\n        n2 = args[3];\n        sd = args[4];\n    } else {\n        mean1 = jStat.mean(args[0]);\n        mean2 = jStat.mean(args[1]);\n        n1 = args[0].length;\n        n2 = args[1].length;\n        sd = args[2];\n    }\n    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n  },\n\n  // 3 different parameter lists:\n  // (qscore, n, k)\n  // (mean1, mean2, n1, n2, sd, n, k)\n  // (array1, array2, sd, n, k)\n  qtest: function qtest() {\n    var args = slice.call(arguments);\n\n    var qscore;\n    if (args.length === 3) {\n      qscore = args[0];\n      args = args.slice(1);\n    } else if (args.length === 7) {\n      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n      args = args.slice(5);\n    } else {\n      qscore = jStat.qscore(args[0], args[1], args[2]);\n      args = args.slice(3);\n    }\n\n    var n = args[0];\n    var k = args[1];\n\n    return 1 - jStat.tukey.cdf(qscore, k, n - k);\n  },\n\n  tukeyhsd: function tukeyhsd(arrays) {\n    var sd = jStat.pooledstdev(arrays);\n    var means = arrays.map(function (arr) {return jStat.mean(arr);});\n    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);\n\n    var results = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n        }\n    }\n\n    return results;\n  }\n});\n\n// Error Bounds\njStat.extend({\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  normalci: function normalci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  tci: function tci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *\n                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  significant: function significant(pvalue, alpha) {\n    return pvalue < alpha;\n  }\n});\n\njStat.extend(jStat.fn, {\n  normalci: function normalci(value, alpha) {\n    return jStat.normalci(value, alpha, this.toArray());\n  },\n\n  tci: function tci(value, alpha) {\n    return jStat.tci(value, alpha, this.toArray());\n  }\n});\n\n// internal method for calculating the z-score for a difference of proportions test\nfunction differenceOfProportions(p1, n1, p2, n2) {\n  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n    throw new Error(\"Proportions should be greater than 0 and less than 1\")\n  }\n  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));\n  return (p1 - p2) / se;\n}\n\n// Difference of Proportions\njStat.extend(jStat.fn, {\n  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 1);\n  },\n\n  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 2);\n  }\n});\n\n}(jStat, Math));\njStat.models = (function(){\n  function sub_regress(exog) {\n    var var_count = exog[0].length;\n    var modelList = jStat.arange(var_count).map(function(endog_index) {\n      var exog_index =\n          jStat.arange(var_count).filter(function(i){return i!==endog_index});\n      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),\n                 jStat.col(exog, exog_index))\n    });\n    return modelList;\n  }\n\n  // do OLS model regress\n  // exog have include const columns ,it will not generate it .In fact, exog is\n  // \"design matrix\" look at\n  //https://en.wikipedia.org/wiki/Design_matrix\n  function ols(endog, exog) {\n    var nobs = endog.length;\n    var df_model = exog[0].length - 1;\n    var df_resid = nobs-df_model - 1;\n    var coef = jStat.lstsq(exog, endog);\n    var predict =\n        jStat.multiply(exog, coef.map(function(x) { return [x] }))\n            .map(function(p) { return p[0] });\n    var resid = jStat.subtract(endog, predict);\n    var ybar = jStat.mean(endog);\n    // constant cause problem\n    // var SST = jStat.sum(endog.map(function(y) {\n    //   return Math.pow(y-ybar,2);\n    // }));\n    var SSE = jStat.sum(predict.map(function(f) {\n      return Math.pow(f - ybar, 2);\n    }));\n    var SSR = jStat.sum(endog.map(function(y, i) {\n      return Math.pow(y - predict[i], 2);\n    }));\n    var SST = SSE + SSR;\n    var R2 = (SSE / SST);\n    return {\n        exog:exog,\n        endog:endog,\n        nobs:nobs,\n        df_model:df_model,\n        df_resid:df_resid,\n        coef:coef,\n        predict:predict,\n        resid:resid,\n        ybar:ybar,\n        SST:SST,\n        SSE:SSE,\n        SSR:SSR,\n        R2:R2\n    };\n  }\n\n  // H0: b_I=0\n  // H1: b_I!=0\n  function t_test(model) {\n    var subModelList = sub_regress(model.exog);\n    //var sigmaHat=jStat.stdev(model.resid);\n    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));\n    var seBetaHat = subModelList.map(function(mod) {\n      var SST = mod.SST;\n      var R2 = mod.R2;\n      return sigmaHat / Math.sqrt(SST * (1 - R2));\n    });\n    var tStatistic = model.coef.map(function(coef, i) {\n      return (coef - 0) / seBetaHat[i];\n    });\n    var pValue = tStatistic.map(function(t) {\n      var leftppf = jStat.studentt.cdf(t, model.df_resid);\n      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n    });\n    var c = jStat.studentt.inv(0.975, model.df_resid);\n    var interval95 = model.coef.map(function(coef, i) {\n      var d = c * seBetaHat[i];\n      return [coef - d, coef + d];\n    })\n    return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n    };\n  }\n\n  function F_test(model) {\n    var F_statistic =\n        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);\n    var fcdf = function(x, n1, n2) {\n      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)\n    }\n    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n    return { F_statistic: F_statistic, pvalue: pvalue };\n  }\n\n  function ols_wrap(endog, exog) {\n    var model = ols(endog,exog);\n    var ttest = t_test(model);\n    var ftest = F_test(model);\n    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n    // Which matches the 'adjusted R^2' provided by R's lm package\n    var adjust_R2 =\n        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));\n    model.t = ttest;\n    model.f = ftest;\n    model.adjust_R2 = adjust_R2;\n    return model;\n  }\n\n  return { ols: ols_wrap };\n})();\n//To regress, simply build X matrix\n//(append column of 1's) using\n//buildxmatrix and build the Y\n//matrix using buildymatrix\n//(simply the transpose)\n//and run regress.\n\n\n\n//Regressions\n\njStat.extend({\n  buildxmatrix: function buildxmatrix(){\n    //Parameters will be passed in as such\n    //(array1,array2,array3,...)\n    //as (x1,x2,x3,...)\n    //needs to be (1,x1,x2,x3,...)\n    var matrixRows = new Array(arguments.length);\n    for(var i=0;i<arguments.length;i++){\n      var array = [1];\n      matrixRows[i]= array.concat(arguments[i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  builddxmatrix: function builddxmatrix() {\n    //Paramters will be passed in as such\n    //([array1,array2,...]\n    var matrixRows = new Array(arguments[0].length);\n    for(var i=0;i<arguments[0].length;i++){\n      var array = [1]\n      matrixRows[i]= array.concat(arguments[0][i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  buildjxmatrix: function buildjxmatrix(jMat) {\n    //Builds from jStat Matrix\n    var pass = new Array(jMat.length)\n    for(var i=0;i<jMat.length;i++){\n      pass[i] = jMat[i];\n    }\n    return jStat.builddxmatrix(pass);\n\n  },\n\n  buildymatrix: function buildymatrix(array){\n    return jStat(array).transpose();\n  },\n\n  buildjymatrix: function buildjymatrix(jMat){\n    return jMat.transpose();\n  },\n\n  matrixmult: function matrixmult(A,B){\n    var i, j, k, result, sum;\n    if (A.cols() == B.rows()) {\n      if(B.rows()>1){\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[k][j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n      result = [];\n      for (i = 0; i < A.rows(); i++) {\n        result[i] = [];\n        for (j = 0; j < B.cols(); j++) {\n          sum = 0;\n          for (k = 0; k < A.cols(); k++) {\n            sum += A.toArray()[i][k] * B.toArray()[j];\n          }\n          result[i][j] = sum;\n        }\n      }\n      return jStat(result);\n    }\n  },\n\n  //regress and regresst to be fixed\n\n  regress: function regress(jMatX,jMatY){\n    //print(\"regressin!\");\n    //print(jMatX.toArray());\n    var innerinv = jStat.xtranspxinv(jMatX);\n    //print(innerinv);\n    var xtransp = jMatX.transpose();\n    var next = jStat.matrixmult(jStat(innerinv),xtransp);\n    return jStat.matrixmult(next,jMatY);\n\n  },\n\n  regresst: function regresst(jMatX,jMatY,sides){\n    var beta = jStat.regress(jMatX,jMatY);\n\n    var compile = {};\n    compile.anova = {};\n    var jMatYBar = jStat.jMatYBar(jMatX, beta);\n    compile.yBar = jMatYBar;\n    var yAverage = jMatY.mean();\n    compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n\n    compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n    compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n\n    compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n    compile.anova.mse =\n        compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.sst = jStat.sst(jMatY, yAverage);\n    compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n\n    compile.anova.r2 = 1 - (compile.anova.sse / compile.anova.sst);\n    if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n\n    compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n    compile.anova.pvalue =\n        jStat.anovaftest(compile.anova.fratio,\n                         jMatX[0].length - 1,\n                         jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.rmse = Math.sqrt(compile.anova.mse);\n\n    compile.anova.r2adj = 1 - (compile.anova.mse / compile.anova.mst);\n    if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n\n    compile.stats = new Array(jMatX[0].length);\n    var covar = jStat.xtranspxinv(jMatX);\n    var sds, ts, ps;\n\n    for(var i=0; i<beta.length;i++){\n      sds=Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n      ts= Math.abs(beta[i] / sds);\n      ps= jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n\n      compile.stats[i]=[beta[i], sds, ts, ps];\n    }\n\n    compile.regress = beta;\n    return compile;\n  },\n\n  xtranspx: function xtranspx(jMatX){\n    return jStat.matrixmult(jMatX.transpose(),jMatX);\n  },\n\n\n  xtranspxinv: function xtranspxinv(jMatX){\n    var inner = jStat.matrixmult(jMatX.transpose(),jMatX);\n    var innerinv = jStat.inv(inner);\n    return innerinv;\n  },\n\n  jMatYBar: function jMatYBar(jMatX, beta) {\n    var yBar = jStat.matrixmult(jMatX, beta);\n    return new jStat(yBar);\n  },\n\n  residuals: function residuals(jMatY, jMatYBar) {\n    return jStat.matrixsubtract(jMatY, jMatYBar);\n  },\n\n  ssr: function ssr(jMatYBar, yAverage) {\n    var ssr = 0;\n    for(var i = 0; i < jMatYBar.length; i++) {\n      ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n    }\n    return ssr;\n  },\n\n  sse: function sse(jMatY, jMatYBar) {\n    var sse = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n    }\n    return sse;\n  },\n\n  sst: function sst(jMatY, yAverage) {\n    var sst = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sst += Math.pow(jMatY[i] - yAverage, 2);\n    }\n    return sst;\n  },\n\n  matrixsubtract: function matrixsubtract(A,B){\n    var ans = new Array(A.length);\n    for(var i=0;i<A.length;i++){\n      ans[i] = new Array(A[i].length);\n      for(var j=0;j<A[i].length;j++){\n        ans[i][j]=A[i][j]-B[i][j];\n      }\n    }\n    return jStat(ans);\n  }\n});\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n\n  return jStat;\n});\n","\nimport jStat from 'jstat';\n\n/*\n  SDTMath Static Class - Not intended for instantiation!\n\n  Variables:\n    H = hits\n    M = misses\n    FA = false alarms\n    CR = correct rejections\n    HR = hit rate\n    zHR = Z-transformed hit rate\n    FAR = false alarm rate\n    zFAR = Z-transformed false alarm rate\n    ACC = accuracy\n    PPV = positive predictive value\n    FOMR = false omission rate (used FOMR to avoid keyword FOR!)\n    d = sensitivity (d' for equal variance, d_a for unequal variance)\n    c = response bias (c for equal variance, c_a for unequal variance)\n    s = standard deviation of signal distribution, with standard deviation of noise distribution = 1\n    muN = mean of noise distribution\n    muS = mean of signal distribution\n    l = lambda, threshold location, with l = 0 indicating no response bias\n    h = height of signal distribution\n\n  Functions:\n    Z = z-score\n    Z^-1 = inverse z-score\n\n  Equations (* = unequal variance):\n    HR = H / (H + M)\n    FAR = FA / (FA + CR)\n    ACC = (H + CR) / (H + M + FA + CR)\n    ACC = (HR + (1 - FAR)) / 2\n    PPV = H / (H + FA)\n    FOMR = M / (M + CR)\n\n    d' = Z^-1(HR) - Z^-1(FAR)\n    *d' = (2 / (s^2 + 1))^(1/2) * (s * Z^-1(HR) - Z^-1(FAR))\n\n    c = -(Z^-1(HR) + Z^-1(FAR))/2\n    *c = (2 / (s^2 + 1))^(1/2) * (s / s + 1) * -(Z^-1(HR) + Z^-1(FAR))\n\n    HR = Z(d'/2 - c)\n    *HR = Z(((s^2 + 1) / 2)^(1/2) * (d' / (s + 1) - c / s))\n\n    FAR = Z(-d'/2 - c)\n    *FAR = Z(((s^2 + 1) / 2)^(1/2) * -(d' / (s + 1) + c))\n\n    HR = Z(d' + Z^-1(FAR))\n    *HR = Z(((s^2 + 1) / 2)^(1/2) * d' + Z^-1(FAR) / s)\n\n    HR = Z(-2c - Z^-1(FAR))\n    *HR = Z(-((s^2 + 1) / 2)^(1/2) * ((s + 1) / s) * c - Z^-1(FAR))\n\n    muN = -d'/2\n    *muN = -((s^2 + 1) / 2)^(1/2) * (1 / (s + 1)) * d'\n\n    d' = -2 * muN\n    *d' = -(2 / (s^2 + 1))^(1/2) * (s + 1) * muN\n\n    muS = d'/2\n    *muS = ((s^2 + 1) / 2)^(1/2) * (s / (s + 1)) * d'\n\n    d' = 2 * muS\n    *d' = (2 / (s^2 + 1))^(1/2) * ((s + 1) / s) * muS\n\n    l = c\n    *l = ((s^2 + 1) / 2)^(1/2) * c\n\n    c = l\n    *c = (2 / (s^2 + 1))^(1/2) * l\n\n    h = 1 / (s * (2 * pi)^(1/2))\n    s = 1 / (h * (2 * pi)^(1/2))\n\n    zHR = Z(HR)\n\n    zFAR = Z(FAR)\n\n    HR = Z^-1(zHR)\n\n    FAR = Z^-1(zFAR)\n\n*/\nexport default class SDTMath {\n  static hM2Hr(h, m) {\n    if ((h === 0) && (m === 0)) {\n      return 0;\n    }\n    return h / (h + m);\n  }\n\n  static faCr2Far(fa, cr) {\n    if ((fa === 0) && (cr === 0)) {\n      return 0;\n    }\n    return fa / (fa + cr);\n  }\n\n  static hMFaCr2Acc(h, m, fa, cr) {\n    if ((h === 0) && (m === 0) && (fa === 0) && (cr === 0)) {\n      return 0;\n    }\n    return (h + cr) / (h + m + fa + cr);\n  }\n\n  static hrFar2Acc(hr, far) {\n    return (hr + (1 - far)) / 2;\n  }\n\n  static hFa2Ppv(h, fa) {\n    if ((h === 0) && (fa === 0)) {\n      return 0;\n    }\n    return h / (h + fa);\n  }\n\n  static mCr2Fomr(m, cr) {\n    if ((m === 0) && (cr === 0)) {\n      return 0;\n    }\n    return m / (m + cr);\n  }\n\n  static hrFar2D(hr, far, s = 1) {\n    if (s === 1) return (jStat.normal.inv(hr, 0, 1) - jStat.normal.inv(far, 0, 1));\n    return (\n      Math.sqrt(2 / (s * s + 1))\n      * (s * jStat.normal.inv(hr, 0, 1) - jStat.normal.inv(far, 0, 1))\n    );\n  }\n\n  static hrFar2C(hr, far, s = 1) {\n    if (s === 1) return (-(jStat.normal.inv(hr, 0, 1) + jStat.normal.inv(far, 0, 1)) / 2);\n    return (\n      Math.sqrt(2 / (s * s + 1))\n      * (s / (s + 1))\n      * -(jStat.normal.inv(hr, 0, 1) + jStat.normal.inv(far, 0, 1))\n    );\n  }\n\n  static dC2Hr(d, c, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(d / 2 - c, 0, 1));\n    return (jStat.normal.cdf(Math.sqrt((s * s + 1) / 2) * (d / (1 + s) - c / s), 0, 1));\n  }\n\n  static dC2Far(d, c, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(-(d / 2 + c), 0, 1));\n    return (jStat.normal.cdf(Math.sqrt((s * s + 1) / 2) * -(d / (1 + s) + c), 0, 1));\n  }\n\n  static dFar2Hr(d, far, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(d + jStat.normal.inv(far, 0, 1), 0, 1));\n    return (jStat.normal.cdf(\n      (Math.sqrt((s * s + 1) / 2) * d + jStat.normal.inv(far, 0, 1)) / s,\n      0,\n      1,\n    ));\n  }\n\n  static cFar2Hr(c, far, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(-(2 * c) - jStat.normal.inv(far, 0, 1), 0, 1));\n    return (jStat.normal.cdf(\n      -Math.sqrt((s * s + 1) / 2) * ((s + 1) / s) * c - jStat.normal.inv(far, 0, 1),\n      0,\n      1,\n    ));\n  }\n\n  static d2MuN(d, s = 1) {\n    if (s === 1) return -d / 2;\n    return -Math.sqrt((s * s + 1) / 2) * (1 / (s + 1)) * d;\n  }\n\n  static muN2D(muN, s = 1) {\n    if (s === 1) return -2 * muN;\n    return -Math.sqrt(2 / (s * s + 1)) * (s + 1) * muN;\n  }\n\n  static d2MuS(d, s = 1) {\n    if (s === 1) return d / 2;\n    return Math.sqrt((s * s + 1) / 2) * (s / (s + 1)) * d;\n  }\n\n  static muS2D(muS, s = 1) {\n    if (s === 1) return 2 * muS;\n    return Math.sqrt(2 / (s * s + 1)) * ((s + 1) / s) * muS;\n  }\n\n  static c2L(c, s = 1) {\n    if (s === 1) return c;\n    return Math.sqrt((s * s + 1) / 2) * c;\n  }\n\n  static l2C(l, s = 1) {\n    if (s === 1) return l;\n    return Math.sqrt(2 / (s * s + 1)) * l;\n  }\n\n  static s2H(s = 1) {\n    return 1 / (s * Math.sqrt(2 * Math.PI));\n  }\n\n  static h2S(h) {\n    return 1 / (h * Math.sqrt(2 * Math.PI));\n  }\n\n  static hr2Zhr(hr) {\n    return jStat.normal.inv(hr, 0, 1);\n  }\n\n  static far2Zfar(far) {\n    return jStat.normal.inv(far, 0, 1);\n  }\n\n  static zhr2Hr(zhr) {\n    return jStat.normal.cdf(zhr, 0, 1);\n  }\n\n  static zfar2Far(zfar) {\n    return jStat.normal.cdf(zfar, 0, 1);\n  }\n}\n"],"names":["jStat","exports","Math","isFunction","utils","ascNum","a","b","clip","arg","min","max","sum","arr","i","length","sumsqrd","sumsqerr","tmp","mean","sumrow","product","prod","low","high","unique","hash","_arr","push","meansqerr","geomean","logs","map","log","meanOfLogs","exp","median","arrlen","slice","sort","cumsum","cumreduce","cumprod","diff","diffs","arrLen","rank","distinctNumbers","numberCounts","number","sortedDistinctNumbers","numberRanks","currentRank","count","mode","maxCount","numMaxCount","mode_arr","range","variance","flag","pooledvariance","reduce","samples","deviation","dev","Array","stdev","sqrt","pooledstdev","meandev","abs","meddev","coeffvar","quartiles","round","quantiles","quantilesArray","alphap","betap","p","aleph","k","gamma","sortedArray","quantileVals","n","floor","percentile","exclusive","realIndex","index","parseInt","frac","percentileOfScore","score","kind","value","counter","len","strict","histogram","binCnt","first","binWidth","bins","covariance","arr1","arr2","u","v","arr1Len","sq_dev","corrcoeff","spearmancoeff","stanMoment","mu","sigma","skewSum","pow","skewness","kurtosis","jProto","prototype","funcs","passfunc","fullbool","func","tmpthis","this","setTimeout","call","transpose","split","toVector","callbackFunction","args","arguments","argsToPass","apply","undefined","curriedFunction","vector","concat","toString","Object","calcRdx","m","val","LOG10E","isArray","isNumber","num","_init","retZero","retOne","retIdent","j","fn","seq","toArray","constructor","_random_fn","random","setRandom","TypeError","extend","obj","rows","cols","dimensions","row","rowa","col","submat","arange","forEach","ind","column","cola","diag","nrow","res","antidiag","objArr","toAlter","ncol","alter","create","zeros","ones","rand","identity","symmetric","size","clear","cnt","hival","step","current","start","end","rl","_slice","list","copy","rcSlice","colSlice","rowSlice","sliceAssign","A","B","nl","ml","diagonal","diagArray","mat","t","splice","results","self","gammaln","x","xx","y","cof","ser","loggam","x0","x2","xp","gl","gl0","PI","gammafn","z","yi","q","fact","xden","xnum","Infinity","sin","gammap","lowRegGamma","an","aln","ap","del","c","d","h","ITMAX","NaN","factorialln","factorial","combination","combinationln","permutation","betafn","betaln","betacf","m2","aa","fpmin","qab","qap","qam","gammapinv","pp","lna1","afac","a1","EPS","gln","erf","ty","isneg","dd","erfc","erfcinv","err","ibetainv","lna","lnb","al","w","b1","ibeta","bt","randn","randg","shape","a2","oalph","betinc","eps","c9","a0","b0","m9","laplaceSign","tukeyWprob","rr","cc","nleg","ihalf","C1","C2","C3","bb","wlar","wincr1","wincr2","xleg","aleg","qsqz","wincr","pr_w","normal","cdf","blb","binc","bub","einsum","cc1","wi","elsum","jj","ac","qexpo","rinsum","tukeyQinv","p0","q0","p1","q1","p2","q2","p3","q3","p4","q4","c1","c2","c3","c4","c5","vmax","ps","f","_a","_b","_c","newthis","data","sample","vals","fnfunc","beta","pdf","alpha","inv","centralF","df1","df2","binomial","cauchy","local","scale","atan","tan","chisquare","dof","exponential","rate","invgamma","kumaraswamy","Error","lognormal","noncentralt","ncp","tol","studentt","min_iterations","flip","prob","lastvalue","std","pareto","SQRT2","dof2","weibull","uniform","betacdf","s","negbin","r","hypgeom","N","scaledPDF","samplesDone","scaledCDF","factor","poisson","l","sumarr","sampleSmall","L","sampleLarge","U","V","slam","loglam","invalpha","vr","us","lam","triangular","arcsine","asin","cos","laplace","tukey","nmeans","df","nlegq","ihalfq","eps1","eps2","dhaf","dquar","deigh","dlarg","ulen1","ulen2","ulen3","ulen4","xlegq","alegq","Number","isFinite","ulen","f2","f2lf","f21","ff4","ans","otsum","twa1","t1","maxiter","x1","valx0","valx1","iter","isUsable","add","subtract","divide","multiply","nrescols","rescols","outer","dot","left","right","norm","nnorm","isNaN","angle","acos","aug","newarr","gauss_jordan","result","det","determinant","submatrix","sign","gauss_elimination","maug","pivot","temp","y2","maxrow","triaUpSolve","parts","matrix_mode","triaLowSolve","lu","R","cholesky","T","gauss_jacobi","xv","xk","gauss_seidel","SOR","householder","QR","qr2","lstsq","R_I","I","Aj","cAi","Ij","cIi","qr_solve","array_mode","Q","attrs","Q1","RI","Q2","jacobi","maxim","theta","condition","e","ev","rungekutta","t_j","u_j","order","k1","k2","k3","romberg","h1","g","richardson","X","pos","y1","h_min","simpson","hermite","F","dF","dl","lagrange","cubic_spline","sq","gauss_quadrature","PCA","temp1","D","temp2","Y","Bt","C","Vt","differenceOfProportions","n1","n2","pooled","zscore","ztest","sides","tscore","ttest","anovafscore","expVar","sampMean","sampSampMean","tmpargs","unexpVar","anovaftest","ftest","fscore","anovaftes","qscore","mean1","mean2","sd","qtest","tukeyhsd","arrays","means","normalci","change","tci","significant","pvalue","oneSidedDifferenceOfProportions","twoSidedDifferenceOfProportions","models","sub_regress","exog","var_count","endog_index","exog_index","filter","ols","endog","nobs","df_model","df_resid","coef","predict","resid","ybar","SSE","SSR","SST","R2","t_test","model","subModelList","sigmaHat","seBetaHat","mod","tStatistic","pValue","leftppf","interval95","se","F_test","F_statistic","ols_wrap","adjust_R2","buildxmatrix","matrixRows","array","builddxmatrix","buildjxmatrix","jMat","pass","buildymatrix","buildjymatrix","matrixmult","regress","jMatX","jMatY","innerinv","xtranspxinv","xtransp","next","regresst","compile","jMatYBar","yBar","yAverage","anova","residuals","ssr","msr","sse","mse","sst","mst","r2","fratio","rmse","r2adj","stats","sds","ts","covar","xtranspx","inner","matrixsubtract","SDTMath","static","fa","cr","hr","far","muN","muS","zhr","zfar"],"mappings":"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"}