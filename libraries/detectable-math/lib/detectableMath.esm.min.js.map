{"version":3,"file":"detectableMath.esm.min.js","sources":["../../../node_modules/jstat/dist/jstat.js","../src/sdt-math.js"],"sourcesContent":["(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n})(this, function () {\nvar jStat = (function(Math, undefined) {\n\n// For quick reference.\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n// Calculate correction for IEEE error\n// TODO: This calculation can be improved.\nfunction calcRdx(n, m) {\n  var val = n > m ? n : m;\n  return Math.pow(10,\n                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));\n}\n\n\nvar isArray = Array.isArray || function isArray(arg) {\n  return toString.call(arg) === '[object Array]';\n};\n\n\nfunction isFunction(arg) {\n  return toString.call(arg) === '[object Function]';\n}\n\n\nfunction isNumber(num) {\n  return (typeof num === 'number') ? num - num === 0 : false;\n}\n\n\n// Converts the jStat matrix to vector.\nfunction toVector(arr) {\n  return concat.apply([], arr);\n}\n\n\n// The one and only jStat constructor.\nfunction jStat() {\n  return new jStat._init(arguments);\n}\n\n\n// TODO: Remove after all references in src files have been removed.\njStat.fn = jStat.prototype;\n\n\n// By separating the initializer from the constructor it's easier to handle\n// always returning a new instance whether \"new\" was used or not.\njStat._init = function _init(args) {\n  // If first argument is an array, must be vector or matrix.\n  if (isArray(args[0])) {\n    // Check if matrix.\n    if (isArray(args[0][0])) {\n      // See if a mapping function was also passed.\n      if (isFunction(args[1]))\n        args[0] = jStat.map(args[0], args[1]);\n      // Iterate over each is faster than this.push.apply(this, args[0].\n      for (var i = 0; i < args[0].length; i++)\n        this[i] = args[0][i];\n      this.length = args[0].length;\n\n    // Otherwise must be a vector.\n    } else {\n      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n      this.length = 1;\n    }\n\n  // If first argument is number, assume creation of sequence.\n  } else if (isNumber(args[0])) {\n    this[0] = jStat.seq.apply(null, args);\n    this.length = 1;\n\n  // Handle case when jStat object is passed to jStat.\n  } else if (args[0] instanceof jStat) {\n    // Duplicate the object and pass it back.\n    return jStat(args[0].toArray());\n\n  // Unexpected argument value, return empty jStat object.\n  // TODO: This is strange behavior. Shouldn't this throw or some such to let\n  // the user know they had bad arguments?\n  } else {\n    this[0] = [];\n    this.length = 1;\n  }\n\n  return this;\n};\njStat._init.prototype = jStat.prototype;\njStat._init.constructor = jStat;\n\n\n// Utility functions.\n// TODO: for internal use only?\njStat.utils = {\n  calcRdx: calcRdx,\n  isArray: isArray,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  toVector: toVector\n};\n\n\njStat._random_fn = Math.random;\njStat.setRandom = function setRandom(fn) {\n  if (typeof fn !== 'function')\n    throw new TypeError('fn is not a function');\n  jStat._random_fn = fn;\n};\n\n\n// Easily extend the jStat object.\n// TODO: is this seriously necessary?\njStat.extend = function extend(obj) {\n  var i, j;\n\n  if (arguments.length === 1) {\n    for (j in obj)\n      jStat[j] = obj[j];\n    return this;\n  }\n\n  for (i = 1; i < arguments.length; i++) {\n    for (j in arguments[i])\n      obj[j] = arguments[i][j];\n  }\n\n  return obj;\n};\n\n\n// Returns the number of rows in the matrix.\njStat.rows = function rows(arr) {\n  return arr.length || 1;\n};\n\n\n// Returns the number of columns in the matrix.\njStat.cols = function cols(arr) {\n  return arr[0].length || 1;\n};\n\n\n// Returns the dimensions of the object { rows: i, cols: j }\njStat.dimensions = function dimensions(arr) {\n  return {\n    rows: jStat.rows(arr),\n    cols: jStat.cols(arr)\n  };\n};\n\n\n// Returns a specified row as a vector or return a sub matrix by pick some rows\njStat.row = function row(arr, index) {\n  if (isArray(index)) {\n    return index.map(function(i) {\n      return jStat.row(arr, i);\n    })\n  }\n  return arr[index];\n};\n\n\n// return row as array\n// rowa([[1,2],[3,4]],0) -> [1,2]\njStat.rowa = function rowa(arr, i) {\n  return jStat.row(arr, i);\n};\n\n\n// Returns the specified column as a vector or return a sub matrix by pick some\n// columns\njStat.col = function col(arr, index) {\n  if (isArray(index)) {\n    var submat = jStat.arange(arr.length).map(function() {\n      return new Array(index.length);\n    });\n    index.forEach(function(ind, i){\n      jStat.arange(arr.length).forEach(function(j) {\n        submat[j][i] = arr[j][ind];\n      });\n    });\n    return submat;\n  }\n  var column = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++)\n    column[i] = [arr[i][index]];\n  return column;\n};\n\n\n// return column as array\n// cola([[1,2],[3,4]],0) -> [1,3]\njStat.cola = function cola(arr, i) {\n  return jStat.col(arr, i).map(function(a){ return a[0] });\n};\n\n\n// Returns the diagonal of the matrix\njStat.diag = function diag(arr) {\n  var nrow = jStat.rows(arr);\n  var res = new Array(nrow);\n  for (var row = 0; row < nrow; row++)\n    res[row] = [arr[row][row]];\n  return res;\n};\n\n\n// Returns the anti-diagonal of the matrix\njStat.antidiag = function antidiag(arr) {\n  var nrow = jStat.rows(arr) - 1;\n  var res = new Array(nrow);\n  for (var i = 0; nrow >= 0; nrow--, i++)\n    res[i] = [arr[i][nrow]];\n  return res;\n};\n\n// Transpose a matrix or array.\njStat.transpose = function transpose(arr) {\n  var obj = [];\n  var objArr, rows, cols, j, i;\n\n  // Make sure arr is in matrix format.\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  rows = arr.length;\n  cols = arr[0].length;\n\n  for (i = 0; i < cols; i++) {\n    objArr = new Array(rows);\n    for (j = 0; j < rows; j++)\n      objArr[j] = arr[j][i];\n    obj.push(objArr);\n  }\n\n  // If obj is vector, return only single array.\n  return obj.length === 1 ? obj[0] : obj;\n};\n\n\n// Map a function to an array or array of arrays.\n// \"toAlter\" is an internal variable.\njStat.map = function map(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    for (col = 0; col < ncol; col++)\n      res[row][col] = func(arr[row][col], row, col);\n  }\n\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Cumulatively combine the elements of an array or array of arrays using a function.\njStat.cumreduce = function cumreduce(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    if (ncol > 0)\n      res[row][0] = arr[row][0];\n    for (col = 1; col < ncol; col++)\n      res[row][col] = func(res[row][col-1], arr[row][col]);\n  }\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Destructively alter an array.\njStat.alter = function alter(arr, func) {\n  return jStat.map(arr, func, true);\n};\n\n\n// Generate a rows x cols matrix according to the supplied function.\njStat.create = function  create(rows, cols, func) {\n  var res = new Array(rows);\n  var i, j;\n\n  if (isFunction(cols)) {\n    func = cols;\n    cols = rows;\n  }\n\n  for (i = 0; i < rows; i++) {\n    res[i] = new Array(cols);\n    for (j = 0; j < cols; j++)\n      res[i][j] = func(i, j);\n  }\n\n  return res;\n};\n\n\nfunction retZero() { return 0; }\n\n\n// Generate a rows x cols matrix of zeros.\njStat.zeros = function zeros(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retZero);\n};\n\n\nfunction retOne() { return 1; }\n\n\n// Generate a rows x cols matrix of ones.\njStat.ones = function ones(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retOne);\n};\n\n\n// Generate a rows x cols matrix of uniformly random numbers.\njStat.rand = function rand(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, jStat._random_fn);\n};\n\n\nfunction retIdent(i, j) { return i === j ? 1 : 0; }\n\n\n// Generate an identity matrix of size row x cols.\njStat.identity = function identity(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retIdent);\n};\n\n\n// Tests whether a matrix is symmetric\njStat.symmetric = function symmetric(arr) {\n  var size = arr.length;\n  var row, col;\n\n  if (arr.length !== arr[0].length)\n    return false;\n\n  for (row = 0; row < size; row++) {\n    for (col = 0; col < size; col++)\n      if (arr[col][row] !== arr[row][col])\n        return false;\n  }\n\n  return true;\n};\n\n\n// Set all values to zero.\njStat.clear = function clear(arr) {\n  return jStat.alter(arr, retZero);\n};\n\n\n// Generate sequence.\njStat.seq = function seq(min, max, length, func) {\n  if (!isFunction(func))\n    func = false;\n\n  var arr = [];\n  var hival = calcRdx(min, max);\n  var step = (max * hival - min * hival) / ((length - 1) * hival);\n  var current = min;\n  var cnt;\n\n  // Current is assigned using a technique to compensate for IEEE error.\n  // TODO: Needs better implementation.\n  for (cnt = 0;\n       current <= max && cnt < length;\n       cnt++, current = (min * hival + step * hival * cnt) / hival) {\n    arr.push((func ? func(current, cnt) : current));\n  }\n\n  return arr;\n};\n\n\n// arange(5) -> [0,1,2,3,4]\n// arange(1,5) -> [1,2,3,4]\n// arange(5,1,-1) -> [5,4,3,2]\njStat.arange = function arange(start, end, step) {\n  var rl = [];\n  var i;\n  step = step || 1;\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  if (start === end || step === 0) {\n    return [];\n  }\n  if (start < end && step < 0) {\n    return [];\n  }\n  if (start > end && step > 0) {\n    return [];\n  }\n  if (step > 0) {\n    for (i = start; i < end; i += step) {\n      rl.push(i);\n    }\n  } else {\n    for (i = start; i > end; i += step) {\n      rl.push(i);\n    }\n  }\n  return rl;\n};\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n// slice(A,1,{start:1}) -> [5,6]\n// as numpy code A[:2,1:]\njStat.slice = (function(){\n  function _slice(list, start, end, step) {\n    // note it's not equal to range.map mode it's a bug\n    var i;\n    var rl = [];\n    var length = list.length;\n    if (start === undefined && end === undefined && step === undefined) {\n      return jStat.copy(list);\n    }\n\n    start = start || 0;\n    end = end || list.length;\n    start = start >= 0 ? start : length + start;\n    end = end >= 0 ? end : length + end;\n    step = step || 1;\n    if (start === end || step === 0) {\n      return [];\n    }\n    if (start < end && step < 0) {\n      return [];\n    }\n    if (start > end && step > 0) {\n      return [];\n    }\n    if (step > 0) {\n      for (i = start; i < end; i += step) {\n        rl.push(list[i]);\n      }\n    } else {\n      for (i = start; i > end;i += step) {\n        rl.push(list[i]);\n      }\n    }\n    return rl;\n  }\n\n  function slice(list, rcSlice) {\n    var colSlice, rowSlice;\n    rcSlice = rcSlice || {};\n    if (isNumber(rcSlice.row)) {\n      if (isNumber(rcSlice.col))\n        return list[rcSlice.row][rcSlice.col];\n      var row = jStat.rowa(list, rcSlice.row);\n      colSlice = rcSlice.col || {};\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    }\n\n    if (isNumber(rcSlice.col)) {\n      var col = jStat.cola(list, rcSlice.col);\n      rowSlice = rcSlice.row || {};\n      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n    }\n\n    rowSlice = rcSlice.row || {};\n    colSlice = rcSlice.col || {};\n    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n    return rows.map(function(row) {\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    });\n  }\n\n  return slice;\n}());\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n// A=[[1,2,3],[4,0,0],[7,0,0]]\njStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n  var nl, ml;\n  if (isNumber(rcSlice.row)) {\n    if (isNumber(rcSlice.col))\n      return A[rcSlice.row][rcSlice.col] = B;\n    rcSlice.col = rcSlice.col || {};\n    rcSlice.col.start = rcSlice.col.start || 0;\n    rcSlice.col.end = rcSlice.col.end || A[0].length;\n    rcSlice.col.step = rcSlice.col.step || 1;\n    nl = jStat.arange(rcSlice.col.start,\n                          Math.min(A.length, rcSlice.col.end),\n                          rcSlice.col.step);\n    var m = rcSlice.row;\n    nl.forEach(function(n, i) {\n      A[m][n] = B[i];\n    });\n    return A;\n  }\n\n  if (isNumber(rcSlice.col)) {\n    rcSlice.row = rcSlice.row || {};\n    rcSlice.row.start = rcSlice.row.start || 0;\n    rcSlice.row.end = rcSlice.row.end || A.length;\n    rcSlice.row.step = rcSlice.row.step || 1;\n    ml = jStat.arange(rcSlice.row.start,\n                          Math.min(A[0].length, rcSlice.row.end),\n                          rcSlice.row.step);\n    var n = rcSlice.col;\n    ml.forEach(function(m, j) {\n      A[m][n] = B[j];\n    });\n    return A;\n  }\n\n  if (B[0].length === undefined) {\n    B = [B];\n  }\n  rcSlice.row.start = rcSlice.row.start || 0;\n  rcSlice.row.end = rcSlice.row.end || A.length;\n  rcSlice.row.step = rcSlice.row.step || 1;\n  rcSlice.col.start = rcSlice.col.start || 0;\n  rcSlice.col.end = rcSlice.col.end || A[0].length;\n  rcSlice.col.step = rcSlice.col.step || 1;\n  ml = jStat.arange(rcSlice.row.start,\n                        Math.min(A.length, rcSlice.row.end),\n                        rcSlice.row.step);\n  nl = jStat.arange(rcSlice.col.start,\n                        Math.min(A[0].length, rcSlice.col.end),\n                        rcSlice.col.step);\n  ml.forEach(function(m, i) {\n    nl.forEach(function(n, j) {\n      A[m][n] = B[i][j];\n    });\n  });\n  return A;\n};\n\n\n// [1,2,3] ->\n// [[1,0,0],[0,2,0],[0,0,3]]\njStat.diagonal = function diagonal(diagArray) {\n  var mat = jStat.zeros(diagArray.length, diagArray.length);\n  diagArray.forEach(function(t, i) {\n    mat[i][i] = t;\n  });\n  return mat;\n};\n\n\n// return copy of A\njStat.copy = function copy(A) {\n  return A.map(function(row) {\n    if (isNumber(row))\n      return row;\n    return row.map(function(t) {\n      return t;\n    });\n  });\n};\n\n\n// TODO: Go over this entire implementation. Seems a tragic waste of resources\n// doing all this work. Instead, and while ugly, use new Function() to generate\n// a custom function for each static method.\n\n// Quick reference.\nvar jProto = jStat.prototype;\n\n// Default length.\njProto.length = 0;\n\n// For internal use only.\n// TODO: Check if they're actually used, and if they are then rename them\n// to _*\njProto.push = Array.prototype.push;\njProto.sort = Array.prototype.sort;\njProto.splice = Array.prototype.splice;\njProto.slice = Array.prototype.slice;\n\n\n// Return a clean array.\njProto.toArray = function toArray() {\n  return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n};\n\n\n// Map a function to a matrix or vector.\njProto.map = function map(func, toAlter) {\n  return jStat(jStat.map(this, func, toAlter));\n};\n\n\n// Cumulatively combine the elements of a matrix or vector using a function.\njProto.cumreduce = function cumreduce(func, toAlter) {\n  return jStat(jStat.cumreduce(this, func, toAlter));\n};\n\n\n// Destructively alter an array.\njProto.alter = function alter(func) {\n  jStat.alter(this, func);\n  return this;\n};\n\n\n// Extend prototype with methods that have no argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(func) {\n      var self = this,\n      results;\n      // Check for callback.\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self));\n        });\n        return this;\n      }\n      results = jStat[passfunc](this);\n      return isArray(results) ? jStat(results) : results;\n    };\n  })(funcs[i]);\n})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n\n// Extend prototype with methods that have one argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(index, func) {\n      var self = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self, index));\n        });\n        return this;\n      }\n      return jStat(jStat[passfunc](this, index));\n    };\n  })(funcs[i]);\n})('row col'.split(' '));\n\n\n// Extend prototype with simple shortcut methods.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('create zeros ones rand identity'.split(' '));\n\n\n// Exposing jStat.\nreturn jStat;\n\n}(Math));\n(function(jStat, Math) {\n\nvar isFunction = jStat.utils.isFunction;\n\n// Ascending functions for sort\nfunction ascNum(a, b) { return a - b; }\n\nfunction clip(arg, min, max) {\n  return Math.max(min, Math.min(arg, max));\n}\n\n\n// sum of an array\njStat.sum = function sum(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n\n// sum squared\njStat.sumsqrd = function sumsqrd(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i] * arr[i];\n  return sum;\n};\n\n\n// sum of squared errors of prediction (SSE)\njStat.sumsqerr = function sumsqerr(arr) {\n  var mean = jStat.mean(arr);\n  var sum = 0;\n  var i = arr.length;\n  var tmp;\n  while (--i >= 0) {\n    tmp = arr[i] - mean;\n    sum += tmp * tmp;\n  }\n  return sum;\n};\n\n// sum of an array in each row\njStat.sumrow = function sumrow(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n// product of an array\njStat.product = function product(arr) {\n  var prod = 1;\n  var i = arr.length;\n  while (--i >= 0)\n    prod *= arr[i];\n  return prod;\n};\n\n\n// minimum value of an array\njStat.min = function min(arr) {\n  var low = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] < low)\n      low = arr[i];\n  return low;\n};\n\n\n// maximum value of an array\njStat.max = function max(arr) {\n  var high = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] > high)\n      high = arr[i];\n  return high;\n};\n\n\n// unique values of an array\njStat.unique = function unique(arr) {\n  var hash = {}, _arr = [];\n  for(var i = 0; i < arr.length; i++) {\n    if (!hash[arr[i]]) {\n      hash[arr[i]] = true;\n      _arr.push(arr[i]);\n    }\n  }\n  return _arr;\n};\n\n\n// mean value of an array\njStat.mean = function mean(arr) {\n  return jStat.sum(arr) / arr.length;\n};\n\n\n// mean squared error (MSE)\njStat.meansqerr = function meansqerr(arr) {\n  return jStat.sumsqerr(arr) / arr.length;\n};\n\n\n// geometric mean of an array\njStat.geomean = function geomean(arr) {\n  return Math.pow(jStat.product(arr), 1 / arr.length);\n};\n\n\n// median of an array\njStat.median = function median(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  // check if array is even or odd, then return the appropriate\n  return !(arrlen & 1)\n    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2\n    : _arr[(arrlen / 2) | 0 ];\n};\n\n\n// cumulative sum of an array\njStat.cumsum = function cumsum(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a + b; });\n};\n\n\n// cumulative product of an array\njStat.cumprod = function cumprod(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a * b; });\n};\n\n\n// successive differences of a sequence\njStat.diff = function diff(arr) {\n  var diffs = [];\n  var arrLen = arr.length;\n  var i;\n  for (i = 1; i < arrLen; i++)\n    diffs.push(arr[i] - arr[i - 1]);\n  return diffs;\n};\n\n\n// ranks of an array\njStat.rank = function (arr) {\n  var i;\n  var distinctNumbers = [];\n  var numberCounts = {};\n  for (i = 0; i < arr.length; i++) {\n    var number = arr[i];\n    if (numberCounts[number]) {\n      numberCounts[number]++;\n    } else {\n      numberCounts[number] = 1;\n      distinctNumbers.push(number);\n    }\n  }\n\n  var sortedDistinctNumbers = distinctNumbers.sort(ascNum);\n  var numberRanks = {};\n  var currentRank = 1;\n  for (i = 0; i < sortedDistinctNumbers.length; i++) {\n    var number = sortedDistinctNumbers[i];\n    var count = numberCounts[number];\n    var first = currentRank;\n    var last = currentRank + count - 1;\n    var rank = (first + last) / 2;\n    numberRanks[number] = rank;\n    currentRank += count;\n  }\n\n  return arr.map(function (number) {\n    return numberRanks[number];\n  });\n};\n\n\n// mode of an array\n// if there are multiple modes of an array, return all of them\n// is this the appropriate way of handling it?\njStat.mode = function mode(arr) {\n  var arrLen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  var count = 1;\n  var maxCount = 0;\n  var numMaxCount = 0;\n  var mode_arr = [];\n  var i;\n\n  for (i = 0; i < arrLen; i++) {\n    if (_arr[i] === _arr[i + 1]) {\n      count++;\n    } else {\n      if (count > maxCount) {\n        mode_arr = [_arr[i]];\n        maxCount = count;\n        numMaxCount = 0;\n      }\n      // are there multiple max counts\n      else if (count === maxCount) {\n        mode_arr.push(_arr[i]);\n        numMaxCount++;\n      }\n      // resetting count for new value in array\n      count = 1;\n    }\n  }\n\n  return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n};\n\n\n// range of an array\njStat.range = function range(arr) {\n  return jStat.max(arr) - jStat.min(arr);\n};\n\n// variance of an array\n// flag = true indicates sample instead of population\njStat.variance = function variance(arr, flag) {\n  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n};\n\n// pooled variance of an array of arrays\njStat.pooledvariance = function pooledvariance(arr) {\n  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);\n  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);\n  return sumsqerr / (count - arr.length);\n};\n\n// deviation of an array\njStat.deviation = function (arr) {\n  var mean = jStat.mean(arr);\n  var arrlen = arr.length;\n  var dev = new Array(arrlen);\n  for (var i = 0; i < arrlen; i++) {\n    dev[i] = arr[i] - mean;\n  }\n  return dev;\n};\n\n// standard deviation of an array\n// flag = true indicates sample instead of population\njStat.stdev = function stdev(arr, flag) {\n  return Math.sqrt(jStat.variance(arr, flag));\n};\n\n// pooled standard deviation of an array of arrays\njStat.pooledstdev = function pooledstdev(arr) {\n  return Math.sqrt(jStat.pooledvariance(arr));\n};\n\n// mean deviation (mean absolute deviation) of an array\njStat.meandev = function meandev(arr) {\n  var mean = jStat.mean(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - mean));\n  }\n  return jStat.mean(a);\n};\n\n\n// median deviation (median absolute deviation) of an array\njStat.meddev = function meddev(arr) {\n  var median = jStat.median(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - median));\n  }\n  return jStat.median(a);\n};\n\n\n// coefficient of variation\njStat.coeffvar = function coeffvar(arr) {\n  return jStat.stdev(arr) / jStat.mean(arr);\n};\n\n\n// quartiles of an array\njStat.quartiles = function quartiles(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  return [\n    _arr[ Math.round((arrlen) / 4) - 1 ],\n    _arr[ Math.round((arrlen) / 2) - 1 ],\n    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]\n  ];\n};\n\n\n// Arbitary quantiles of an array. Direct port of the scipy.stats\n// implementation by Pierre GF Gerard-Marchant.\njStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n  var sortedArray = arr.slice().sort(ascNum);\n  var quantileVals = [quantilesArray.length];\n  var n = arr.length;\n  var i, p, m, aleph, k, gamma;\n\n  if (typeof alphap === 'undefined')\n    alphap = 3 / 8;\n  if (typeof betap === 'undefined')\n    betap = 3 / 8;\n\n  for (i = 0; i < quantilesArray.length; i++) {\n    p = quantilesArray[i];\n    m = alphap + p * (1 - alphap - betap);\n    aleph = n * p + m;\n    k = Math.floor(clip(aleph, 1, n - 1));\n    gamma = clip(aleph - k, 0, 1);\n    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n  }\n\n  return quantileVals;\n};\n\n// Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n// Passing true for the exclusive parameter excludes both endpoints of the range.\njStat.percentile = function percentile(arr, k, exclusive) {\n  var _arr = arr.slice().sort(ascNum);\n  var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n  var index = parseInt(realIndex);\n  var frac = realIndex - index;\n  if (index + 1 < _arr.length) {\n    return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n  } else {\n    return _arr[index - 1];\n  }\n}\n\n// The percentile rank of score in a given array. Returns the percentage\n// of all values in the input array that are less than (kind='strict') or\n// less or equal than (kind='weak') score. Default is weak.\njStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n  var counter = 0;\n  var len = arr.length;\n  var strict = false;\n  var value, i;\n\n  if (kind === 'strict')\n    strict = true;\n\n  for (i = 0; i < len; i++) {\n    value = arr[i];\n    if ((strict && value < score) ||\n        (!strict && value <= score)) {\n      counter++;\n    }\n  }\n\n  return counter / len;\n};\n\n\n// Histogram (bin count) data\njStat.histogram = function histogram(arr, binCnt) {\n  binCnt = binCnt || 4;\n  var first = jStat.min(arr);\n  var binWidth = (jStat.max(arr) - first) / binCnt;\n  var len = arr.length;\n  var bins = [];\n  var i;\n\n  for (i = 0; i < binCnt; i++)\n    bins[i] = 0;\n  for (i = 0; i < len; i++)\n    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;\n\n  return bins;\n};\n\n\n// covariance of two arrays\njStat.covariance = function covariance(arr1, arr2) {\n  var u = jStat.mean(arr1);\n  var v = jStat.mean(arr2);\n  var arr1Len = arr1.length;\n  var sq_dev = new Array(arr1Len);\n  var i;\n\n  for (i = 0; i < arr1Len; i++)\n    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n  return jStat.sum(sq_dev) / (arr1Len - 1);\n};\n\n\n// (pearson's) population correlation coefficient, rho\njStat.corrcoeff = function corrcoeff(arr1, arr2) {\n  return jStat.covariance(arr1, arr2) /\n      jStat.stdev(arr1, 1) /\n      jStat.stdev(arr2, 1);\n};\n\n  // (spearman's) rank correlation coefficient, sp\njStat.spearmancoeff =  function (arr1, arr2) {\n  arr1 = jStat.rank(arr1);\n  arr2 = jStat.rank(arr2);\n  //return pearson's correlation of the ranks:\n  return jStat.corrcoeff(arr1, arr2);\n}\n\n\n// statistical standardized moments (general form of skew/kurt)\njStat.stanMoment = function stanMoment(arr, n) {\n  var mu = jStat.mean(arr);\n  var sigma = jStat.stdev(arr);\n  var len = arr.length;\n  var skewSum = 0;\n\n  for (var i = 0; i < len; i++)\n    skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n  return skewSum / arr.length;\n};\n\n// (pearson's) moment coefficient of skewness\njStat.skewness = function skewness(arr) {\n  return jStat.stanMoment(arr, 3);\n};\n\n// (pearson's) (excess) kurtosis\njStat.kurtosis = function kurtosis(arr) {\n  return jStat.stanMoment(arr, 4) - 3;\n};\n\n\nvar jProto = jStat.prototype;\n\n\n// Extend jProto with method for calculating cumulative sums and products.\n// This differs from the similar extension below as cumsum and cumprod should\n// not be run again in the case fullbool === true.\n// If a matrix is passed, automatically assume operation should be done on the\n// columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('cumsum cumprod').split(' '));\n\n\n// Extend jProto with methods which don't require arguments and work on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        if (passfunc !== 'sumrow')\n          tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return fullbool === true\n            ? jStat[passfunc](jStat.utils.toVector(arr))\n            : arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +\n    'geomean median diff rank mode range variance deviation stdev meandev ' +\n    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n\n// Extend jProto with functions that take arguments. Operations on matrices are\n// done on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callbackFunction;\n\n      // If the last argument is a function, we assume it's a callback; we\n      // strip the callback out and call the function again.\n      if (isFunction(args[args.length - 1])) {\n        callbackFunction = args[args.length - 1];\n        var argsToPass = args.slice(0, args.length - 1);\n\n        setTimeout(function() {\n          callbackFunction.call(tmpthis,\n                                jProto[passfunc].apply(tmpthis, argsToPass));\n        });\n        return this;\n\n      // Otherwise we curry the function args and call normally.\n      } else {\n        callbackFunction = undefined;\n        var curriedFunction = function curriedFunction(vector) {\n          return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n        }\n      }\n\n      // If this is a matrix, run column-by-column.\n      if (this.length > 1) {\n        tmpthis = tmpthis.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = curriedFunction(tmpthis[i]);\n        return arr;\n      }\n\n      // Otherwise run on the vector.\n      return curriedFunction(this[0]);\n    };\n  })(funcs[i]);\n})('quantiles percentileOfScore'.split(' '));\n\n}(jStat, Math));\n// Special functions //\n(function(jStat, Math) {\n\n// Log-gamma function\njStat.gammaln = function gammaln(x) {\n  var j = 0;\n  var cof = [\n    76.18009172947146, -86.50532032941677, 24.01409824083091,\n    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n  ];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++)\n    ser += cof[j] / ++y;\n  return Math.log(2.5066282746310005 * ser / xx) - tmp;\n};\n\n/*\n * log-gamma function to support poisson distribution sampling. The\n * algorithm comes from SPECFUN by Shanjie Zhang and Jianming Jin and their\n * book \"Computation of Special Functions\", 1996, John Wiley & Sons, Inc.\n */\njStat.loggam = function loggam(x) {\n  var x0, x2, xp, gl, gl0;\n  var k, n;\n\n  var a = [8.333333333333333e-02, -2.777777777777778e-03,\n          7.936507936507937e-04, -5.952380952380952e-04,\n          8.417508417508418e-04, -1.917526917526918e-03,\n          6.410256410256410e-03, -2.955065359477124e-02,\n          1.796443723688307e-01, -1.39243221690590e+00];\n  x0 = x;\n  n = 0;\n  if ((x == 1.0) || (x == 2.0)) {\n      return 0.0;\n  }\n  if (x <= 7.0) {\n      n = Math.floor(7 - x);\n      x0 = x + n;\n  }\n  x2 = 1.0 / (x0 * x0);\n  xp = 2 * Math.PI;\n  gl0 = a[9];\n  for (k = 8; k >= 0; k--) {\n      gl0 *= x2;\n      gl0 += a[k];\n  }\n  gl = gl0 / x0 + 0.5 * Math.log(xp) + (x0 - 0.5) * Math.log(x0) - x0;\n  if (x <= 7.0) {\n      for (k = 1; k <= n; k++) {\n          gl -= Math.log(x0 - 1.0);\n          x0 -= 1.0;\n      }\n  }\n  return gl;\n}\n\n// gamma of x\njStat.gammafn = function gammafn(x) {\n  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n           629.3311553128184, 866.9662027904133, -31451.272968848367,\n           -36144.413418691176, 66456.14382024054\n  ];\n  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n           -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n           -134659.9598649693, -115132.2596755535];\n  var fact = false;\n  var n = 0;\n  var xden = 0;\n  var xnum = 0;\n  var y = x;\n  var i, z, yi, res;\n  if (x > 171.6243769536076) {\n    return Infinity;\n  }\n  if (y <= 0) {\n    res = y % 1 + 3.6e-16;\n    if (res) {\n      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n      y = 1 - y;\n    } else {\n      return Infinity;\n    }\n  }\n  yi = y;\n  if (y < 1) {\n    z = y++;\n  } else {\n    z = (y -= n = (y | 0) - 1) - 1;\n  }\n  for (i = 0; i < 8; ++i) {\n    xnum = (xnum + p[i]) * z;\n    xden = xden * z + q[i];\n  }\n  res = xnum / xden + 1;\n  if (yi < y) {\n    res /= yi;\n  } else if (yi > y) {\n    for (i = 0; i < n; ++i) {\n      res *= y;\n      y++;\n    }\n  }\n  if (fact) {\n    res = fact / res;\n  }\n  return res;\n};\n\n\n// lower incomplete gamma function, which is usually typeset with a\n// lower-case greek gamma as the function symbol\njStat.gammap = function gammap(a, x) {\n  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n};\n\n\n// The lower regularized incomplete gamma function, usually written P(a,x)\njStat.lowRegGamma = function lowRegGamma(a, x) {\n  var aln = jStat.gammaln(a);\n  var ap = a;\n  var sum = 1 / a;\n  var del = sum;\n  var b = x + 1 - a;\n  var c = 1 / 1.0e-30;\n  var d = 1 / b;\n  var h = d;\n  var i = 1;\n  // calculate maximum number of itterations required for a\n  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n  var an;\n\n  if (x < 0 || a <= 0) {\n    return NaN;\n  } else if (x < a + 1) {\n    for (; i <= ITMAX; i++) {\n      sum += del *= x / ++ap;\n    }\n    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n  }\n\n  for (; i <= ITMAX; i++) {\n    an = -i * (i - a);\n    b += 2;\n    d = an * d + b;\n    c = b + an / c;\n    d = 1 / d;\n    h *= d * c;\n  }\n\n  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n};\n\n// natural log factorial of n\njStat.factorialln = function factorialln(n) {\n  return n < 0 ? NaN : jStat.gammaln(n + 1);\n};\n\n// factorial of n\njStat.factorial = function factorial(n) {\n  return n < 0 ? NaN : jStat.gammafn(n + 1);\n};\n\n// combinations of n, m\njStat.combination = function combination(n, m) {\n  // make sure n or m don't exceed the upper limit of usable values\n  return (n > 170 || m > 170)\n      ? Math.exp(jStat.combinationln(n, m))\n      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);\n};\n\n\njStat.combinationln = function combinationln(n, m){\n  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n};\n\n\n// permutations of n, m\njStat.permutation = function permutation(n, m) {\n  return jStat.factorial(n) / jStat.factorial(n - m);\n};\n\n\n// beta function\njStat.betafn = function betafn(x, y) {\n  // ensure arguments are positive\n  if (x <= 0 || y <= 0)\n    return undefined;\n  // make sure x + y doesn't exceed the upper limit of usable values\n  return (x + y > 170)\n      ? Math.exp(jStat.betaln(x, y))\n      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n};\n\n\n// natural logarithm of beta function\njStat.betaln = function betaln(x, y) {\n  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n};\n\n\n// Evaluates the continued fraction for incomplete beta function by modified\n// Lentz's method.\njStat.betacf = function betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q's will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin)\n    d = fpmin;\n  d = 1 / d;\n  h = d;\n\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7)\n      break;\n  }\n\n  return h;\n};\n\n\n// Returns the inverse of the lower regularized inomplete gamma function\njStat.gammapinv = function gammapinv(p, a) {\n  var j = 0;\n  var a1 = a - 1;\n  var EPS = 1e-8;\n  var gln = jStat.gammaln(a);\n  var x, err, t, u, pp, lna1, afac;\n\n  if (p >= 1)\n    return Math.max(100, a + 100 * Math.sqrt(a));\n  if (p <= 0)\n    return 0;\n  if (a > 1) {\n    lna1 = Math.log(a1);\n    afac = Math.exp(a1 * (lna1 - 1) - gln);\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    x = Math.max(1e-3,\n                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n  } else {\n    t = 1 - a * (0.253 + a * 0.12);\n    if (p < t)\n      x = Math.pow(p / t, 1 / a);\n    else\n      x = 1 - Math.log(1 - (p - t) / (1 - t));\n  }\n\n  for(; j < 12; j++) {\n    if (x <= 0)\n      return 0;\n    err = jStat.lowRegGamma(a, x) - p;\n    if (a > 1)\n      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n    else\n      t = Math.exp(-x + a1 * Math.log(x) - gln);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (Math.abs(t) < EPS * x)\n      break;\n  }\n\n  return x;\n};\n\n\n// Returns the error function erf(x)\njStat.erf = function erf(x) {\n  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n             -6.886027e-12, 8.94487e-13, 3.13092e-13,\n             -1.12708e-13, 3.81e-16, 7.106e-15,\n             -1.523e-15, -9.4e-17, 1.21e-16,\n             -2.8e-17];\n  var j = cof.length - 1;\n  var isneg = false;\n  var d = 0;\n  var dd = 0;\n  var t, ty, tmp, res;\n\n  if (x < 0) {\n    x = -x;\n    isneg = true;\n  }\n\n  t = 2 / (2 + x);\n  ty = 4 * t - 2;\n\n  for(; j > 0; j--) {\n    tmp = d;\n    d = ty * d - dd + cof[j];\n    dd = tmp;\n  }\n\n  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n  return isneg ? res - 1 : 1 - res;\n};\n\n\n// Returns the complmentary error function erfc(x)\njStat.erfc = function erfc(x) {\n  return 1 - jStat.erf(x);\n};\n\n\n// Returns the inverse of the complementary error function\njStat.erfcinv = function erfcinv(p) {\n  var j = 0;\n  var x, err, t, pp;\n  if (p >= 2)\n    return -100;\n  if (p <= 0)\n    return 100;\n  pp = (p < 1) ? p : 2 - p;\n  t = Math.sqrt(-2 * Math.log(pp / 2));\n  x = -0.70711 * ((2.30753 + t * 0.27061) /\n                  (1 + t * (0.99229 + t * 0.04481)) - t);\n  for (; j < 2; j++) {\n    err = jStat.erfc(x) - pp;\n    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n  }\n  return (p < 1) ? x : -x;\n};\n\n\n// Returns the inverse of the incomplete beta function\njStat.ibetainv = function ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0)\n    return 0;\n  if (p >= 1)\n    return 1;\n  if (a >= 1 && b >= 1) {\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));\n    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n        (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w)\n      x = Math.pow(a * w * p, 1 / a);\n    else\n      x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n  for(; j < 10; j++) {\n    if (x === 0 || x === 1)\n      return x;\n    err = jStat.ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (x >= 1)\n      x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0)\n      break;\n  }\n  return x;\n};\n\n\n// Returns the incomplete beta function I_x(a,b)\njStat.ibeta = function ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = (x === 0 || x === 1) ?  0 :\n    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -\n             jStat.gammaln(b) + a * Math.log(x) + b *\n             Math.log(1 - x));\n  if (x < 0 || x > 1)\n    return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * jStat.betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n};\n\n\n// Returns a normal deviate (mu=0, sigma=1).\n// If n and m are specified it returns a object of normal deviates.\njStat.randn = function randn(n, m) {\n  var u, v, x, y, q;\n  if (!m)\n    m = n;\n  if (n)\n    return jStat.create(n, m, function() { return jStat.randn(); });\n  do {\n    u = jStat._random_fn();\n    v = 1.7156 * (jStat._random_fn() - 0.5);\n    x = u - 0.449871;\n    y = Math.abs(v) + 0.386595;\n    q = x * x + y * (0.19600 * y - 0.25472 * x);\n  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n  return v / u;\n};\n\n\n// Returns a gamma deviate by the method of Marsaglia and Tsang.\njStat.randg = function randg(shape, n, m) {\n  var oalph = shape;\n  var a1, a2, u, v, x, mat;\n  if (!m)\n    m = n;\n  if (!shape)\n    shape = 1;\n  if (n) {\n    mat = jStat.zeros(n,m);\n    mat.alter(function() { return jStat.randg(shape); });\n    return mat;\n  }\n  if (shape < 1)\n    shape += 1;\n  a1 = shape - 1 / 3;\n  a2 = 1 / Math.sqrt(9 * a1);\n  do {\n    do {\n      x = jStat.randn();\n      v = 1 + a2 * x;\n    } while(v <= 0);\n    v = v * v * v;\n    u = jStat._random_fn();\n  } while(u > 1 - 0.331 * Math.pow(x, 4) &&\n          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));\n  // alpha > 1\n  if (shape == oalph)\n    return a1 * v;\n  // alpha < 1\n  do {\n    u = jStat._random_fn();\n  } while(u === 0);\n  return Math.pow(u, 1 / oalph) * a1 * v;\n};\n\n\n// making use of static methods on the instance\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(\n          jStat.map(this, function(value) { return jStat[passfunc](value); }));\n    }\n  })(funcs[i]);\n})('gammaln gammafn factorial factorialln'.split(' '));\n\n\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('randn'.split(' '));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\n// generate all distribution instance methods\n(function(list) {\n  for (var i = 0; i < list.length; i++) (function(func) {\n    // distribution instance method\n    jStat[func] = function f(a, b, c) {\n      if (!(this instanceof f))\n        return new f(a, b, c);\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      return this;\n    };\n    // distribution method to be used on a jStat instance\n    jStat.fn[func] = function(a, b, c) {\n      var newthis = jStat[func](a, b, c);\n      newthis.data = this;\n      return newthis;\n    };\n    // sample instance method\n    jStat[func].prototype.sample = function(arr) {\n      var a = this._a;\n      var b = this._b;\n      var c = this._c;\n      if (arr)\n        return jStat.alter(arr, function() {\n          return jStat[func].sample(a, b, c);\n        });\n      else\n        return jStat[func].sample(a, b, c);\n    };\n    // generate the pdf, cdf and inv instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function(x) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (!x && x !== 0)\n            x = this.data;\n          if (typeof x !== 'number') {\n            return jStat.fn.map.call(x, function(x) {\n              return jStat[func][fnfunc](x, a, b, c);\n            });\n          }\n          return jStat[func][fnfunc](x, a, b, c);\n        };\n      })(vals[i]);\n    })('pdf cdf inv'.split(' '));\n    // generate the mean, median, mode and variance instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function() {\n          return jStat[func][fnfunc](this._a, this._b, this._c);\n        };\n      })(vals[i]);\n    })('mean median mode variance'.split(' '));\n  })(list[i]);\n})((\n  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +\n  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +\n  'binomial negbin hypgeom poisson triangular tukey arcsine'\n).split(' '));\n\n\n\n// extend beta function with static methods\njStat.extend(jStat.beta, {\n  pdf: function pdf(x, alpha, beta) {\n    // PDF is zero outside the support\n    if (x > 1 || x < 0)\n      return 0;\n    // PDF is one for the uniform case\n    if (alpha == 1 && beta == 1)\n      return 1;\n\n    if (alpha < 512 && beta < 512) {\n      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n          jStat.betafn(alpha, beta);\n    } else {\n      return Math.exp((alpha - 1) * Math.log(x) +\n                      (beta - 1) * Math.log(1 - x) -\n                      jStat.betaln(alpha, beta));\n    }\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n  },\n\n  inv: function inv(x, alpha, beta) {\n    return jStat.ibetainv(x, alpha, beta);\n  },\n\n  mean: function mean(alpha, beta) {\n    return alpha / (alpha + beta);\n  },\n\n  median: function median(alpha, beta) {\n    return jStat.ibetainv(0.5, alpha, beta);\n  },\n\n  mode: function mode(alpha, beta) {\n    return (alpha - 1 ) / ( alpha + beta - 2);\n  },\n\n  // return a random sample\n  sample: function sample(alpha, beta) {\n    var u = jStat.randg(alpha);\n    return u / (u + jStat.randg(beta));\n  },\n\n  variance: function variance(alpha, beta) {\n    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n  }\n});\n\n// extend F function with static methods\njStat.extend(jStat.centralF, {\n  // This implementation of the pdf function avoids float overflow\n  // See the way that R calculates this value:\n  // https://svn.r-project.org/R/trunk/src/nmath/df.c\n  pdf: function pdf(x, df1, df2) {\n    var p, q, f;\n\n    if (x < 0)\n      return 0;\n\n    if (df1 <= 2) {\n      if (x === 0 && df1 < 2) {\n        return Infinity;\n      }\n      if (x === 0 && df1 === 2) {\n        return 1;\n      }\n      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *\n              Math.pow(df1 / df2, df1 / 2) *\n              Math.pow(x, (df1/2) - 1) *\n              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n    }\n\n    p = (df1 * x) / (df2 + x * df1);\n    q = df2 / (df2 + x * df1);\n    f = df1 * q / 2.0;\n    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n  },\n\n  cdf: function cdf(x, df1, df2) {\n    if (x < 0)\n      return 0;\n    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n  },\n\n  inv: function inv(x, df1, df2) {\n    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n  },\n\n  mean: function mean(df1, df2) {\n    return (df2 > 2) ? df2 / (df2 - 2) : undefined;\n  },\n\n  mode: function mode(df1, df2) {\n    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;\n  },\n\n  // return a random sample\n  sample: function sample(df1, df2) {\n    var x1 = jStat.randg(df1 / 2) * 2;\n    var x2 = jStat.randg(df2 / 2) * 2;\n    return (x1 / df1) / (x2 / df2);\n  },\n\n  variance: function variance(df1, df2) {\n    if (df2 <= 4)\n      return undefined;\n    return 2 * df2 * df2 * (df1 + df2 - 2) /\n        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n  }\n});\n\n\n// extend cauchy function with static methods\njStat.extend(jStat.cauchy, {\n  pdf: function pdf(x, local, scale) {\n    if (scale < 0) { return 0; }\n\n    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;\n  },\n\n  cdf: function cdf(x, local, scale) {\n    return Math.atan((x - local) / scale) / Math.PI + 0.5;\n  },\n\n  inv: function(p, local, scale) {\n    return local + scale * Math.tan(Math.PI * (p - 0.5));\n  },\n\n  median: function median(local/*, scale*/) {\n    return local;\n  },\n\n  mode: function mode(local/*, scale*/) {\n    return local;\n  },\n\n  sample: function sample(local, scale) {\n    return jStat.randn() *\n        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n  }\n});\n\n\n\n// extend chisquare function with static methods\njStat.extend(jStat.chisquare, {\n  pdf: function pdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && dof === 2) ? 0.5 :\n        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                 Math.log(2) - jStat.gammaln(dof / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(dof / 2, x / 2);\n  },\n\n  inv: function(p, dof) {\n    return 2 * jStat.gammapinv(p, 0.5 * dof);\n  },\n\n  mean : function(dof) {\n    return dof;\n  },\n\n  // TODO: this is an approximation (is there a better way?)\n  median: function median(dof) {\n    return dof * Math.pow(1 - (2 / (9 * dof)), 3);\n  },\n\n  mode: function mode(dof) {\n    return (dof - 2 > 0) ? dof - 2 : 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randg(dof / 2) * 2;\n  },\n\n  variance: function variance(dof) {\n    return 2 * dof;\n  }\n});\n\n\n\n// extend exponential function with static methods\njStat.extend(jStat.exponential, {\n  pdf: function pdf(x, rate) {\n    return x < 0 ? 0 : rate * Math.exp(-rate * x);\n  },\n\n  cdf: function cdf(x, rate) {\n    return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n  },\n\n  inv: function(p, rate) {\n    return -Math.log(1 - p) / rate;\n  },\n\n  mean : function(rate) {\n    return 1 / rate;\n  },\n\n  median: function (rate) {\n    return (1 / rate) * Math.log(2);\n  },\n\n  mode: function mode(/*rate*/) {\n    return 0;\n  },\n\n  sample: function sample(rate) {\n    return -1 / rate * Math.log(jStat._random_fn());\n  },\n\n  variance : function(rate) {\n    return Math.pow(rate, -2);\n  }\n});\n\n\n\n// extend gamma function with static methods\njStat.extend(jStat.gamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                    jStat.gammaln(shape) - shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(shape, x / scale);\n  },\n\n  inv: function(p, shape, scale) {\n    return jStat.gammapinv(p, shape) * scale;\n  },\n\n  mean : function(shape, scale) {\n    return shape * scale;\n  },\n\n  mode: function mode(shape, scale) {\n    if(shape > 1) return (shape - 1) * scale;\n    return undefined;\n  },\n\n  sample: function sample(shape, scale) {\n    return jStat.randg(shape) * scale;\n  },\n\n  variance: function variance(shape, scale) {\n    return shape * scale * scale;\n  }\n});\n\n// extend inverse gamma function with static methods\njStat.extend(jStat.invgamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -\n                    jStat.gammaln(shape) + shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return 1 - jStat.lowRegGamma(shape, scale / x);\n  },\n\n  inv: function(p, shape, scale) {\n    return scale / jStat.gammapinv(1 - p, shape);\n  },\n\n  mean : function(shape, scale) {\n    return (shape > 1) ? scale / (shape - 1) : undefined;\n  },\n\n  mode: function mode(shape, scale) {\n    return scale / (shape + 1);\n  },\n\n  sample: function sample(shape, scale) {\n    return scale / jStat.randg(shape);\n  },\n\n  variance: function variance(shape, scale) {\n    if (shape <= 2)\n      return undefined;\n    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n  }\n});\n\n\n// extend kumaraswamy function with static methods\njStat.extend(jStat.kumaraswamy, {\n  pdf: function pdf(x, alpha, beta) {\n    if (x === 0 && alpha === 1)\n      return beta;\n    else if (x === 1 && beta === 1)\n      return alpha;\n    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *\n                    Math.log(x) + (beta - 1) *\n                    Math.log(1 - Math.pow(x, alpha)));\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    if (x < 0)\n      return 0;\n    else if (x > 1)\n      return 1;\n    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));\n  },\n\n  inv: function inv(p, alpha, beta) {\n    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n  },\n\n  mean : function(alpha, beta) {\n    return (beta * jStat.gammafn(1 + 1 / alpha) *\n            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));\n  },\n\n  median: function median(alpha, beta) {\n    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n  },\n\n  mode: function mode(alpha, beta) {\n    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n      return undefined;\n    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n  },\n\n  variance: function variance(/*alpha, beta*/) {\n    throw new Error('variance not yet implemented');\n    // TODO: complete this\n  }\n});\n\n\n\n// extend lognormal function with static methods\njStat.extend(jStat.lognormal, {\n  pdf: function pdf(x, mu, sigma) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n                    (2 * sigma * sigma));\n  },\n\n  cdf: function cdf(x, mu, sigma) {\n    if (x < 0)\n      return 0;\n    return 0.5 +\n        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n  },\n\n  inv: function(p, mu, sigma) {\n    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n  },\n\n  mean: function mean(mu, sigma) {\n    return Math.exp(mu + sigma * sigma / 2);\n  },\n\n  median: function median(mu/*, sigma*/) {\n    return Math.exp(mu);\n  },\n\n  mode: function mode(mu, sigma) {\n    return Math.exp(mu - sigma * sigma);\n  },\n\n  sample: function sample(mu, sigma) {\n    return Math.exp(jStat.randn() * sigma + mu);\n  },\n\n  variance: function variance(mu, sigma) {\n    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n  }\n});\n\n\n\n// extend noncentralt function with static methods\njStat.extend(jStat.noncentralt, {\n  pdf: function pdf(x, dof, ncp) {\n    var tol = 1e-14;\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.pdf(x, dof)\n\n    if (Math.abs(x) < tol) {  // different formula for x == 0\n      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -\n                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n    }\n\n    // formula for x != 0\n    return dof / x *\n        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -\n         jStat.noncentralt.cdf(x, dof, ncp));\n  },\n\n  cdf: function cdf(x, dof, ncp) {\n    var tol = 1e-14;\n    var min_iterations = 200;\n\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.cdf(x, dof);\n\n    // turn negative x into positive and flip result afterwards\n    var flip = false;\n    if (x < 0) {\n      flip = true;\n      ncp = -ncp;\n    }\n\n    var prob = jStat.normal.cdf(-ncp, 0, 1);\n    var value = tol + 1;\n    // use value at last two steps to determine convergence\n    var lastvalue = value;\n    var y = x * x / (x * x + dof);\n    var j = 0;\n    var p = Math.exp(-ncp * ncp / 2);\n    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -\n                     jStat.gammaln(3 / 2)) * ncp;\n    while (j < min_iterations || lastvalue > tol || value > tol) {\n      lastvalue = value;\n      if (j > 0) {\n        p *= (ncp * ncp) / (2 * j);\n        q *= (ncp * ncp) / (2 * (j + 1 / 2));\n      }\n      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +\n          q * jStat.beta.cdf(y, j+1, dof/2);\n      prob += 0.5 * value;\n      j++;\n    }\n\n    return flip ? (1 - prob) : prob;\n  }\n});\n\n\n// extend normal function with static methods\njStat.extend(jStat.normal, {\n  pdf: function pdf(x, mean, std) {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n  },\n\n  cdf: function cdf(x, mean, std) {\n    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n  },\n\n  inv: function(p, mean, std) {\n    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n  },\n\n  mean : function(mean/*, std*/) {\n    return mean;\n  },\n\n  median: function median(mean/*, std*/) {\n    return mean;\n  },\n\n  mode: function (mean/*, std*/) {\n    return mean;\n  },\n\n  sample: function sample(mean, std) {\n    return jStat.randn() * std + mean;\n  },\n\n  variance : function(mean, std) {\n    return std * std;\n  }\n});\n\n\n\n// extend pareto function with static methods\njStat.extend(jStat.pareto, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return 1 - Math.pow(scale / x, shape);\n  },\n\n  inv: function inv(p, scale, shape) {\n    return scale / Math.pow(1 - p, 1 / shape);\n  },\n\n  mean: function mean(scale, shape) {\n    if (shape <= 1)\n      return undefined;\n    return (shape * Math.pow(scale, shape)) / (shape - 1);\n  },\n\n  median: function median(scale, shape) {\n    return scale * (shape * Math.SQRT2);\n  },\n\n  mode: function mode(scale/*, shape*/) {\n    return scale;\n  },\n\n  variance : function(scale, shape) {\n    if (shape <= 2)\n      return undefined;\n    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));\n  }\n});\n\n\n\n// extend studentt function with static methods\njStat.extend(jStat.studentt, {\n  pdf: function pdf(x, dof) {\n    dof = dof > 1e100 ? 1e100 : dof;\n    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *\n        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    var dof2 = dof / 2;\n    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /\n                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n  },\n\n  inv: function(p, dof) {\n    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt(dof * (1 - x) / x);\n    return (p > 0.5) ? x : -x;\n  },\n\n  mean: function mean(dof) {\n    return (dof > 1) ? 0 : undefined;\n  },\n\n  median: function median(/*dof*/) {\n    return 0;\n  },\n\n  mode: function mode(/*dof*/) {\n    return 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n  },\n\n  variance: function variance(dof) {\n    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;\n  }\n});\n\n\n\n// extend weibull function with static methods\njStat.extend(jStat.weibull, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < 0 || scale < 0 || shape < 0)\n      return 0;\n    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n        Math.exp(-(Math.pow((x / scale), shape)));\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n  },\n\n  inv: function(p, scale, shape) {\n    return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n  },\n\n  mean : function(scale, shape) {\n    return scale * jStat.gammafn(1 + 1 / shape);\n  },\n\n  median: function median(scale, shape) {\n    return scale * Math.pow(Math.log(2), 1 / shape);\n  },\n\n  mode: function mode(scale, shape) {\n    if (shape <= 1)\n      return 0;\n    return scale * Math.pow((shape - 1) / shape, 1 / shape);\n  },\n\n  sample: function sample(scale, shape) {\n    return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n  },\n\n  variance: function variance(scale, shape) {\n    return scale * scale * jStat.gammafn(1 + 2 / shape) -\n        Math.pow(jStat.weibull.mean(scale, shape), 2);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.uniform, {\n  pdf: function pdf(x, a, b) {\n    return (x < a || x > b) ? 0 : 1 / (b - a);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (x - a) / (b - a);\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (p * (b - a));\n  },\n\n  mean: function mean(a, b) {\n    return 0.5 * (a + b);\n  },\n\n  median: function median(a, b) {\n    return jStat.mean(a, b);\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n  },\n\n  variance: function variance(a, b) {\n    return Math.pow(b - a, 2) / 12;\n  }\n});\n\n\n// Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\nfunction betinc(x, a, b, eps) {\n  var a0 = 0;\n  var b0 = 1;\n  var a1 = 1;\n  var b1 = 1;\n  var m9 = 0;\n  var a2 = 0;\n  var c9;\n\n  while (Math.abs((a1 - a2) / a1) > eps) {\n    a2 = a1;\n    c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n    a0 = a1 + c9 * a0;\n    b0 = b1 + c9 * b0;\n    m9 = m9 + 1;\n    c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n    a1 = a0 + c9 * a1;\n    b1 = b0 + c9 * b1;\n    a0 = a0 / b1;\n    b0 = b0 / b1;\n    a1 = a1 / b1;\n    b1 = 1;\n  }\n\n  return a1 / a;\n}\n\n\n// extend uniform function with static methods\njStat.extend(jStat.binomial, {\n  pdf: function pdf(k, n, p) {\n    return (p === 0 || p === 1) ?\n      ((n * p) === k ? 1 : 0) :\n      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n  },\n\n  cdf: function cdf(x, n, p) {\n    var betacdf;\n    var eps = 1e-10;\n\n    if (x < 0)\n      return 0;\n    if (x >= n)\n      return 1;\n    if (p < 0 || p > 1 || n <= 0)\n      return NaN;\n\n    x = Math.floor(x);\n    var z = p;\n    var a = x + 1;\n    var b = n - x;\n    var s = a + b;\n    var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) -\n                      jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n\n    if (z < (a + 1) / (s + 2))\n      betacdf = bt * betinc(z, a, b, eps);\n    else\n      betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n\n    return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.negbin, {\n  pdf: function pdf(k, r, p) {\n    if (k !== k >>> 0)\n      return false;\n    if (k < 0)\n      return 0;\n    return jStat.combination(k + r - 1, r - 1) *\n        Math.pow(1 - p, k) * Math.pow(p, r);\n  },\n\n  cdf: function cdf(x, r, p) {\n    var sum = 0,\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sum += jStat.negbin.pdf(k, r, p);\n    }\n    return sum;\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.hypgeom, {\n  pdf: function pdf(k, N, m, n) {\n    // Hypergeometric PDF.\n\n    // A simplification of the CDF algorithm below.\n\n    // k = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(k !== k | 0) {\n      return false;\n    } else if(k < 0 || k < m - (N - n)) {\n      // It's impossible to have this few successes drawn.\n      return 0;\n    } else if(k > n || k > m) {\n      // It's impossible to have this many successes drawn.\n      return 0;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return jStat.hypgeom.pdf(m - k, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.pdf(k, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate product to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < k; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledPDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          scaledPDF *= 1 - (m / (N - samplesDone));\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledPDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledPDF));\n    }\n  },\n\n  cdf: function cdf(x, N, m, n) {\n    // Hypergeometric CDF.\n\n    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n    // and comes from his hypergeometric test calculator at\n    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n    // x = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(x < 0 || x < m - (N - n)) {\n      // It's impossible to have this few successes drawn or fewer.\n      return 0;\n    } else if(x >= n || x >= m) {\n      // We will always have this many successes or fewer.\n      return 1;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.cdf(x, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate sum to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // Holds the intermediate, scaled total CDF.\n      var scaledCDF = 1;\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < x; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledCDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          var factor = 1 - (m / (N - samplesDone));\n\n          scaledPDF *= factor;\n          scaledCDF *= factor;\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n        // Add to the CDF answer.\n        scaledCDF += scaledPDF;\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledCDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledCDF));\n    }\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.poisson, {\n  pdf: function pdf(k, l) {\n    if (l < 0 || (k % 1) !== 0 || k < 0) {\n      return 0;\n    }\n\n    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n  },\n\n  cdf: function cdf(x, l) {\n    var sumarr = [],\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sumarr.push(jStat.poisson.pdf(k, l));\n    }\n    return jStat.sum(sumarr);\n  },\n\n  mean : function(l) {\n    return l;\n  },\n\n  variance : function(l) {\n    return l;\n  },\n\n  sampleSmall: function sampleSmall(l) {\n    var p = 1, k = 0, L = Math.exp(-l);\n    do {\n      k++;\n      p *= jStat._random_fn();\n    } while (p > L);\n    return k - 1;\n  },\n\n  sampleLarge: function sampleLarge(l) {\n    var lam = l;\n    var k;\n    var U, V, slam, loglam, a, b, invalpha, vr, us;\n\n    slam = Math.sqrt(lam);\n    loglam = Math.log(lam);\n    b = 0.931 + 2.53 * slam;\n    a = -0.059 + 0.02483 * b;\n    invalpha = 1.1239 + 1.1328 / (b - 3.4);\n    vr = 0.9277 - 3.6224 / (b - 2);\n\n    while (1) {\n      U = Math.random() - 0.5;\n      V = Math.random();\n      us = 0.5 - Math.abs(U);\n      k = Math.floor((2 * a / us + b) * U + lam + 0.43);\n      if ((us >= 0.07) && (V <= vr)) {\n          return k;\n      }\n      if ((k < 0) || ((us < 0.013) && (V > us))) {\n          continue;\n      }\n      /* log(V) == log(0.0) ok here */\n      /* if U==0.0 so that us==0.0, log is ok since always returns */\n      if ((Math.log(V) + Math.log(invalpha) - Math.log(a / (us * us) + b)) <= (-lam + k * loglam - jStat.loggam(k + 1))) {\n          return k;\n      }\n    }\n  },\n\n  sample: function sample(l) {\n    if (l < 10)\n      return this.sampleSmall(l);\n    else\n      return this.sampleLarge(l);\n  }\n});\n\n// extend triangular function with static methods\njStat.extend(jStat.triangular, {\n  pdf: function pdf(x, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (x < a || x > b) {\n        return 0;\n      } else if (x < c) {\n          return (2 * (x - a)) / ((b - a) * (c - a));\n      } else if (x === c) {\n          return (2 / (b - a));\n      } else { // x > c\n          return (2 * (b - x)) / ((b - a) * (b - c));\n      }\n    }\n  },\n\n  cdf: function cdf(x, a, b, c) {\n    if (b <= a || c < a || c > b)\n      return NaN;\n    if (x <= a)\n      return 0;\n    else if (x >= b)\n      return 1;\n    if (x <= c)\n      return Math.pow(x - a, 2) / ((b - a) * (c - a));\n    else // x > c\n      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n  },\n\n  inv: function inv(p, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (p <= ((c - a) / (b - a))) {\n        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n      } else { // p > ((c - a) / (b - a))\n        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));\n      }\n    }\n  },\n\n  mean: function mean(a, b, c) {\n    return (a + b + c) / 3;\n  },\n\n  median: function median(a, b, c) {\n    if (c <= (a + b) / 2) {\n      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n    } else if (c > (a + b) / 2) {\n      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n    }\n  },\n\n  mode: function mode(a, b, c) {\n    return c;\n  },\n\n  sample: function sample(a, b, c) {\n    var u = jStat._random_fn();\n    if (u < ((c - a) / (b - a)))\n      return a + Math.sqrt(u * (b - a) * (c - a))\n    return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n  },\n\n  variance: function variance(a, b, c) {\n    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n  }\n});\n\n\n// extend arcsine function with static methods\njStat.extend(jStat.arcsine, {\n  pdf: function pdf(x, a, b) {\n    if (b <= a) return NaN;\n\n    return (x <= a || x >= b) ? 0 :\n      (2 / Math.PI) *\n        Math.pow(Math.pow(b - a, 2) -\n                  Math.pow(2 * x - a - b, 2), -0.5);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n  },\n\n  mean: function mean(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  median: function median(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return ((a + b) / 2) + ((b - a) / 2) *\n      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n  },\n\n  variance: function variance(a, b) {\n    if (b <= a) return NaN;\n    return Math.pow(b - a, 2) / 8;\n  }\n});\n\n\nfunction laplaceSign(x) { return x / Math.abs(x); }\n\njStat.extend(jStat.laplace, {\n  pdf: function pdf(x, mu, b) {\n    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);\n  },\n\n  cdf: function cdf(x, mu, b) {\n    if (b <= 0) { return 0; }\n\n    if(x < mu) {\n      return 0.5 * Math.exp((x - mu) / b);\n    } else {\n      return 1 - 0.5 * Math.exp(- (x - mu) / b);\n    }\n  },\n\n  mean: function(mu/*, b*/) {\n    return mu;\n  },\n\n  median: function(mu/*, b*/) {\n    return mu;\n  },\n\n  mode: function(mu/*, b*/) {\n    return mu;\n  },\n\n  variance: function(mu, b) {\n    return 2 * b * b;\n  },\n\n  sample: function sample(mu, b) {\n    var u = jStat._random_fn() - 0.5;\n\n    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));\n  }\n});\n\nfunction tukeyWprob(w, rr, cc) {\n  var nleg = 12;\n  var ihalf = 6;\n\n  var C1 = -30;\n  var C2 = -50;\n  var C3 = 60;\n  var bb   = 8;\n  var wlar = 3;\n  var wincr1 = 2;\n  var wincr2 = 3;\n  var xleg = [\n    0.981560634246719250690549090149,\n    0.904117256370474856678465866119,\n    0.769902674194304687036893833213,\n    0.587317954286617447296702418941,\n    0.367831498998180193752691536644,\n    0.125233408511468915472441369464\n  ];\n  var aleg = [\n    0.047175336386511827194615961485,\n    0.106939325995318430960254718194,\n    0.160078328543346226334652529543,\n    0.203167426723065921749064455810,\n    0.233492536538354808760849898925,\n    0.249147045813402785000562436043\n  ];\n\n  var qsqz = w * 0.5;\n\n  // if w >= 16 then the integral lower bound (occurs for c=20)\n  // is 0.99999999999995 so return a value of 1.\n\n  if (qsqz >= bb)\n    return 1.0;\n\n  // find (f(w/2) - 1) ^ cc\n  // (first term in integral of hartley's form).\n\n  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n  // if pr_w ^ cc < 2e-22 then set pr_w = 0\n  if (pr_w >= Math.exp(C2 / cc))\n    pr_w = Math.pow(pr_w, cc);\n  else\n    pr_w = 0.0;\n\n  // if w is large then the second component of the\n  // integral is small, so fewer intervals are needed.\n\n  var wincr;\n  if (w > wlar)\n    wincr = wincr1;\n  else\n    wincr = wincr2;\n\n  // find the integral of second term of hartley's form\n  // for the integral of the range for equal-length\n  // intervals using legendre quadrature.  limits of\n  // integration are from (w/2, 8).  two or three\n  // equal-length intervals are used.\n\n  // blb and bub are lower and upper limits of integration.\n\n  var blb = qsqz;\n  var binc = (bb - qsqz) / wincr;\n  var bub = blb + binc;\n  var einsum = 0.0;\n\n  // integrate over each interval\n\n  var cc1 = cc - 1.0;\n  for (var wi = 1; wi <= wincr; wi++) {\n    var elsum = 0.0;\n    var a = 0.5 * (bub + blb);\n\n    // legendre quadrature with order = nleg\n\n    var b = 0.5 * (bub - blb);\n\n    for (var jj = 1; jj <= nleg; jj++) {\n      var j, xx;\n      if (ihalf < jj) {\n        j = (nleg - jj) + 1;\n        xx = xleg[j-1];\n      } else {\n        j = jj;\n        xx = -xleg[j-1];\n      }\n      var c = b * xx;\n      var ac = a + c;\n\n      // if exp(-qexpo/2) < 9e-14,\n      // then doesn't contribute to integral\n\n      var qexpo = ac * ac;\n      if (qexpo > C3)\n        break;\n\n      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n      // if rinsum ^ (cc-1) < 9e-14,\n      // then doesn't contribute to integral\n\n      var rinsum = (pplus * 0.5) - (pminus * 0.5);\n      if (rinsum >= Math.exp(C1 / cc1)) {\n        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  // if pr_w ^ rr < 9e-14, then return 0\n  pr_w += einsum;\n  if (pr_w <= Math.exp(C1 / rr))\n    return 0;\n\n  pr_w = Math.pow(pr_w, rr);\n  if (pr_w >= 1) // 1 was iMax was eps\n    return 1;\n  return pr_w;\n}\n\nfunction tukeyQinv(p, c, v) {\n  var p0 = 0.322232421088;\n  var q0 = 0.993484626060e-01;\n  var p1 = -1.0;\n  var q1 = 0.588581570495;\n  var p2 = -0.342242088547;\n  var q2 = 0.531103462366;\n  var p3 = -0.204231210125;\n  var q3 = 0.103537752850;\n  var p4 = -0.453642210148e-04;\n  var q4 = 0.38560700634e-02;\n  var c1 = 0.8832;\n  var c2 = 0.2368;\n  var c3 = 1.214;\n  var c4 = 1.208;\n  var c5 = 1.4142;\n  var vmax = 120.0;\n\n  var ps = 0.5 - 0.5 * p;\n  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)\n     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  var q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * Math.log(c - 1.0) + c5);\n}\n\njStat.extend(jStat.tukey, {\n  cdf: function cdf(q, nmeans, df) {\n    // Identical implementation as the R ptukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var nlegq = 16;\n    var ihalfq = 8;\n\n    var eps1 = -30.0;\n    var eps2 = 1.0e-14;\n    var dhaf  = 100.0;\n    var dquar = 800.0;\n    var deigh = 5000.0;\n    var dlarg = 25000.0;\n    var ulen1 = 1.0;\n    var ulen2 = 0.5;\n    var ulen3 = 0.25;\n    var ulen4 = 0.125;\n    var xlegq = [\n      0.989400934991649932596154173450,\n      0.944575023073232576077988415535,\n      0.865631202387831743880467897712,\n      0.755404408355003033895101194847,\n      0.617876244402643748446671764049,\n      0.458016777657227386342419442984,\n      0.281603550779258913230460501460,\n      0.950125098376374401853193354250e-1\n    ];\n    var alegq = [\n      0.271524594117540948517805724560e-1,\n      0.622535239386478928628438369944e-1,\n      0.951585116824927848099251076022e-1,\n      0.124628971255533872052476282192,\n      0.149595988816576732081501730547,\n      0.169156519395002538189312079030,\n      0.182603415044923588866763667969,\n      0.189450610455068496285396723208\n    ];\n\n    if (q <= 0)\n      return 0;\n\n    // df must be > 1\n    // there must be at least two values\n\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (!Number.isFinite(q))\n      return 1;\n\n    if (df > dlarg)\n      return tukeyWprob(q, rr, cc);\n\n    // calculate leading constant\n\n    var f2 = df * 0.5;\n    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);\n    var f21 = f2 - 1.0;\n\n    // integral is divided into unit, half-unit, quarter-unit, or\n    // eighth-unit length intervals depending on the value of the\n    // degrees of freedom.\n\n    var ff4 = df * 0.25;\n    var ulen;\n    if      (df <= dhaf)  ulen = ulen1;\n    else if (df <= dquar) ulen = ulen2;\n    else if (df <= deigh) ulen = ulen3;\n    else                  ulen = ulen4;\n\n    f2lf += Math.log(ulen);\n\n    // integrate over each subinterval\n\n    var ans = 0.0;\n\n    for (var i = 1; i <= 50; i++) {\n      var otsum = 0.0;\n\n      // legendre quadrature with order = nlegq\n      // nodes (stored in xlegq) are symmetric around zero.\n\n      var twa1 = (2 * i - 1) * ulen;\n\n      for (var jj = 1; jj <= nlegq; jj++) {\n        var j, t1;\n        if (ihalfq < jj) {\n          j = jj - ihalfq - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))\n              - (((xlegq[j] * ulen) + twa1) * ff4);\n        } else {\n          j = jj - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))\n              + (((xlegq[j] * ulen) - twa1) * ff4);\n        }\n\n        // if exp(t1) < 9e-14, then doesn't contribute to integral\n        var qsqz;\n        if (t1 >= eps1) {\n          if (ihalfq < jj) {\n            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);\n          } else {\n            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);\n          }\n\n          // call wprob to find integral of range portion\n\n          var wprb = tukeyWprob(qsqz, rr, cc);\n          var rotsum = (wprb * alegq[j]) * Math.exp(t1);\n          otsum += rotsum;\n        }\n        // end legendre integral for interval i\n        // L200:\n      }\n\n      // if integral for interval i < 1e-14, then stop.\n      // However, in order to avoid small area under left tail,\n      // at least  1 / ulen  intervals are calculated.\n      if (i * ulen >= 1.0 && otsum <= eps2)\n        break;\n\n      // end of interval i\n      // L330:\n\n      ans += otsum;\n    }\n\n    if (otsum > eps2) { // not converged\n      throw new Error('tukey.cdf failed to converge');\n    }\n    if (ans > 1)\n      ans = 1;\n    return ans;\n  },\n\n  inv: function(p, nmeans, df) {\n    // Identical implementation as the R qtukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var eps = 0.0001;\n    var maxiter = 50;\n\n    // df must be > 1 ; there must be at least two values\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (p < 0 || p > 1) return NaN;\n    if (p === 0) return 0;\n    if (p === 1) return Infinity;\n\n    // Initial value\n\n    var x0 = tukeyQinv(p, cc, df);\n\n    // Find prob(value < x0)\n\n    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n    // Find the second iterate and prob(value < x1).\n    // If the first iterate has probability value\n    // exceeding p then second iterate is 1 less than\n    // first iterate; otherwise it is 1 greater.\n\n    var x1;\n    if (valx0 > 0.0)\n      x1 = Math.max(0.0, x0 - 1.0);\n    else\n      x1 = x0 + 1.0;\n    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n    // Find new iterate\n\n    var ans;\n    for(var iter = 1; iter < maxiter; iter++) {\n      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));\n      valx0 = valx1;\n\n      // New iterate must be >= 0\n\n      x0 = x1;\n      if (ans < 0.0) {\n        ans = 0.0;\n        valx1 = -p;\n      }\n      // Find prob(value < new iterate)\n\n      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n      x1 = ans;\n\n      // If the difference between two successive\n      // iterates is less than eps, stop\n\n      var xabs = Math.abs(x1 - x0);\n      if (xabs < eps)\n        return ans;\n    }\n\n    throw new Error('tukey.inv failed to converge');\n  }\n});\n\n}(jStat, Math));\n/* Provides functions for the solution of linear system of equations, integration, extrapolation,\n * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n(function(jStat, Math) {\n\nvar push = Array.prototype.push;\nvar isArray = jStat.utils.isArray;\n\nfunction isUsable(arg) {\n  return isArray(arg) || arg instanceof jStat;\n}\n\njStat.extend({\n\n  // add a vector/matrix to a vector/matrix or scalar\n  add: function add(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value + arg[row][col];\n      });\n    }\n    return jStat.map(arr, function(value) { return value + arg; });\n  },\n\n  // subtract a vector or scalar from the vector\n  subtract: function subtract(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value - arg[row][col] || 0;\n      });\n    }\n    return jStat.map(arr, function(value) { return value - arg; });\n  },\n\n  // matrix division\n  divide: function divide(arr, arg) {\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.multiply(arr, jStat.inv(arg));\n    }\n    return jStat.map(arr, function(value) { return value / arg; });\n  },\n\n  // matrix multiplication\n  multiply: function multiply(arr, arg) {\n    var row, col, nrescols, sum, nrow, ncol, res, rescols;\n    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n    if (arr.length === undefined && arg.length === undefined) {\n      return arr * arg;\n    }\n    nrow = arr.length,\n    ncol = arr[0].length,\n    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),\n    rescols = 0;\n    if (isUsable(arg)) {\n      for (; rescols < nrescols; rescols++) {\n        for (row = 0; row < nrow; row++) {\n          sum = 0;\n          for (col = 0; col < ncol; col++)\n          sum += arr[row][col] * arg[col][rescols];\n          res[row][rescols] = sum;\n        }\n      }\n      return (nrow === 1 && rescols === 1) ? res[0][0] : res;\n    }\n    return jStat.map(arr, function(value) { return value * arg; });\n  },\n\n  // outer([1,2,3],[4,5,6])\n  // ===\n  // [[1],[2],[3]] times [[4,5,6]]\n  // ->\n  // [[4,5,6],[8,10,12],[12,15,18]]\n  outer:function outer(A, B) {\n    return jStat.multiply(A.map(function(t){ return [t] }), [B]);\n  },\n\n\n  // Returns the dot product of two matricies\n  dot: function dot(arr, arg) {\n    if (!isUsable(arr[0])) arr = [ arr ];\n    if (!isUsable(arg[0])) arg = [ arg ];\n    // convert column to row vector\n    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,\n    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,\n    res = [],\n    row = 0,\n    nrow = left.length,\n    ncol = left[0].length,\n    sum, col;\n    for (; row < nrow; row++) {\n      res[row] = [];\n      sum = 0;\n      for (col = 0; col < ncol; col++)\n      sum += left[row][col] * right[row][col];\n      res[row] = sum;\n    }\n    return (res.length === 1) ? res[0] : res;\n  },\n\n  // raise every element by a scalar\n  pow: function pow(arr, arg) {\n    return jStat.map(arr, function(value) { return Math.pow(value, arg); });\n  },\n\n  // exponentiate every element\n  exp: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.exp(value); });\n  },\n\n  // generate the natural log of every element\n  log: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.log(value); });\n  },\n\n  // generate the absolute values of the vector\n  abs: function abs(arr) {\n    return jStat.map(arr, function(value) { return Math.abs(value); });\n  },\n\n  // computes the p-norm of the vector\n  // In the case that a matrix is passed, uses the first row as the vector\n  norm: function norm(arr, p) {\n    var nnorm = 0,\n    i = 0;\n    // check the p-value of the norm, and set for most common case\n    if (isNaN(p)) p = 2;\n    // check if multi-dimensional array, and make vector correction\n    if (isUsable(arr[0])) arr = arr[0];\n    // vector norm\n    for (; i < arr.length; i++) {\n      nnorm += Math.pow(Math.abs(arr[i]), p);\n    }\n    return Math.pow(nnorm, 1 / p);\n  },\n\n  // computes the angle between two vectors in rads\n  // In case a matrix is passed, this uses the first row as the vector\n  angle: function angle(arr, arg) {\n    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n  },\n\n  // augment one matrix by another\n  // Note: this function returns a matrix, not a jStat object\n  aug: function aug(a, b) {\n    var newarr = [];\n    var i;\n    for (i = 0; i < a.length; i++) {\n      newarr.push(a[i].slice());\n    }\n    for (i = 0; i < newarr.length; i++) {\n      push.apply(newarr[i], b[i]);\n    }\n    return newarr;\n  },\n\n  // The inv() function calculates the inverse of a matrix\n  // Create the inverse by augmenting the matrix by the identity matrix of the\n  // appropriate size, and then use G-J elimination on the augmented matrix.\n  inv: function inv(a) {\n    var rows = a.length;\n    var cols = a[0].length;\n    var b = jStat.identity(rows, cols);\n    var c = jStat.gauss_jordan(a, b);\n    var result = [];\n    var i = 0;\n    var j;\n\n    //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n    for (; i < rows; i++) {\n      result[i] = [];\n      for (j = cols; j < c[0].length; j++)\n        result[i][j - cols] = c[i][j];\n    }\n    return result;\n  },\n\n  // calculate the determinant of a matrix\n  det: function det(a) {\n    var alen = a.length,\n    alend = alen * 2,\n    vals = new Array(alend),\n    rowshift = alen - 1,\n    colshift = alend - 1,\n    mrow = rowshift - alen + 1,\n    mcol = colshift,\n    i = 0,\n    result = 0,\n    j;\n    // check for special 2x2 case\n    if (alen === 2) {\n      return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n    }\n    for (; i < alend; i++) {\n      vals[i] = 1;\n    }\n    for (i = 0; i < alen; i++) {\n      for (j = 0; j < alen; j++) {\n        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];\n        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];\n        mrow++;\n        mcol--;\n      }\n      mrow = --rowshift - alen + 1;\n      mcol = --colshift;\n    }\n    for (i = 0; i < alen; i++) {\n      result += vals[i];\n    }\n    for (; i < alend; i++) {\n      result -= vals[i];\n    }\n    return result;\n  },\n\n  gauss_elimination: function gauss_elimination(a, b) {\n    var i = 0,\n    j = 0,\n    n = a.length,\n    m = a[0].length,\n    factor = 1,\n    sum = 0,\n    x = [],\n    maug, pivot, temp, k;\n    a = jStat.aug(a, b);\n    maug = a[0].length;\n    for(i = 0; i < n; i++) {\n      pivot = a[i][i];\n      j = i;\n      for (k = i + 1; k < m; k++) {\n        if (pivot < Math.abs(a[k][i])) {\n          pivot = a[k][i];\n          j = k;\n        }\n      }\n      if (j != i) {\n        for(k = 0; k < maug; k++) {\n          temp = a[i][k];\n          a[i][k] = a[j][k];\n          a[j][k] = temp;\n        }\n      }\n      for (j = i + 1; j < n; j++) {\n        factor = a[j][i] / a[i][i];\n        for(k = i; k < maug; k++) {\n          a[j][k] = a[j][k] - factor * a[i][k];\n        }\n      }\n    }\n    for (i = n - 1; i >= 0; i--) {\n      sum = 0;\n      for (j = i + 1; j<= n - 1; j++) {\n        sum = sum + x[j] * a[i][j];\n      }\n      x[i] =(a[i][maug - 1] - sum) / a[i][i];\n    }\n    return x;\n  },\n\n  gauss_jordan: function gauss_jordan(a, b) {\n    var m = jStat.aug(a, b);\n    var h = m.length;\n    var w = m[0].length;\n    var c = 0;\n    var x, y, y2;\n    // find max pivot\n    for (y = 0; y < h; y++) {\n      var maxrow = y;\n      for (y2 = y+1; y2 < h; y2++) {\n        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n          maxrow = y2;\n      }\n      var tmp = m[y];\n      m[y] = m[maxrow];\n      m[maxrow] = tmp\n      for (y2 = y+1; y2 < h; y2++) {\n        c = m[y2][y] / m[y][y];\n        for (x = y; x < w; x++) {\n          m[y2][x] -= m[y][x] * c;\n        }\n      }\n    }\n    // backsubstitute\n    for (y = h-1; y >= 0; y--) {\n      c = m[y][y];\n      for (y2 = 0; y2 < y; y2++) {\n        for (x = w-1; x > y-1; x--) {\n          m[y2][x] -= m[y][x] * m[y2][y] / c;\n        }\n      }\n      m[y][y] /= c;\n      for (x = h; x < w; x++) {\n        m[y][x] /= c;\n      }\n    }\n    return m;\n  },\n\n  // solve equation\n  // Ax=b\n  // A is upper triangular matrix\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[1,2,3]\n  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n  // if you use matrix style\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[[1],[2],[3]]\n  // will return [[2.666],[0.1666],[1.666]]\n  triaUpSolve: function triaUpSolve(A, b) {\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n    var matrix_mode = false;\n\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size - 1, -1, -1).forEach(function(i) {\n      parts = jStat.arange(i + 1, size).map(function(j) {\n        return x[j] * A[i][j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    });\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n  triaLowSolve: function triaLowSolve(A, b) {\n    // like to triaUpSolve but A is lower triangular matrix\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n\n    var matrix_mode=false;\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(j) {\n        return A[i][j] * x[j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    })\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n\n  // A -> [L,U]\n  // A=LU\n  // L is lower triangular matrix\n  // U is upper triangular matrix\n  lu: function lu(A) {\n    var size = A.length;\n    //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n    var L = jStat.identity(size);\n    var R = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(t) {\n      R[0][t] = A[0][t];\n    });\n    jStat.arange(1, size).forEach(function(l) {\n      jStat.arange(l).forEach(function(i) {\n        parts = jStat.arange(i).map(function(jj) {\n          return L[l][jj] * R[jj][i];\n        });\n        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n      });\n      jStat.arange(l, size).forEach(function(j) {\n        parts = jStat.arange(l).map(function(jj) {\n          return L[l][jj] * R[jj][j];\n        });\n        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n      });\n    });\n    return [L, R];\n  },\n\n  // A -> T\n  // A=TT'\n  // T is lower triangular matrix\n  cholesky: function cholesky(A) {\n    var size = A.length;\n    var T = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(t) {\n        return Math.pow(T[i][t],2);\n      });\n      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n      jStat.arange(i + 1, size).forEach(function(j) {\n        parts = jStat.arange(i).map(function(t) {\n          return T[i][t] * T[j][t];\n        });\n        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n      });\n    });\n    return T;\n  },\n\n\n  gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n    var i = 0;\n    var j = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n    c = jStat.multiply(jStat.inv(d), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  gauss_seidel: function gauss_seidel(a, b, x, r) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i = i + 1;\n    }\n    return xk;\n  },\n\n  SOR: function SOR(a, b, x, r, w) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),\n                       jStat.subtract(jStat.multiply(d, 1 - w),\n                                      jStat.multiply(u, w)));\n    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,\n        jStat.multiply(l, w))), b), w);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  householder: function householder(a) {\n    var m = a.length;\n    var n = a[0].length;\n    var i = 0;\n    var w = [];\n    var p = [];\n    var alpha, r, k, j, factor;\n    for (; i < m - 1; i++) {\n      alpha = 0;\n      for (j = i + 1; j < n; j++)\n      alpha += (a[j][i] * a[j][i]);\n      factor = (a[i + 1][i] > 0) ? -1 : 1;\n      alpha = factor * Math.sqrt(alpha);\n      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));\n      w = jStat.zeros(m, 1);\n      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n      p = jStat.subtract(jStat.identity(m, n),\n          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n      a = jStat.multiply(p, jStat.multiply(a, p));\n    }\n    return a;\n  },\n\n  // A -> [Q,R]\n  // Q is orthogonal matrix\n  // R is upper triangular\n  QR: (function() {\n    // x -> Q\n    // find a orthogonal matrix Q st.\n    // Qx=y\n    // y is [||x||,0,0,...]\n\n    // quick ref\n    var sum   = jStat.sum;\n    var range = jStat.arange;\n\n    function qr2(x) {\n      // quick impletation\n      // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n      var n = x.length;\n      var p = x[0].length;\n\n      var r = jStat.zeros(p, p);\n      x = jStat.copy(x);\n\n      var i,j,k;\n      for(j = 0; j < p; j++){\n        r[j][j] = Math.sqrt(sum(range(n).map(function(i){\n          return x[i][j] * x[i][j];\n        })));\n        for(i = 0; i < n; i++){\n          x[i][j] = x[i][j] / r[j][j];\n        }\n        for(k = j+1; k < p; k++){\n          r[j][k] = sum(range(n).map(function(i){\n            return x[i][j] * x[i][k];\n          }));\n          for(i = 0; i < n; i++){\n            x[i][k] = x[i][k] - x[i][j]*r[j][k];\n          }\n        }\n      }\n      return [x, r];\n    }\n\n    return qr2;\n  }()),\n\n  lstsq: (function() {\n    // solve least squard problem for Ax=b as QR decomposition way if b is\n    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n    function R_I(A) {\n      A = jStat.copy(A);\n      var size = A.length;\n      var I = jStat.identity(size);\n      jStat.arange(size - 1, -1, -1).forEach(function(i) {\n        jStat.sliceAssign(\n            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n        jStat.sliceAssign(\n            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n        jStat.arange(i).forEach(function(j) {\n          var c = jStat.multiply(A[j][i], -1);\n          var Aj = jStat.slice(A, { row: j });\n          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n          var Ij = jStat.slice(I, { row: j });\n          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n        })\n      });\n      return I;\n    }\n\n    function qr_solve(A, b){\n      var array_mode = false;\n      if (b[0].length === undefined) {\n        // [c1,c2,c3] mode\n        b = b.map(function(x){ return [x] });\n        array_mode = true;\n      }\n      var QR = jStat.QR(A);\n      var Q = QR[0];\n      var R = QR[1];\n      var attrs = A[0].length;\n      var Q1 = jStat.slice(Q,{col:{end:attrs}});\n      var R1 = jStat.slice(R,{row:{end:attrs}});\n      var RI = R_I(R1);\n      var Q2 = jStat.transpose(Q1);\n\n      if(Q2[0].length === undefined){\n        Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n      var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n      if(x.length === undefined){\n        x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n\n      if (array_mode)\n        return x.map(function(i){ return i[0] });\n      return x;\n    }\n\n    return qr_solve;\n  }()),\n\n  jacobi: function jacobi(a) {\n    var condition = 1;\n    var n = a.length;\n    var e = jStat.identity(n, n);\n    var ev = [];\n    var b, i, j, p, q, maxim, theta, s;\n    // condition === 1 only if tolerance is not reached\n    while (condition === 1) {\n      maxim = a[0][1];\n      p = 0;\n      q = 1;\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i != j) {\n            if (maxim < Math.abs(a[i][j])) {\n              maxim = Math.abs(a[i][j]);\n              p = i;\n              q = j;\n            }\n          }\n        }\n      }\n      if (a[p][p] === a[q][q])\n        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;\n      else\n        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n      s = jStat.identity(n, n);\n      s[p][p] = Math.cos(theta);\n      s[p][q] = -Math.sin(theta);\n      s[q][p] = Math.sin(theta);\n      s[q][q] = Math.cos(theta);\n      // eigen vector matrix\n      e = jStat.multiply(e, s);\n      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n      a = b;\n      condition = 0;\n      for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n          if (i != j && Math.abs(a[i][j]) > 0.001) {\n            condition = 1;\n          }\n        }\n      }\n    }\n    for (i = 0; i < n; i++) ev.push(a[i][i]);\n    //returns both the eigenvalue and eigenmatrix\n    return [e, ev];\n  },\n\n  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n    var k1, k2, u_j1, k3, k4;\n    if (order === 2) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h, u_j + k1);\n        u_j1 = u_j + (k1 + k2) / 2;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    if (order === 4) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n        k4 = h * f(t_j +h, u_j + k3);\n        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    return u_j;\n  },\n\n  romberg: function romberg(f, a, b, order) {\n    var i = 0;\n    var h = (b - a) / 2;\n    var x = [];\n    var h1 = [];\n    var g = [];\n    var m, a1, j, k, I;\n    while (i < order / 2) {\n      I = f(a);\n      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n      m = x.length;\n      for (j = 1; j < m - 1; j++) {\n        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);\n      }\n      I = (h / 3) * (I + f(b));\n      g[i] = I;\n      h /= 2;\n      i++;\n    }\n    a1 = g.length;\n    m = 1;\n    while (a1 !== 1) {\n      for (j = 0; j < a1 - 1; j++)\n      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a1 = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  richardson: function richardson(X, f, x, h) {\n    function pos(X, x) {\n      var i = 0;\n      var n = X.length;\n      var p;\n      for (; i < n; i++)\n        if (X[i] === x) p = i;\n      return p;\n    }\n    var h_min = Math.abs(x - X[pos(X, x) + 1]);\n    var i = 0;\n    var g = [];\n    var h1 = [];\n    var y1, y2, m, a, j;\n    while (h >= h_min) {\n      y1 = pos(X, x + h);\n      y2 = pos(X, x);\n      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n      h /= 2;\n      i++;\n    }\n    a = g.length;\n    m = 1;\n    while (a != 1) {\n      for (j = 0; j < a - 1; j++)\n        h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  simpson: function simpson(f, a, b, n) {\n    var h = (b - a) / n;\n    var I = f(a);\n    var x = [];\n    var j = a;\n    var k = 0;\n    var i = 1;\n    var m;\n    for (; j <= b; j = j + h, k++)\n      x[k] = j;\n    m = x.length;\n    for (; i < m - 1; i++) {\n      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);\n    }\n    return (h / 3) * (I + f(b));\n  },\n\n  hermite: function hermite(X, F, dF, value) {\n    var n = X.length;\n    var p = 0;\n    var i = 0;\n    var l = [];\n    var dl = [];\n    var A = [];\n    var B = [];\n    var j;\n    for (; i < n; i++) {\n      l[i] = 1;\n      for (j = 0; j < n; j++) {\n        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n      }\n      dl[i] = 0;\n      for (j = 0; j < n; j++) {\n        if (i != j) dl[i] += 1 / (X [i] - X[j]);\n      }\n      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n      B[i] = (value - X[i]) * (l[i] * l[i]);\n      p += (A[i] * F[i] + B[i] * dF[i]);\n    }\n    return p;\n  },\n\n  lagrange: function lagrange(X, F, value) {\n    var p = 0;\n    var i = 0;\n    var j, l;\n    var n = X.length;\n    for (; i < n; i++) {\n      l = F[i];\n      for (j = 0; j < n; j++) {\n        // calculating the lagrange polynomial L_i\n        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n      }\n      // adding the lagrange polynomials found above\n      p += l;\n    }\n    return p;\n  },\n\n  cubic_spline: function cubic_spline(X, F, value) {\n    var n = X.length;\n    var i = 0, j;\n    var A = [];\n    var B = [];\n    var alpha = [];\n    var c = [];\n    var h = [];\n    var b = [];\n    var d = [];\n    for (; i < n - 1; i++)\n      h[i] = X[i + 1] - X[i];\n    alpha[0] = 0;\n    for (i = 1; i < n - 1; i++) {\n      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -\n          (3 / h[i-1]) * (F[i] - F[i-1]);\n    }\n    for (i = 1; i < n - 1; i++) {\n      A[i] = [];\n      B[i] = [];\n      A[i][i-1] = h[i-1];\n      A[i][i] = 2 * (h[i - 1] + h[i]);\n      A[i][i+1] = h[i];\n      B[i][0] = alpha[i];\n    }\n    c = jStat.multiply(jStat.inv(A), B);\n    for (j = 0; j < n - 1; j++) {\n      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n    }\n    for (j = 0; j < n; j++) {\n      if (X[j] > value) break;\n    }\n    j -= 1;\n    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *\n        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n  },\n\n  gauss_quadrature: function gauss_quadrature() {\n    throw new Error('gauss_quadrature not yet implemented');\n  },\n\n  PCA: function PCA(X) {\n    var m = X.length;\n    var n = X[0].length;\n    var i = 0;\n    var j, temp1;\n    var u = [];\n    var D = [];\n    var result = [];\n    var temp2 = [];\n    var Y = [];\n    var Bt = [];\n    var B = [];\n    var C = [];\n    var V = [];\n    var Vt = [];\n    for (i = 0; i < m; i++) {\n      u[i] = jStat.sum(X[i]) / n;\n    }\n    for (i = 0; i < n; i++) {\n      B[i] = [];\n      for(j = 0; j < m; j++) {\n        B[i][j] = X[j][i] - u[j];\n      }\n    }\n    B = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      C[i] = [];\n      for (j = 0; j < m; j++) {\n        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);\n      }\n    }\n    result = jStat.jacobi(C);\n    V = result[0];\n    D = result[1];\n    Vt = jStat.transpose(V);\n    for (i = 0; i < D.length; i++) {\n      for (j = i; j < D.length; j++) {\n        if(D[i] < D[j])  {\n          temp1 = D[i];\n          D[i] = D[j];\n          D[j] = temp1;\n          temp2 = Vt[i];\n          Vt[i] = Vt[j];\n          Vt[j] = temp2;\n        }\n      }\n    }\n    Bt = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      Y[i] = [];\n      for (j = 0; j < Bt.length; j++) {\n        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n      }\n    }\n    return [X, D, Vt, Y];\n  }\n});\n\n// extend jStat.fn with methods that require one argument\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function(arg, func) {\n      var tmpthis = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n        }, 15);\n        return this;\n      }\n      if (typeof jStat[passfunc](this, arg) === 'number')\n        return jStat[passfunc](this, arg);\n      else\n        return jStat(jStat[passfunc](this, arg));\n    };\n  }(funcs[i]));\n}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\nvar slice = [].slice;\nvar isNumber = jStat.utils.isNumber;\nvar isArray = jStat.utils.isArray;\n\n// flag==true denotes use of sample standard deviation\n// Z Statistics\njStat.extend({\n  // 2 different parameter lists:\n  // (value, mean, sd)\n  // (value, array, flag)\n  zscore: function zscore() {\n    var args = slice.call(arguments);\n    if (isNumber(args[1])) {\n      return (args[0] - args[1]) / args[2];\n    }\n    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, sides)\n  // (zscore, sides)\n  // (value, array, sides, flag)\n  ztest: function ztest() {\n    var args = slice.call(arguments);\n    var z;\n    if (isArray(args[1])) {\n      // (value, array, sides, flag)\n      z = jStat.zscore(args[0],args[1],args[3]);\n      return (args[2] === 1) ?\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);\n    } else {\n      if (args.length > 2) {\n        // (value, mean, sd, sides)\n        z = jStat.zscore(args[0],args[1],args[2]);\n        return (args[3] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);\n      } else {\n        // (zscore, sides)\n        z = args[0];\n        return (args[1] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)*2);\n      }\n    }\n  }\n});\n\njStat.extend(jStat.fn, {\n  zscore: function zscore(value, flag) {\n    return (value - this.mean()) / this.stdev(flag);\n  },\n\n  ztest: function ztest(value, sides, flag) {\n    var zscore = Math.abs(this.zscore(value, flag));\n    return (sides === 1) ?\n      (jStat.normal.cdf(-zscore, 0, 1)) :\n      (jStat.normal.cdf(-zscore, 0, 1) * 2);\n  }\n});\n\n// T Statistics\njStat.extend({\n  // 2 parameter lists\n  // (value, mean, sd, n)\n  // (value, array)\n  tscore: function tscore() {\n    var args = slice.call(arguments);\n    return (args.length === 4) ?\n      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :\n      ((args[0] - jStat.mean(args[1])) /\n       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, n, sides)\n  // (tscore, n, sides)\n  // (value, array, sides)\n  ttest: function ttest() {\n    var args = slice.call(arguments);\n    var tscore;\n    if (args.length === 5) {\n      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n      return (args[4] === 1) ?\n        (jStat.studentt.cdf(-tscore, args[3]-1)) :\n        (jStat.studentt.cdf(-tscore, args[3]-1)*2);\n    }\n    if (isNumber(args[1])) {\n      tscore = Math.abs(args[0])\n      return (args[2] == 1) ?\n        (jStat.studentt.cdf(-tscore, args[1]-1)) :\n        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);\n    }\n    tscore = Math.abs(jStat.tscore(args[0], args[1]))\n    return (args[2] == 1) ?\n      (jStat.studentt.cdf(-tscore, args[1].length-1)) :\n      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  tscore: function tscore(value) {\n    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n  },\n\n  ttest: function ttest(value, sides) {\n    return (sides === 1) ?\n      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :\n      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);\n  }\n});\n\n// F Statistics\njStat.extend({\n  // Paramter list is as follows:\n  // (array1, array2, array3, ...)\n  // or it is an array of arrays\n  // array of arrays conversion\n  anovafscore: function anovafscore() {\n    var args = slice.call(arguments),\n    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n    if (args.length === 1) {\n      tmpargs = new Array(args[0].length);\n      for (i = 0; i < args[0].length; i++) {\n        tmpargs[i] = args[0][i];\n      }\n      args = tmpargs;\n    }\n    // Builds sample array\n    sample = new Array();\n    for (i = 0; i < args.length; i++) {\n      sample = sample.concat(args[i]);\n    }\n    sampMean = jStat.mean(sample);\n    // Computes the explained variance\n    expVar = 0;\n    for (i = 0; i < args.length; i++) {\n      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n    }\n    expVar /= (args.length - 1);\n    // Computes unexplained variance\n    unexpVar = 0;\n    for (i = 0; i < args.length; i++) {\n      sampSampMean = jStat.mean(args[i]);\n      for (j = 0; j < args[i].length; j++) {\n        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n      }\n    }\n    unexpVar /= (sample.length - args.length);\n    return expVar / unexpVar;\n  },\n\n  // 2 different paramter setups\n  // (array1, array2, array3, ...)\n  // (anovafscore, df1, df2)\n  anovaftest: function anovaftest() {\n    var args = slice.call(arguments),\n    df1, df2, n, i;\n    if (isNumber(args[0])) {\n      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n    }\n    var anovafscore = jStat.anovafscore(args);\n    df1 = args.length - 1;\n    n = 0;\n    for (i = 0; i < args.length; i++) {\n      n = n + args[i].length;\n    }\n    df2 = n - df1 - 1;\n    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n  },\n\n  ftest: function ftest(fscore, df1, df2) {\n    return 1 - jStat.centralF.cdf(fscore, df1, df2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  anovafscore: function anovafscore() {\n    return jStat.anovafscore(this.toArray());\n  },\n\n  anovaftes: function anovaftes() {\n    var n = 0;\n    var i;\n    for (i = 0; i < this.length; i++) {\n      n = n + this[i].length;\n    }\n    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n  }\n});\n\n// Tukey's range test\njStat.extend({\n  // 2 parameter lists\n  // (mean1, mean2, n1, n2, sd)\n  // (array1, array2, sd)\n  qscore: function qscore() {\n    var args = slice.call(arguments);\n    var mean1, mean2, n1, n2, sd;\n    if (isNumber(args[0])) {\n        mean1 = args[0];\n        mean2 = args[1];\n        n1 = args[2];\n        n2 = args[3];\n        sd = args[4];\n    } else {\n        mean1 = jStat.mean(args[0]);\n        mean2 = jStat.mean(args[1]);\n        n1 = args[0].length;\n        n2 = args[1].length;\n        sd = args[2];\n    }\n    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n  },\n\n  // 3 different parameter lists:\n  // (qscore, n, k)\n  // (mean1, mean2, n1, n2, sd, n, k)\n  // (array1, array2, sd, n, k)\n  qtest: function qtest() {\n    var args = slice.call(arguments);\n\n    var qscore;\n    if (args.length === 3) {\n      qscore = args[0];\n      args = args.slice(1);\n    } else if (args.length === 7) {\n      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n      args = args.slice(5);\n    } else {\n      qscore = jStat.qscore(args[0], args[1], args[2]);\n      args = args.slice(3);\n    }\n\n    var n = args[0];\n    var k = args[1];\n\n    return 1 - jStat.tukey.cdf(qscore, k, n - k);\n  },\n\n  tukeyhsd: function tukeyhsd(arrays) {\n    var sd = jStat.pooledstdev(arrays);\n    var means = arrays.map(function (arr) {return jStat.mean(arr);});\n    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);\n\n    var results = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n        }\n    }\n\n    return results;\n  }\n});\n\n// Error Bounds\njStat.extend({\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  normalci: function normalci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  tci: function tci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *\n                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  significant: function significant(pvalue, alpha) {\n    return pvalue < alpha;\n  }\n});\n\njStat.extend(jStat.fn, {\n  normalci: function normalci(value, alpha) {\n    return jStat.normalci(value, alpha, this.toArray());\n  },\n\n  tci: function tci(value, alpha) {\n    return jStat.tci(value, alpha, this.toArray());\n  }\n});\n\n// internal method for calculating the z-score for a difference of proportions test\nfunction differenceOfProportions(p1, n1, p2, n2) {\n  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n    throw new Error(\"Proportions should be greater than 0 and less than 1\")\n  }\n  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));\n  return (p1 - p2) / se;\n}\n\n// Difference of Proportions\njStat.extend(jStat.fn, {\n  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 1);\n  },\n\n  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 2);\n  }\n});\n\n}(jStat, Math));\njStat.models = (function(){\n  function sub_regress(exog) {\n    var var_count = exog[0].length;\n    var modelList = jStat.arange(var_count).map(function(endog_index) {\n      var exog_index =\n          jStat.arange(var_count).filter(function(i){return i!==endog_index});\n      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),\n                 jStat.col(exog, exog_index))\n    });\n    return modelList;\n  }\n\n  // do OLS model regress\n  // exog have include const columns ,it will not generate it .In fact, exog is\n  // \"design matrix\" look at\n  //https://en.wikipedia.org/wiki/Design_matrix\n  function ols(endog, exog) {\n    var nobs = endog.length;\n    var df_model = exog[0].length - 1;\n    var df_resid = nobs-df_model - 1;\n    var coef = jStat.lstsq(exog, endog);\n    var predict =\n        jStat.multiply(exog, coef.map(function(x) { return [x] }))\n            .map(function(p) { return p[0] });\n    var resid = jStat.subtract(endog, predict);\n    var ybar = jStat.mean(endog);\n    // constant cause problem\n    // var SST = jStat.sum(endog.map(function(y) {\n    //   return Math.pow(y-ybar,2);\n    // }));\n    var SSE = jStat.sum(predict.map(function(f) {\n      return Math.pow(f - ybar, 2);\n    }));\n    var SSR = jStat.sum(endog.map(function(y, i) {\n      return Math.pow(y - predict[i], 2);\n    }));\n    var SST = SSE + SSR;\n    var R2 = (SSE / SST);\n    return {\n        exog:exog,\n        endog:endog,\n        nobs:nobs,\n        df_model:df_model,\n        df_resid:df_resid,\n        coef:coef,\n        predict:predict,\n        resid:resid,\n        ybar:ybar,\n        SST:SST,\n        SSE:SSE,\n        SSR:SSR,\n        R2:R2\n    };\n  }\n\n  // H0: b_I=0\n  // H1: b_I!=0\n  function t_test(model) {\n    var subModelList = sub_regress(model.exog);\n    //var sigmaHat=jStat.stdev(model.resid);\n    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));\n    var seBetaHat = subModelList.map(function(mod) {\n      var SST = mod.SST;\n      var R2 = mod.R2;\n      return sigmaHat / Math.sqrt(SST * (1 - R2));\n    });\n    var tStatistic = model.coef.map(function(coef, i) {\n      return (coef - 0) / seBetaHat[i];\n    });\n    var pValue = tStatistic.map(function(t) {\n      var leftppf = jStat.studentt.cdf(t, model.df_resid);\n      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n    });\n    var c = jStat.studentt.inv(0.975, model.df_resid);\n    var interval95 = model.coef.map(function(coef, i) {\n      var d = c * seBetaHat[i];\n      return [coef - d, coef + d];\n    })\n    return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n    };\n  }\n\n  function F_test(model) {\n    var F_statistic =\n        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);\n    var fcdf = function(x, n1, n2) {\n      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)\n    }\n    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n    return { F_statistic: F_statistic, pvalue: pvalue };\n  }\n\n  function ols_wrap(endog, exog) {\n    var model = ols(endog,exog);\n    var ttest = t_test(model);\n    var ftest = F_test(model);\n    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n    // Which matches the 'adjusted R^2' provided by R's lm package\n    var adjust_R2 =\n        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));\n    model.t = ttest;\n    model.f = ftest;\n    model.adjust_R2 = adjust_R2;\n    return model;\n  }\n\n  return { ols: ols_wrap };\n})();\n//To regress, simply build X matrix\n//(append column of 1's) using\n//buildxmatrix and build the Y\n//matrix using buildymatrix\n//(simply the transpose)\n//and run regress.\n\n\n\n//Regressions\n\njStat.extend({\n  buildxmatrix: function buildxmatrix(){\n    //Parameters will be passed in as such\n    //(array1,array2,array3,...)\n    //as (x1,x2,x3,...)\n    //needs to be (1,x1,x2,x3,...)\n    var matrixRows = new Array(arguments.length);\n    for(var i=0;i<arguments.length;i++){\n      var array = [1];\n      matrixRows[i]= array.concat(arguments[i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  builddxmatrix: function builddxmatrix() {\n    //Paramters will be passed in as such\n    //([array1,array2,...]\n    var matrixRows = new Array(arguments[0].length);\n    for(var i=0;i<arguments[0].length;i++){\n      var array = [1]\n      matrixRows[i]= array.concat(arguments[0][i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  buildjxmatrix: function buildjxmatrix(jMat) {\n    //Builds from jStat Matrix\n    var pass = new Array(jMat.length)\n    for(var i=0;i<jMat.length;i++){\n      pass[i] = jMat[i];\n    }\n    return jStat.builddxmatrix(pass);\n\n  },\n\n  buildymatrix: function buildymatrix(array){\n    return jStat(array).transpose();\n  },\n\n  buildjymatrix: function buildjymatrix(jMat){\n    return jMat.transpose();\n  },\n\n  matrixmult: function matrixmult(A,B){\n    var i, j, k, result, sum;\n    if (A.cols() == B.rows()) {\n      if(B.rows()>1){\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[k][j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n      result = [];\n      for (i = 0; i < A.rows(); i++) {\n        result[i] = [];\n        for (j = 0; j < B.cols(); j++) {\n          sum = 0;\n          for (k = 0; k < A.cols(); k++) {\n            sum += A.toArray()[i][k] * B.toArray()[j];\n          }\n          result[i][j] = sum;\n        }\n      }\n      return jStat(result);\n    }\n  },\n\n  //regress and regresst to be fixed\n\n  regress: function regress(jMatX,jMatY){\n    //print(\"regressin!\");\n    //print(jMatX.toArray());\n    var innerinv = jStat.xtranspxinv(jMatX);\n    //print(innerinv);\n    var xtransp = jMatX.transpose();\n    var next = jStat.matrixmult(jStat(innerinv),xtransp);\n    return jStat.matrixmult(next,jMatY);\n\n  },\n\n  regresst: function regresst(jMatX,jMatY,sides){\n    var beta = jStat.regress(jMatX,jMatY);\n\n    var compile = {};\n    compile.anova = {};\n    var jMatYBar = jStat.jMatYBar(jMatX, beta);\n    compile.yBar = jMatYBar;\n    var yAverage = jMatY.mean();\n    compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n\n    compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n    compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n\n    compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n    compile.anova.mse =\n        compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.sst = jStat.sst(jMatY, yAverage);\n    compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n\n    compile.anova.r2 = 1 - (compile.anova.sse / compile.anova.sst);\n    if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n\n    compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n    compile.anova.pvalue =\n        jStat.anovaftest(compile.anova.fratio,\n                         jMatX[0].length - 1,\n                         jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.rmse = Math.sqrt(compile.anova.mse);\n\n    compile.anova.r2adj = 1 - (compile.anova.mse / compile.anova.mst);\n    if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n\n    compile.stats = new Array(jMatX[0].length);\n    var covar = jStat.xtranspxinv(jMatX);\n    var sds, ts, ps;\n\n    for(var i=0; i<beta.length;i++){\n      sds=Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n      ts= Math.abs(beta[i] / sds);\n      ps= jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n\n      compile.stats[i]=[beta[i], sds, ts, ps];\n    }\n\n    compile.regress = beta;\n    return compile;\n  },\n\n  xtranspx: function xtranspx(jMatX){\n    return jStat.matrixmult(jMatX.transpose(),jMatX);\n  },\n\n\n  xtranspxinv: function xtranspxinv(jMatX){\n    var inner = jStat.matrixmult(jMatX.transpose(),jMatX);\n    var innerinv = jStat.inv(inner);\n    return innerinv;\n  },\n\n  jMatYBar: function jMatYBar(jMatX, beta) {\n    var yBar = jStat.matrixmult(jMatX, beta);\n    return new jStat(yBar);\n  },\n\n  residuals: function residuals(jMatY, jMatYBar) {\n    return jStat.matrixsubtract(jMatY, jMatYBar);\n  },\n\n  ssr: function ssr(jMatYBar, yAverage) {\n    var ssr = 0;\n    for(var i = 0; i < jMatYBar.length; i++) {\n      ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n    }\n    return ssr;\n  },\n\n  sse: function sse(jMatY, jMatYBar) {\n    var sse = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n    }\n    return sse;\n  },\n\n  sst: function sst(jMatY, yAverage) {\n    var sst = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sst += Math.pow(jMatY[i] - yAverage, 2);\n    }\n    return sst;\n  },\n\n  matrixsubtract: function matrixsubtract(A,B){\n    var ans = new Array(A.length);\n    for(var i=0;i<A.length;i++){\n      ans[i] = new Array(A[i].length);\n      for(var j=0;j<A[i].length;j++){\n        ans[i][j]=A[i][j]-B[i][j];\n      }\n    }\n    return jStat(ans);\n  }\n});\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n\n  return jStat;\n});\n","\nimport jStat from 'jstat';\n\n/*\n  SDTMath Static Class - Not intended for instantiation!\n\n  Variables:\n    H = hits\n    M = misses\n    FA = false alarms\n    CR = correct rejections\n    HR = hit rate\n    zHR = Z-transformed hit rate\n    FAR = false alarm rate\n    zFAR = Z-transformed false alarm rate\n    ACC = accuracy\n    PPV = positive predictive value\n    FOMR = false omission rate (used FOMR to avoid keyword FOR!)\n    d = sensitivity (d' for equal variance, d_a for unequal variance)\n    c = response bias (c for equal variance, c_a for unequal variance)\n    s = standard deviation of signal distribution, with standard deviation of noise distribution = 1\n    muN = mean of noise distribution\n    muS = mean of signal distribution\n    l = lambda, threshold location, with l = 0 indicating no response bias\n    h = height of signal distribution\n\n  Functions:\n    Z = z-score\n    Z^-1 = inverse z-score\n\n  Equations (* = unequal variance):\n    HR = H / (H + M)\n    FAR = FA / (FA + CR)\n    ACC = (H + CR) / (H + M + FA + CR)\n    ACC = (HR + (1 - FAR)) / 2\n    PPV = H / (H + FA)\n    FOMR = M / (M + CR)\n\n    d' = Z^-1(HR) - Z^-1(FAR)\n    *d' = (2 / (s^2 + 1))^(1/2) * (s * Z^-1(HR) - Z^-1(FAR))\n\n    c = -(Z^-1(HR) + Z^-1(FAR))/2\n    *c = (2 / (s^2 + 1))^(1/2) * (s / s + 1) * -(Z^-1(HR) + Z^-1(FAR))\n\n    HR = Z(d'/2 - c)\n    *HR = Z(((s^2 + 1) / 2)^(1/2) * (d' / (s + 1) - c / s))\n\n    FAR = Z(-d'/2 - c)\n    *FAR = Z(((s^2 + 1) / 2)^(1/2) * -(d' / (s + 1) + c))\n\n    HR = Z(d' + Z^-1(FAR))\n    *HR = Z(((s^2 + 1) / 2)^(1/2) * d' + Z^-1(FAR) / s)\n\n    HR = Z(-2c - Z^-1(FAR))\n    *HR = Z(-((s^2 + 1) / 2)^(1/2) * ((s + 1) / s) * c - Z^-1(FAR))\n\n    muN = -d'/2\n    *muN = -((s^2 + 1) / 2)^(1/2) * (1 / (s + 1)) * d'\n\n    d' = -2 * muN\n    *d' = -(2 / (s^2 + 1))^(1/2) * (s + 1) * muN\n\n    muS = d'/2\n    *muS = ((s^2 + 1) / 2)^(1/2) * (s / (s + 1)) * d'\n\n    d' = 2 * muS\n    *d' = (2 / (s^2 + 1))^(1/2) * ((s + 1) / s) * muS\n\n    l = c\n    *l = ((s^2 + 1) / 2)^(1/2) * c\n\n    c = l\n    *c = (2 / (s^2 + 1))^(1/2) * l\n\n    h = 1 / (s * (2 * pi)^(1/2))\n    s = 1 / (h * (2 * pi)^(1/2))\n\n    zHR = Z(HR)\n\n    zFAR = Z(FAR)\n\n    HR = Z^-1(zHR)\n\n    FAR = Z^-1(zFAR)\n\n*/\nexport default class SDTMath {\n  static hM2Hr(h, m) {\n    if ((h === 0) && (m === 0)) {\n      return 0;\n    }\n    return h / (h + m);\n  }\n\n  static faCr2Far(fa, cr) {\n    if ((fa === 0) && (cr === 0)) {\n      return 0;\n    }\n    return fa / (fa + cr);\n  }\n\n  static hMFaCr2Acc(h, m, fa, cr) {\n    if ((h === 0) && (m === 0) && (fa === 0) && (cr === 0)) {\n      return 0;\n    }\n    return (h + cr) / (h + m + fa + cr);\n  }\n\n  static hrFar2Acc(hr, far) {\n    return (hr + (1 - far)) / 2;\n  }\n\n  static hFa2Ppv(h, fa) {\n    if ((h === 0) && (fa === 0)) {\n      return 0;\n    }\n    return h / (h + fa);\n  }\n\n  static mCr2Fomr(m, cr) {\n    if ((m === 0) && (cr === 0)) {\n      return 0;\n    }\n    return m / (m + cr);\n  }\n\n  static hrFar2D(hr, far, s = 1) {\n    if (s === 1) return (jStat.normal.inv(hr, 0, 1) - jStat.normal.inv(far, 0, 1));\n    return (\n      Math.sqrt(2 / (s * s + 1))\n      * (s * jStat.normal.inv(hr, 0, 1) - jStat.normal.inv(far, 0, 1))\n    );\n  }\n\n  static hrFar2C(hr, far, s = 1) {\n    if (s === 1) return (-(jStat.normal.inv(hr, 0, 1) + jStat.normal.inv(far, 0, 1)) / 2);\n    return (\n      Math.sqrt(2 / (s * s + 1))\n      * (s / (s + 1))\n      * -(jStat.normal.inv(hr, 0, 1) + jStat.normal.inv(far, 0, 1))\n    );\n  }\n\n  static dC2Hr(d, c, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(d / 2 - c, 0, 1));\n    return (jStat.normal.cdf(Math.sqrt((s * s + 1) / 2) * (d / (1 + s) - c / s), 0, 1));\n  }\n\n  static dC2Far(d, c, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(-(d / 2 + c), 0, 1));\n    return (jStat.normal.cdf(Math.sqrt((s * s + 1) / 2) * -(d / (1 + s) + c), 0, 1));\n  }\n\n  static dFar2Hr(d, far, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(d + jStat.normal.inv(far, 0, 1), 0, 1));\n    return (jStat.normal.cdf(\n      (Math.sqrt((s * s + 1) / 2) * d + jStat.normal.inv(far, 0, 1)) / s,\n      0,\n      1,\n    ));\n  }\n\n  static cFar2Hr(c, far, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(-(2 * c) - jStat.normal.inv(far, 0, 1), 0, 1));\n    return (jStat.normal.cdf(\n      -Math.sqrt((s * s + 1) / 2) * ((s + 1) / s) * c - jStat.normal.inv(far, 0, 1),\n      0,\n      1,\n    ));\n  }\n\n  static d2MuN(d, s = 1) {\n    if (s === 1) return -d / 2;\n    return -Math.sqrt((s * s + 1) / 2) * (1 / (s + 1)) * d;\n  }\n\n  static muN2D(muN, s = 1) {\n    if (s === 1) return -2 * muN;\n    return -Math.sqrt(2 / (s * s + 1)) * (s + 1) * muN;\n  }\n\n  static d2MuS(d, s = 1) {\n    if (s === 1) return d / 2;\n    return Math.sqrt((s * s + 1) / 2) * (s / (s + 1)) * d;\n  }\n\n  static muS2D(muS, s = 1) {\n    if (s === 1) return 2 * muS;\n    return Math.sqrt(2 / (s * s + 1)) * ((s + 1) / s) * muS;\n  }\n\n  static c2L(c, s = 1) {\n    if (s === 1) return c;\n    return Math.sqrt((s * s + 1) / 2) * c;\n  }\n\n  static l2C(l, s = 1) {\n    if (s === 1) return l;\n    return Math.sqrt(2 / (s * s + 1)) * l;\n  }\n\n  static s2H(s = 1) {\n    return 1 / (s * Math.sqrt(2 * Math.PI));\n  }\n\n  static h2S(h) {\n    return 1 / (h * Math.sqrt(2 * Math.PI));\n  }\n\n  static hr2Zhr(hr) {\n    return jStat.normal.inv(hr, 0, 1);\n  }\n\n  static far2Zfar(far) {\n    return jStat.normal.inv(far, 0, 1);\n  }\n\n  static zhr2Hr(zhr) {\n    return jStat.normal.cdf(zhr, 0, 1);\n  }\n\n  static zfar2Far(zfar) {\n    return jStat.normal.cdf(zfar, 0, 1);\n  }\n}\n"],"names":["jStat","module","exports","Math","undefined","concat","Array","prototype","slice","toString","Object","calcRdx","n","m","val","pow","log","LOG10E","isArray","arg","call","isFunction","isNumber","num","toVector","arr","apply","_init","arguments","retZero","retOne","retIdent","i","j","fn","args","map","length","this","seq","toArray","constructor","utils","_random_fn","random","setRandom","TypeError","extend","obj","rows","cols","dimensions","row","index","rowa","col","submat","arange","forEach","ind","column","cola","a","diag","nrow","res","antidiag","transpose","objArr","push","func","toAlter","ncol","cumreduce","alter","create","zeros","ones","rand","identity","symmetric","size","clear","min","max","cnt","hival","step","current","start","end","rl","_slice","list","copy","rcSlice","colSlice","rowSlice","sliceAssign","A","B","nl","ml","diagonal","diagArray","mat","t","jProto","sort","splice","funcs","passfunc","self","results","setTimeout","split","ascNum","b","clip","sum","sumsqrd","sumsqerr","tmp","mean","sumrow","product","prod","low","high","unique","hash","_arr","meansqerr","geomean","median","arrlen","cumsum","cumprod","diff","diffs","arrLen","rank","distinctNumbers","numberCounts","number","sortedDistinctNumbers","numberRanks","currentRank","count","mode","maxCount","numMaxCount","mode_arr","range","variance","flag","pooledvariance","reduce","samples","deviation","dev","stdev","sqrt","pooledstdev","meandev","abs","meddev","coeffvar","quartiles","round","quantiles","quantilesArray","alphap","betap","sortedArray","p","aleph","k","gamma","quantileVals","floor","percentile","exclusive","realIndex","parseInt","frac","percentileOfScore","score","kind","counter","value","len","strict","histogram","binCnt","first","binWidth","bins","covariance","arr1","arr2","u","v","arr1Len","sq_dev","corrcoeff","spearmancoeff","stanMoment","mu","sigma","skewSum","skewness","kurtosis","fullbool","tmpthis","callbackFunction","argsToPass","curriedFunction","vector","gammaln","x","xx","y","cof","ser","loggam","x0","x2","xp","gl","gl0","PI","gammafn","z","yi","q","fact","xden","xnum","Infinity","sin","gammap","lowRegGamma","an","aln","ap","del","c","d","h","ITMAX","NaN","exp","factorialln","factorial","combination","combinationln","permutation","betafn","betaln","betacf","fpmin","m2","aa","qab","qap","qam","gammapinv","pp","lna1","afac","a1","EPS","gln","erf","ty","isneg","dd","erfc","erfcinv","err","ibetainv","lna","lnb","al","w","b1","ibeta","bt","randn","randg","shape","oalph","a2","betinc","eps","a0","c9","b0","m9","laplaceSign","tukeyWprob","rr","cc","nleg","ihalf","C1","C2","C3","bb","wlar","wincr1","wincr2","xleg","aleg","qsqz","pr_w","wincr","normal","cdf","blb","binc","bub","einsum","cc1","wi","elsum","jj","ac","qexpo","rinsum","tukeyQinv","p0","q0","p1","q1","p2","q2","p3","q3","p4","q4","c1","c2","c3","c4","c5","vmax","ps","f","_a","_b","_c","newthis","data","sample","vals","fnfunc","beta","pdf","alpha","inv","centralF","df1","df2","binomial","cauchy","local","scale","atan","tan","chisquare","dof","exponential","rate","invgamma","kumaraswamy","Error","lognormal","noncentralt","ncp","tol","studentt","min_iterations","flip","prob","lastvalue","std","pareto","SQRT2","dof2","weibull","uniform","betacdf","s","negbin","r","hypgeom","N","scaledPDF","samplesDone","scaledCDF","factor","poisson","l","sumarr","sampleSmall","L","sampleLarge","lam","U","V","slam","loglam","invalpha","vr","us","triangular","arcsine","asin","cos","laplace","tukey","nmeans","df","nlegq","ihalfq","eps1","eps2","dhaf","dquar","deigh","dlarg","ulen1","ulen2","ulen3","ulen4","xlegq","alegq","Number","isFinite","ulen","f2","f2lf","f21","ff4","ans","otsum","twa1","t1","maxiter","x1","valx0","valx1","iter","isUsable","add","subtract","divide","multiply","nrescols","rescols","outer","dot","left","right","norm","nnorm","isNaN","angle","acos","aug","newarr","gauss_jordan","result","det","alen","alend","rowshift","colshift","mrow","mcol","gauss_elimination","maug","pivot","temp","y2","maxrow","triaUpSolve","parts","matrix_mode","triaLowSolve","lu","R","cholesky","T","gauss_jacobi","xv","xk","gauss_seidel","SOR","householder","QR","qr2","lstsq","R_I","I","Aj","cAi","Ij","cIi","qr_solve","array_mode","Q","attrs","Q1","RI","Q2","jacobi","condition","maxim","theta","e","ev","rungekutta","t_j","u_j","order","k1","k2","k3","romberg","h1","g","richardson","X","pos","y1","h_min","simpson","hermite","F","dF","dl","lagrange","cubic_spline","sq","gauss_quadrature","PCA","temp1","D","temp2","Y","Bt","C","Vt","differenceOfProportions","n1","n2","pooled","zscore","ztest","sides","tscore","ttest","anovafscore","expVar","sampMean","sampSampMean","tmpargs","unexpVar","anovaftest","ftest","fscore","anovaftes","qscore","mean1","mean2","sd","qtest","tukeyhsd","arrays","means","normalci","change","tci","significant","pvalue","oneSidedDifferenceOfProportions","twoSidedDifferenceOfProportions","models","sub_regress","exog","var_count","endog_index","exog_index","filter","ols","endog","nobs","df_model","df_resid","coef","predict","resid","ybar","SSE","SSR","SST","R2","t_test","model","subModelList","sigmaHat","seBetaHat","mod","tStatistic","pValue","leftppf","interval95","se","F_test","F_statistic","ols_wrap","adjust_R2","buildxmatrix","matrixRows","array","builddxmatrix","buildjxmatrix","jMat","pass","buildymatrix","buildjymatrix","matrixmult","regress","jMatX","jMatY","innerinv","xtranspxinv","xtransp","next","regresst","compile","jMatYBar","yBar","yAverage","anova","residuals","ssr","msr","sse","mse","sst","mst","r2","fratio","rmse","r2adj","stats","sds","ts","covar","xtranspx","inner","matrixsubtract","SDTMath","fa","cr","hr","far","muN","muS","zhr","zfar"],"mappings":"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"}