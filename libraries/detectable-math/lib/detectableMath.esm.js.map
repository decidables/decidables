{"version":3,"file":"detectableMath.esm.js","sources":["../../../node_modules/jstat/dist/jstat.js","../src/sdt-math.js","../src/index.js"],"sourcesContent":["(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n})(this, function () {\nvar jStat = (function(Math, undefined) {\n\n// For quick reference.\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n// Calculate correction for IEEE error\n// TODO: This calculation can be improved.\nfunction calcRdx(n, m) {\n  var val = n > m ? n : m;\n  return Math.pow(10,\n                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));\n}\n\n\nvar isArray = Array.isArray || function isArray(arg) {\n  return toString.call(arg) === '[object Array]';\n};\n\n\nfunction isFunction(arg) {\n  return toString.call(arg) === '[object Function]';\n}\n\n\nfunction isNumber(num) {\n  return (typeof num === 'number') ? num - num === 0 : false;\n}\n\n\n// Converts the jStat matrix to vector.\nfunction toVector(arr) {\n  return concat.apply([], arr);\n}\n\n\n// The one and only jStat constructor.\nfunction jStat() {\n  return new jStat._init(arguments);\n}\n\n\n// TODO: Remove after all references in src files have been removed.\njStat.fn = jStat.prototype;\n\n\n// By separating the initializer from the constructor it's easier to handle\n// always returning a new instance whether \"new\" was used or not.\njStat._init = function _init(args) {\n  // If first argument is an array, must be vector or matrix.\n  if (isArray(args[0])) {\n    // Check if matrix.\n    if (isArray(args[0][0])) {\n      // See if a mapping function was also passed.\n      if (isFunction(args[1]))\n        args[0] = jStat.map(args[0], args[1]);\n      // Iterate over each is faster than this.push.apply(this, args[0].\n      for (var i = 0; i < args[0].length; i++)\n        this[i] = args[0][i];\n      this.length = args[0].length;\n\n    // Otherwise must be a vector.\n    } else {\n      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n      this.length = 1;\n    }\n\n  // If first argument is number, assume creation of sequence.\n  } else if (isNumber(args[0])) {\n    this[0] = jStat.seq.apply(null, args);\n    this.length = 1;\n\n  // Handle case when jStat object is passed to jStat.\n  } else if (args[0] instanceof jStat) {\n    // Duplicate the object and pass it back.\n    return jStat(args[0].toArray());\n\n  // Unexpected argument value, return empty jStat object.\n  // TODO: This is strange behavior. Shouldn't this throw or some such to let\n  // the user know they had bad arguments?\n  } else {\n    this[0] = [];\n    this.length = 1;\n  }\n\n  return this;\n};\njStat._init.prototype = jStat.prototype;\njStat._init.constructor = jStat;\n\n\n// Utility functions.\n// TODO: for internal use only?\njStat.utils = {\n  calcRdx: calcRdx,\n  isArray: isArray,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  toVector: toVector\n};\n\n\njStat._random_fn = Math.random;\njStat.setRandom = function setRandom(fn) {\n  if (typeof fn !== 'function')\n    throw new TypeError('fn is not a function');\n  jStat._random_fn = fn;\n};\n\n\n// Easily extend the jStat object.\n// TODO: is this seriously necessary?\njStat.extend = function extend(obj) {\n  var i, j;\n\n  if (arguments.length === 1) {\n    for (j in obj)\n      jStat[j] = obj[j];\n    return this;\n  }\n\n  for (i = 1; i < arguments.length; i++) {\n    for (j in arguments[i])\n      obj[j] = arguments[i][j];\n  }\n\n  return obj;\n};\n\n\n// Returns the number of rows in the matrix.\njStat.rows = function rows(arr) {\n  return arr.length || 1;\n};\n\n\n// Returns the number of columns in the matrix.\njStat.cols = function cols(arr) {\n  return arr[0].length || 1;\n};\n\n\n// Returns the dimensions of the object { rows: i, cols: j }\njStat.dimensions = function dimensions(arr) {\n  return {\n    rows: jStat.rows(arr),\n    cols: jStat.cols(arr)\n  };\n};\n\n\n// Returns a specified row as a vector or return a sub matrix by pick some rows\njStat.row = function row(arr, index) {\n  if (isArray(index)) {\n    return index.map(function(i) {\n      return jStat.row(arr, i);\n    })\n  }\n  return arr[index];\n};\n\n\n// return row as array\n// rowa([[1,2],[3,4]],0) -> [1,2]\njStat.rowa = function rowa(arr, i) {\n  return jStat.row(arr, i);\n};\n\n\n// Returns the specified column as a vector or return a sub matrix by pick some\n// columns\njStat.col = function col(arr, index) {\n  if (isArray(index)) {\n    var submat = jStat.arange(arr.length).map(function() {\n      return new Array(index.length);\n    });\n    index.forEach(function(ind, i){\n      jStat.arange(arr.length).forEach(function(j) {\n        submat[j][i] = arr[j][ind];\n      });\n    });\n    return submat;\n  }\n  var column = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++)\n    column[i] = [arr[i][index]];\n  return column;\n};\n\n\n// return column as array\n// cola([[1,2],[3,4]],0) -> [1,3]\njStat.cola = function cola(arr, i) {\n  return jStat.col(arr, i).map(function(a){ return a[0] });\n};\n\n\n// Returns the diagonal of the matrix\njStat.diag = function diag(arr) {\n  var nrow = jStat.rows(arr);\n  var res = new Array(nrow);\n  for (var row = 0; row < nrow; row++)\n    res[row] = [arr[row][row]];\n  return res;\n};\n\n\n// Returns the anti-diagonal of the matrix\njStat.antidiag = function antidiag(arr) {\n  var nrow = jStat.rows(arr) - 1;\n  var res = new Array(nrow);\n  for (var i = 0; nrow >= 0; nrow--, i++)\n    res[i] = [arr[i][nrow]];\n  return res;\n};\n\n// Transpose a matrix or array.\njStat.transpose = function transpose(arr) {\n  var obj = [];\n  var objArr, rows, cols, j, i;\n\n  // Make sure arr is in matrix format.\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  rows = arr.length;\n  cols = arr[0].length;\n\n  for (i = 0; i < cols; i++) {\n    objArr = new Array(rows);\n    for (j = 0; j < rows; j++)\n      objArr[j] = arr[j][i];\n    obj.push(objArr);\n  }\n\n  // If obj is vector, return only single array.\n  return obj.length === 1 ? obj[0] : obj;\n};\n\n\n// Map a function to an array or array of arrays.\n// \"toAlter\" is an internal variable.\njStat.map = function map(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    for (col = 0; col < ncol; col++)\n      res[row][col] = func(arr[row][col], row, col);\n  }\n\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Cumulatively combine the elements of an array or array of arrays using a function.\njStat.cumreduce = function cumreduce(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    if (ncol > 0)\n      res[row][0] = arr[row][0];\n    for (col = 1; col < ncol; col++)\n      res[row][col] = func(res[row][col-1], arr[row][col]);\n  }\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Destructively alter an array.\njStat.alter = function alter(arr, func) {\n  return jStat.map(arr, func, true);\n};\n\n\n// Generate a rows x cols matrix according to the supplied function.\njStat.create = function  create(rows, cols, func) {\n  var res = new Array(rows);\n  var i, j;\n\n  if (isFunction(cols)) {\n    func = cols;\n    cols = rows;\n  }\n\n  for (i = 0; i < rows; i++) {\n    res[i] = new Array(cols);\n    for (j = 0; j < cols; j++)\n      res[i][j] = func(i, j);\n  }\n\n  return res;\n};\n\n\nfunction retZero() { return 0; }\n\n\n// Generate a rows x cols matrix of zeros.\njStat.zeros = function zeros(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retZero);\n};\n\n\nfunction retOne() { return 1; }\n\n\n// Generate a rows x cols matrix of ones.\njStat.ones = function ones(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retOne);\n};\n\n\n// Generate a rows x cols matrix of uniformly random numbers.\njStat.rand = function rand(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, jStat._random_fn);\n};\n\n\nfunction retIdent(i, j) { return i === j ? 1 : 0; }\n\n\n// Generate an identity matrix of size row x cols.\njStat.identity = function identity(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retIdent);\n};\n\n\n// Tests whether a matrix is symmetric\njStat.symmetric = function symmetric(arr) {\n  var size = arr.length;\n  var row, col;\n\n  if (arr.length !== arr[0].length)\n    return false;\n\n  for (row = 0; row < size; row++) {\n    for (col = 0; col < size; col++)\n      if (arr[col][row] !== arr[row][col])\n        return false;\n  }\n\n  return true;\n};\n\n\n// Set all values to zero.\njStat.clear = function clear(arr) {\n  return jStat.alter(arr, retZero);\n};\n\n\n// Generate sequence.\njStat.seq = function seq(min, max, length, func) {\n  if (!isFunction(func))\n    func = false;\n\n  var arr = [];\n  var hival = calcRdx(min, max);\n  var step = (max * hival - min * hival) / ((length - 1) * hival);\n  var current = min;\n  var cnt;\n\n  // Current is assigned using a technique to compensate for IEEE error.\n  // TODO: Needs better implementation.\n  for (cnt = 0;\n       current <= max && cnt < length;\n       cnt++, current = (min * hival + step * hival * cnt) / hival) {\n    arr.push((func ? func(current, cnt) : current));\n  }\n\n  return arr;\n};\n\n\n// arange(5) -> [0,1,2,3,4]\n// arange(1,5) -> [1,2,3,4]\n// arange(5,1,-1) -> [5,4,3,2]\njStat.arange = function arange(start, end, step) {\n  var rl = [];\n  var i;\n  step = step || 1;\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  if (start === end || step === 0) {\n    return [];\n  }\n  if (start < end && step < 0) {\n    return [];\n  }\n  if (start > end && step > 0) {\n    return [];\n  }\n  if (step > 0) {\n    for (i = start; i < end; i += step) {\n      rl.push(i);\n    }\n  } else {\n    for (i = start; i > end; i += step) {\n      rl.push(i);\n    }\n  }\n  return rl;\n};\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n// slice(A,1,{start:1}) -> [5,6]\n// as numpy code A[:2,1:]\njStat.slice = (function(){\n  function _slice(list, start, end, step) {\n    // note it's not equal to range.map mode it's a bug\n    var i;\n    var rl = [];\n    var length = list.length;\n    if (start === undefined && end === undefined && step === undefined) {\n      return jStat.copy(list);\n    }\n\n    start = start || 0;\n    end = end || list.length;\n    start = start >= 0 ? start : length + start;\n    end = end >= 0 ? end : length + end;\n    step = step || 1;\n    if (start === end || step === 0) {\n      return [];\n    }\n    if (start < end && step < 0) {\n      return [];\n    }\n    if (start > end && step > 0) {\n      return [];\n    }\n    if (step > 0) {\n      for (i = start; i < end; i += step) {\n        rl.push(list[i]);\n      }\n    } else {\n      for (i = start; i > end;i += step) {\n        rl.push(list[i]);\n      }\n    }\n    return rl;\n  }\n\n  function slice(list, rcSlice) {\n    var colSlice, rowSlice;\n    rcSlice = rcSlice || {};\n    if (isNumber(rcSlice.row)) {\n      if (isNumber(rcSlice.col))\n        return list[rcSlice.row][rcSlice.col];\n      var row = jStat.rowa(list, rcSlice.row);\n      colSlice = rcSlice.col || {};\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    }\n\n    if (isNumber(rcSlice.col)) {\n      var col = jStat.cola(list, rcSlice.col);\n      rowSlice = rcSlice.row || {};\n      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n    }\n\n    rowSlice = rcSlice.row || {};\n    colSlice = rcSlice.col || {};\n    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n    return rows.map(function(row) {\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    });\n  }\n\n  return slice;\n}());\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n// A=[[1,2,3],[4,0,0],[7,0,0]]\njStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n  var nl, ml;\n  if (isNumber(rcSlice.row)) {\n    if (isNumber(rcSlice.col))\n      return A[rcSlice.row][rcSlice.col] = B;\n    rcSlice.col = rcSlice.col || {};\n    rcSlice.col.start = rcSlice.col.start || 0;\n    rcSlice.col.end = rcSlice.col.end || A[0].length;\n    rcSlice.col.step = rcSlice.col.step || 1;\n    nl = jStat.arange(rcSlice.col.start,\n                          Math.min(A.length, rcSlice.col.end),\n                          rcSlice.col.step);\n    var m = rcSlice.row;\n    nl.forEach(function(n, i) {\n      A[m][n] = B[i];\n    });\n    return A;\n  }\n\n  if (isNumber(rcSlice.col)) {\n    rcSlice.row = rcSlice.row || {};\n    rcSlice.row.start = rcSlice.row.start || 0;\n    rcSlice.row.end = rcSlice.row.end || A.length;\n    rcSlice.row.step = rcSlice.row.step || 1;\n    ml = jStat.arange(rcSlice.row.start,\n                          Math.min(A[0].length, rcSlice.row.end),\n                          rcSlice.row.step);\n    var n = rcSlice.col;\n    ml.forEach(function(m, j) {\n      A[m][n] = B[j];\n    });\n    return A;\n  }\n\n  if (B[0].length === undefined) {\n    B = [B];\n  }\n  rcSlice.row.start = rcSlice.row.start || 0;\n  rcSlice.row.end = rcSlice.row.end || A.length;\n  rcSlice.row.step = rcSlice.row.step || 1;\n  rcSlice.col.start = rcSlice.col.start || 0;\n  rcSlice.col.end = rcSlice.col.end || A[0].length;\n  rcSlice.col.step = rcSlice.col.step || 1;\n  ml = jStat.arange(rcSlice.row.start,\n                        Math.min(A.length, rcSlice.row.end),\n                        rcSlice.row.step);\n  nl = jStat.arange(rcSlice.col.start,\n                        Math.min(A[0].length, rcSlice.col.end),\n                        rcSlice.col.step);\n  ml.forEach(function(m, i) {\n    nl.forEach(function(n, j) {\n      A[m][n] = B[i][j];\n    });\n  });\n  return A;\n};\n\n\n// [1,2,3] ->\n// [[1,0,0],[0,2,0],[0,0,3]]\njStat.diagonal = function diagonal(diagArray) {\n  var mat = jStat.zeros(diagArray.length, diagArray.length);\n  diagArray.forEach(function(t, i) {\n    mat[i][i] = t;\n  });\n  return mat;\n};\n\n\n// return copy of A\njStat.copy = function copy(A) {\n  return A.map(function(row) {\n    if (isNumber(row))\n      return row;\n    return row.map(function(t) {\n      return t;\n    });\n  });\n};\n\n\n// TODO: Go over this entire implementation. Seems a tragic waste of resources\n// doing all this work. Instead, and while ugly, use new Function() to generate\n// a custom function for each static method.\n\n// Quick reference.\nvar jProto = jStat.prototype;\n\n// Default length.\njProto.length = 0;\n\n// For internal use only.\n// TODO: Check if they're actually used, and if they are then rename them\n// to _*\njProto.push = Array.prototype.push;\njProto.sort = Array.prototype.sort;\njProto.splice = Array.prototype.splice;\njProto.slice = Array.prototype.slice;\n\n\n// Return a clean array.\njProto.toArray = function toArray() {\n  return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n};\n\n\n// Map a function to a matrix or vector.\njProto.map = function map(func, toAlter) {\n  return jStat(jStat.map(this, func, toAlter));\n};\n\n\n// Cumulatively combine the elements of a matrix or vector using a function.\njProto.cumreduce = function cumreduce(func, toAlter) {\n  return jStat(jStat.cumreduce(this, func, toAlter));\n};\n\n\n// Destructively alter an array.\njProto.alter = function alter(func) {\n  jStat.alter(this, func);\n  return this;\n};\n\n\n// Extend prototype with methods that have no argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(func) {\n      var self = this,\n      results;\n      // Check for callback.\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self));\n        });\n        return this;\n      }\n      results = jStat[passfunc](this);\n      return isArray(results) ? jStat(results) : results;\n    };\n  })(funcs[i]);\n})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n\n// Extend prototype with methods that have one argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(index, func) {\n      var self = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self, index));\n        });\n        return this;\n      }\n      return jStat(jStat[passfunc](this, index));\n    };\n  })(funcs[i]);\n})('row col'.split(' '));\n\n\n// Extend prototype with simple shortcut methods.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('create zeros ones rand identity'.split(' '));\n\n\n// Exposing jStat.\nreturn jStat;\n\n}(Math));\n(function(jStat, Math) {\n\nvar isFunction = jStat.utils.isFunction;\n\n// Ascending functions for sort\nfunction ascNum(a, b) { return a - b; }\n\nfunction clip(arg, min, max) {\n  return Math.max(min, Math.min(arg, max));\n}\n\n\n// sum of an array\njStat.sum = function sum(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n\n// sum squared\njStat.sumsqrd = function sumsqrd(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i] * arr[i];\n  return sum;\n};\n\n\n// sum of squared errors of prediction (SSE)\njStat.sumsqerr = function sumsqerr(arr) {\n  var mean = jStat.mean(arr);\n  var sum = 0;\n  var i = arr.length;\n  var tmp;\n  while (--i >= 0) {\n    tmp = arr[i] - mean;\n    sum += tmp * tmp;\n  }\n  return sum;\n};\n\n// sum of an array in each row\njStat.sumrow = function sumrow(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n// product of an array\njStat.product = function product(arr) {\n  var prod = 1;\n  var i = arr.length;\n  while (--i >= 0)\n    prod *= arr[i];\n  return prod;\n};\n\n\n// minimum value of an array\njStat.min = function min(arr) {\n  var low = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] < low)\n      low = arr[i];\n  return low;\n};\n\n\n// maximum value of an array\njStat.max = function max(arr) {\n  var high = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] > high)\n      high = arr[i];\n  return high;\n};\n\n\n// unique values of an array\njStat.unique = function unique(arr) {\n  var hash = {}, _arr = [];\n  for(var i = 0; i < arr.length; i++) {\n    if (!hash[arr[i]]) {\n      hash[arr[i]] = true;\n      _arr.push(arr[i]);\n    }\n  }\n  return _arr;\n};\n\n\n// mean value of an array\njStat.mean = function mean(arr) {\n  return jStat.sum(arr) / arr.length;\n};\n\n\n// mean squared error (MSE)\njStat.meansqerr = function meansqerr(arr) {\n  return jStat.sumsqerr(arr) / arr.length;\n};\n\n\n// geometric mean of an array\njStat.geomean = function geomean(arr) {\n  var logs = arr.map(Math.log)\n  var meanOfLogs = jStat.mean(logs)\n  return Math.exp(meanOfLogs)\n};\n\n\n// median of an array\njStat.median = function median(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  // check if array is even or odd, then return the appropriate\n  return !(arrlen & 1)\n    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2\n    : _arr[(arrlen / 2) | 0 ];\n};\n\n\n// cumulative sum of an array\njStat.cumsum = function cumsum(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a + b; });\n};\n\n\n// cumulative product of an array\njStat.cumprod = function cumprod(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a * b; });\n};\n\n\n// successive differences of a sequence\njStat.diff = function diff(arr) {\n  var diffs = [];\n  var arrLen = arr.length;\n  var i;\n  for (i = 1; i < arrLen; i++)\n    diffs.push(arr[i] - arr[i - 1]);\n  return diffs;\n};\n\n\n// ranks of an array\njStat.rank = function (arr) {\n  var i;\n  var distinctNumbers = [];\n  var numberCounts = {};\n  for (i = 0; i < arr.length; i++) {\n    var number = arr[i];\n    if (numberCounts[number]) {\n      numberCounts[number]++;\n    } else {\n      numberCounts[number] = 1;\n      distinctNumbers.push(number);\n    }\n  }\n\n  var sortedDistinctNumbers = distinctNumbers.sort(ascNum);\n  var numberRanks = {};\n  var currentRank = 1;\n  for (i = 0; i < sortedDistinctNumbers.length; i++) {\n    var number = sortedDistinctNumbers[i];\n    var count = numberCounts[number];\n    var first = currentRank;\n    var last = currentRank + count - 1;\n    var rank = (first + last) / 2;\n    numberRanks[number] = rank;\n    currentRank += count;\n  }\n\n  return arr.map(function (number) {\n    return numberRanks[number];\n  });\n};\n\n\n// mode of an array\n// if there are multiple modes of an array, return all of them\n// is this the appropriate way of handling it?\njStat.mode = function mode(arr) {\n  var arrLen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  var count = 1;\n  var maxCount = 0;\n  var numMaxCount = 0;\n  var mode_arr = [];\n  var i;\n\n  for (i = 0; i < arrLen; i++) {\n    if (_arr[i] === _arr[i + 1]) {\n      count++;\n    } else {\n      if (count > maxCount) {\n        mode_arr = [_arr[i]];\n        maxCount = count;\n        numMaxCount = 0;\n      }\n      // are there multiple max counts\n      else if (count === maxCount) {\n        mode_arr.push(_arr[i]);\n        numMaxCount++;\n      }\n      // resetting count for new value in array\n      count = 1;\n    }\n  }\n\n  return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n};\n\n\n// range of an array\njStat.range = function range(arr) {\n  return jStat.max(arr) - jStat.min(arr);\n};\n\n// variance of an array\n// flag = true indicates sample instead of population\njStat.variance = function variance(arr, flag) {\n  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n};\n\n// pooled variance of an array of arrays\njStat.pooledvariance = function pooledvariance(arr) {\n  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);\n  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);\n  return sumsqerr / (count - arr.length);\n};\n\n// deviation of an array\njStat.deviation = function (arr) {\n  var mean = jStat.mean(arr);\n  var arrlen = arr.length;\n  var dev = new Array(arrlen);\n  for (var i = 0; i < arrlen; i++) {\n    dev[i] = arr[i] - mean;\n  }\n  return dev;\n};\n\n// standard deviation of an array\n// flag = true indicates sample instead of population\njStat.stdev = function stdev(arr, flag) {\n  return Math.sqrt(jStat.variance(arr, flag));\n};\n\n// pooled standard deviation of an array of arrays\njStat.pooledstdev = function pooledstdev(arr) {\n  return Math.sqrt(jStat.pooledvariance(arr));\n};\n\n// mean deviation (mean absolute deviation) of an array\njStat.meandev = function meandev(arr) {\n  var mean = jStat.mean(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - mean));\n  }\n  return jStat.mean(a);\n};\n\n\n// median deviation (median absolute deviation) of an array\njStat.meddev = function meddev(arr) {\n  var median = jStat.median(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - median));\n  }\n  return jStat.median(a);\n};\n\n\n// coefficient of variation\njStat.coeffvar = function coeffvar(arr) {\n  return jStat.stdev(arr) / jStat.mean(arr);\n};\n\n\n// quartiles of an array\njStat.quartiles = function quartiles(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  return [\n    _arr[ Math.round((arrlen) / 4) - 1 ],\n    _arr[ Math.round((arrlen) / 2) - 1 ],\n    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]\n  ];\n};\n\n\n// Arbitary quantiles of an array. Direct port of the scipy.stats\n// implementation by Pierre GF Gerard-Marchant.\njStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n  var sortedArray = arr.slice().sort(ascNum);\n  var quantileVals = [quantilesArray.length];\n  var n = arr.length;\n  var i, p, m, aleph, k, gamma;\n\n  if (typeof alphap === 'undefined')\n    alphap = 3 / 8;\n  if (typeof betap === 'undefined')\n    betap = 3 / 8;\n\n  for (i = 0; i < quantilesArray.length; i++) {\n    p = quantilesArray[i];\n    m = alphap + p * (1 - alphap - betap);\n    aleph = n * p + m;\n    k = Math.floor(clip(aleph, 1, n - 1));\n    gamma = clip(aleph - k, 0, 1);\n    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n  }\n\n  return quantileVals;\n};\n\n// Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n// Passing true for the exclusive parameter excludes both endpoints of the range.\njStat.percentile = function percentile(arr, k, exclusive) {\n  var _arr = arr.slice().sort(ascNum);\n  var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n  var index = parseInt(realIndex);\n  var frac = realIndex - index;\n  if (index + 1 < _arr.length) {\n    return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n  } else {\n    return _arr[index - 1];\n  }\n}\n\n// The percentile rank of score in a given array. Returns the percentage\n// of all values in the input array that are less than (kind='strict') or\n// less or equal than (kind='weak') score. Default is weak.\njStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n  var counter = 0;\n  var len = arr.length;\n  var strict = false;\n  var value, i;\n\n  if (kind === 'strict')\n    strict = true;\n\n  for (i = 0; i < len; i++) {\n    value = arr[i];\n    if ((strict && value < score) ||\n        (!strict && value <= score)) {\n      counter++;\n    }\n  }\n\n  return counter / len;\n};\n\n\n// Histogram (bin count) data\njStat.histogram = function histogram(arr, binCnt) {\n  binCnt = binCnt || 4;\n  var first = jStat.min(arr);\n  var binWidth = (jStat.max(arr) - first) / binCnt;\n  var len = arr.length;\n  var bins = [];\n  var i;\n\n  for (i = 0; i < binCnt; i++)\n    bins[i] = 0;\n  for (i = 0; i < len; i++)\n    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;\n\n  return bins;\n};\n\n\n// covariance of two arrays\njStat.covariance = function covariance(arr1, arr2) {\n  var u = jStat.mean(arr1);\n  var v = jStat.mean(arr2);\n  var arr1Len = arr1.length;\n  var sq_dev = new Array(arr1Len);\n  var i;\n\n  for (i = 0; i < arr1Len; i++)\n    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n  return jStat.sum(sq_dev) / (arr1Len - 1);\n};\n\n\n// (pearson's) population correlation coefficient, rho\njStat.corrcoeff = function corrcoeff(arr1, arr2) {\n  return jStat.covariance(arr1, arr2) /\n      jStat.stdev(arr1, 1) /\n      jStat.stdev(arr2, 1);\n};\n\n  // (spearman's) rank correlation coefficient, sp\njStat.spearmancoeff =  function (arr1, arr2) {\n  arr1 = jStat.rank(arr1);\n  arr2 = jStat.rank(arr2);\n  //return pearson's correlation of the ranks:\n  return jStat.corrcoeff(arr1, arr2);\n}\n\n\n// statistical standardized moments (general form of skew/kurt)\njStat.stanMoment = function stanMoment(arr, n) {\n  var mu = jStat.mean(arr);\n  var sigma = jStat.stdev(arr);\n  var len = arr.length;\n  var skewSum = 0;\n\n  for (var i = 0; i < len; i++)\n    skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n  return skewSum / arr.length;\n};\n\n// (pearson's) moment coefficient of skewness\njStat.skewness = function skewness(arr) {\n  return jStat.stanMoment(arr, 3);\n};\n\n// (pearson's) (excess) kurtosis\njStat.kurtosis = function kurtosis(arr) {\n  return jStat.stanMoment(arr, 4) - 3;\n};\n\n\nvar jProto = jStat.prototype;\n\n\n// Extend jProto with method for calculating cumulative sums and products.\n// This differs from the similar extension below as cumsum and cumprod should\n// not be run again in the case fullbool === true.\n// If a matrix is passed, automatically assume operation should be done on the\n// columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('cumsum cumprod').split(' '));\n\n\n// Extend jProto with methods which don't require arguments and work on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        if (passfunc !== 'sumrow')\n          tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return fullbool === true\n            ? jStat[passfunc](jStat.utils.toVector(arr))\n            : arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +\n    'geomean median diff rank mode range variance deviation stdev meandev ' +\n    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n\n// Extend jProto with functions that take arguments. Operations on matrices are\n// done on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callbackFunction;\n\n      // If the last argument is a function, we assume it's a callback; we\n      // strip the callback out and call the function again.\n      if (isFunction(args[args.length - 1])) {\n        callbackFunction = args[args.length - 1];\n        var argsToPass = args.slice(0, args.length - 1);\n\n        setTimeout(function() {\n          callbackFunction.call(tmpthis,\n                                jProto[passfunc].apply(tmpthis, argsToPass));\n        });\n        return this;\n\n      // Otherwise we curry the function args and call normally.\n      } else {\n        callbackFunction = undefined;\n        var curriedFunction = function curriedFunction(vector) {\n          return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n        }\n      }\n\n      // If this is a matrix, run column-by-column.\n      if (this.length > 1) {\n        tmpthis = tmpthis.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = curriedFunction(tmpthis[i]);\n        return arr;\n      }\n\n      // Otherwise run on the vector.\n      return curriedFunction(this[0]);\n    };\n  })(funcs[i]);\n})('quantiles percentileOfScore'.split(' '));\n\n}(jStat, Math));\n// Special functions //\n(function(jStat, Math) {\n\n// Log-gamma function\njStat.gammaln = function gammaln(x) {\n  var j = 0;\n  var cof = [\n    76.18009172947146, -86.50532032941677, 24.01409824083091,\n    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n  ];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++)\n    ser += cof[j] / ++y;\n  return Math.log(2.5066282746310005 * ser / xx) - tmp;\n};\n\n/*\n * log-gamma function to support poisson distribution sampling. The\n * algorithm comes from SPECFUN by Shanjie Zhang and Jianming Jin and their\n * book \"Computation of Special Functions\", 1996, John Wiley & Sons, Inc.\n */\njStat.loggam = function loggam(x) {\n  var x0, x2, xp, gl, gl0;\n  var k, n;\n\n  var a = [8.333333333333333e-02, -2.777777777777778e-03,\n          7.936507936507937e-04, -5.952380952380952e-04,\n          8.417508417508418e-04, -1.917526917526918e-03,\n          6.410256410256410e-03, -2.955065359477124e-02,\n          1.796443723688307e-01, -1.39243221690590e+00];\n  x0 = x;\n  n = 0;\n  if ((x == 1.0) || (x == 2.0)) {\n      return 0.0;\n  }\n  if (x <= 7.0) {\n      n = Math.floor(7 - x);\n      x0 = x + n;\n  }\n  x2 = 1.0 / (x0 * x0);\n  xp = 2 * Math.PI;\n  gl0 = a[9];\n  for (k = 8; k >= 0; k--) {\n      gl0 *= x2;\n      gl0 += a[k];\n  }\n  gl = gl0 / x0 + 0.5 * Math.log(xp) + (x0 - 0.5) * Math.log(x0) - x0;\n  if (x <= 7.0) {\n      for (k = 1; k <= n; k++) {\n          gl -= Math.log(x0 - 1.0);\n          x0 -= 1.0;\n      }\n  }\n  return gl;\n}\n\n// gamma of x\njStat.gammafn = function gammafn(x) {\n  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n           629.3311553128184, 866.9662027904133, -31451.272968848367,\n           -36144.413418691176, 66456.14382024054\n  ];\n  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n           -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n           -134659.9598649693, -115132.2596755535];\n  var fact = false;\n  var n = 0;\n  var xden = 0;\n  var xnum = 0;\n  var y = x;\n  var i, z, yi, res;\n  if (x > 171.6243769536076) {\n    return Infinity;\n  }\n  if (y <= 0) {\n    res = y % 1 + 3.6e-16;\n    if (res) {\n      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n      y = 1 - y;\n    } else {\n      return Infinity;\n    }\n  }\n  yi = y;\n  if (y < 1) {\n    z = y++;\n  } else {\n    z = (y -= n = (y | 0) - 1) - 1;\n  }\n  for (i = 0; i < 8; ++i) {\n    xnum = (xnum + p[i]) * z;\n    xden = xden * z + q[i];\n  }\n  res = xnum / xden + 1;\n  if (yi < y) {\n    res /= yi;\n  } else if (yi > y) {\n    for (i = 0; i < n; ++i) {\n      res *= y;\n      y++;\n    }\n  }\n  if (fact) {\n    res = fact / res;\n  }\n  return res;\n};\n\n\n// lower incomplete gamma function, which is usually typeset with a\n// lower-case greek gamma as the function symbol\njStat.gammap = function gammap(a, x) {\n  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n};\n\n\n// The lower regularized incomplete gamma function, usually written P(a,x)\njStat.lowRegGamma = function lowRegGamma(a, x) {\n  var aln = jStat.gammaln(a);\n  var ap = a;\n  var sum = 1 / a;\n  var del = sum;\n  var b = x + 1 - a;\n  var c = 1 / 1.0e-30;\n  var d = 1 / b;\n  var h = d;\n  var i = 1;\n  // calculate maximum number of itterations required for a\n  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n  var an;\n\n  if (x < 0 || a <= 0) {\n    return NaN;\n  } else if (x < a + 1) {\n    for (; i <= ITMAX; i++) {\n      sum += del *= x / ++ap;\n    }\n    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n  }\n\n  for (; i <= ITMAX; i++) {\n    an = -i * (i - a);\n    b += 2;\n    d = an * d + b;\n    c = b + an / c;\n    d = 1 / d;\n    h *= d * c;\n  }\n\n  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n};\n\n// natural log factorial of n\njStat.factorialln = function factorialln(n) {\n  return n < 0 ? NaN : jStat.gammaln(n + 1);\n};\n\n// factorial of n\njStat.factorial = function factorial(n) {\n  return n < 0 ? NaN : jStat.gammafn(n + 1);\n};\n\n// combinations of n, m\njStat.combination = function combination(n, m) {\n  // make sure n or m don't exceed the upper limit of usable values\n  return (n > 170 || m > 170)\n      ? Math.exp(jStat.combinationln(n, m))\n      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);\n};\n\n\njStat.combinationln = function combinationln(n, m){\n  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n};\n\n\n// permutations of n, m\njStat.permutation = function permutation(n, m) {\n  return jStat.factorial(n) / jStat.factorial(n - m);\n};\n\n\n// beta function\njStat.betafn = function betafn(x, y) {\n  // ensure arguments are positive\n  if (x <= 0 || y <= 0)\n    return undefined;\n  // make sure x + y doesn't exceed the upper limit of usable values\n  return (x + y > 170)\n      ? Math.exp(jStat.betaln(x, y))\n      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n};\n\n\n// natural logarithm of beta function\njStat.betaln = function betaln(x, y) {\n  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n};\n\n\n// Evaluates the continued fraction for incomplete beta function by modified\n// Lentz's method.\njStat.betacf = function betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q's will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin)\n    d = fpmin;\n  d = 1 / d;\n  h = d;\n\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7)\n      break;\n  }\n\n  return h;\n};\n\n\n// Returns the inverse of the lower regularized inomplete gamma function\njStat.gammapinv = function gammapinv(p, a) {\n  var j = 0;\n  var a1 = a - 1;\n  var EPS = 1e-8;\n  var gln = jStat.gammaln(a);\n  var x, err, t, u, pp, lna1, afac;\n\n  if (p >= 1)\n    return Math.max(100, a + 100 * Math.sqrt(a));\n  if (p <= 0)\n    return 0;\n  if (a > 1) {\n    lna1 = Math.log(a1);\n    afac = Math.exp(a1 * (lna1 - 1) - gln);\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    x = Math.max(1e-3,\n                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n  } else {\n    t = 1 - a * (0.253 + a * 0.12);\n    if (p < t)\n      x = Math.pow(p / t, 1 / a);\n    else\n      x = 1 - Math.log(1 - (p - t) / (1 - t));\n  }\n\n  for(; j < 12; j++) {\n    if (x <= 0)\n      return 0;\n    err = jStat.lowRegGamma(a, x) - p;\n    if (a > 1)\n      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n    else\n      t = Math.exp(-x + a1 * Math.log(x) - gln);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (Math.abs(t) < EPS * x)\n      break;\n  }\n\n  return x;\n};\n\n\n// Returns the error function erf(x)\njStat.erf = function erf(x) {\n  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n             -6.886027e-12, 8.94487e-13, 3.13092e-13,\n             -1.12708e-13, 3.81e-16, 7.106e-15,\n             -1.523e-15, -9.4e-17, 1.21e-16,\n             -2.8e-17];\n  var j = cof.length - 1;\n  var isneg = false;\n  var d = 0;\n  var dd = 0;\n  var t, ty, tmp, res;\n\n  if (x < 0) {\n    x = -x;\n    isneg = true;\n  }\n\n  t = 2 / (2 + x);\n  ty = 4 * t - 2;\n\n  for(; j > 0; j--) {\n    tmp = d;\n    d = ty * d - dd + cof[j];\n    dd = tmp;\n  }\n\n  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n  return isneg ? res - 1 : 1 - res;\n};\n\n\n// Returns the complmentary error function erfc(x)\njStat.erfc = function erfc(x) {\n  return 1 - jStat.erf(x);\n};\n\n\n// Returns the inverse of the complementary error function\njStat.erfcinv = function erfcinv(p) {\n  var j = 0;\n  var x, err, t, pp;\n  if (p >= 2)\n    return -100;\n  if (p <= 0)\n    return 100;\n  pp = (p < 1) ? p : 2 - p;\n  t = Math.sqrt(-2 * Math.log(pp / 2));\n  x = -0.70711 * ((2.30753 + t * 0.27061) /\n                  (1 + t * (0.99229 + t * 0.04481)) - t);\n  for (; j < 2; j++) {\n    err = jStat.erfc(x) - pp;\n    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n  }\n  return (p < 1) ? x : -x;\n};\n\n\n// Returns the inverse of the incomplete beta function\njStat.ibetainv = function ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0)\n    return 0;\n  if (p >= 1)\n    return 1;\n  if (a >= 1 && b >= 1) {\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));\n    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n        (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w)\n      x = Math.pow(a * w * p, 1 / a);\n    else\n      x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n  for(; j < 10; j++) {\n    if (x === 0 || x === 1)\n      return x;\n    err = jStat.ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (x >= 1)\n      x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0)\n      break;\n  }\n  return x;\n};\n\n\n// Returns the incomplete beta function I_x(a,b)\njStat.ibeta = function ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = (x === 0 || x === 1) ?  0 :\n    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -\n             jStat.gammaln(b) + a * Math.log(x) + b *\n             Math.log(1 - x));\n  if (x < 0 || x > 1)\n    return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * jStat.betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n};\n\n\n// Returns a normal deviate (mu=0, sigma=1).\n// If n and m are specified it returns a object of normal deviates.\njStat.randn = function randn(n, m) {\n  var u, v, x, y, q;\n  if (!m)\n    m = n;\n  if (n)\n    return jStat.create(n, m, function() { return jStat.randn(); });\n  do {\n    u = jStat._random_fn();\n    v = 1.7156 * (jStat._random_fn() - 0.5);\n    x = u - 0.449871;\n    y = Math.abs(v) + 0.386595;\n    q = x * x + y * (0.19600 * y - 0.25472 * x);\n  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n  return v / u;\n};\n\n\n// Returns a gamma deviate by the method of Marsaglia and Tsang.\njStat.randg = function randg(shape, n, m) {\n  var oalph = shape;\n  var a1, a2, u, v, x, mat;\n  if (!m)\n    m = n;\n  if (!shape)\n    shape = 1;\n  if (n) {\n    mat = jStat.zeros(n,m);\n    mat.alter(function() { return jStat.randg(shape); });\n    return mat;\n  }\n  if (shape < 1)\n    shape += 1;\n  a1 = shape - 1 / 3;\n  a2 = 1 / Math.sqrt(9 * a1);\n  do {\n    do {\n      x = jStat.randn();\n      v = 1 + a2 * x;\n    } while(v <= 0);\n    v = v * v * v;\n    u = jStat._random_fn();\n  } while(u > 1 - 0.331 * Math.pow(x, 4) &&\n          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));\n  // alpha > 1\n  if (shape == oalph)\n    return a1 * v;\n  // alpha < 1\n  do {\n    u = jStat._random_fn();\n  } while(u === 0);\n  return Math.pow(u, 1 / oalph) * a1 * v;\n};\n\n\n// making use of static methods on the instance\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(\n          jStat.map(this, function(value) { return jStat[passfunc](value); }));\n    }\n  })(funcs[i]);\n})('gammaln gammafn factorial factorialln'.split(' '));\n\n\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('randn'.split(' '));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\n// generate all distribution instance methods\n(function(list) {\n  for (var i = 0; i < list.length; i++) (function(func) {\n    // distribution instance method\n    jStat[func] = function f(a, b, c) {\n      if (!(this instanceof f))\n        return new f(a, b, c);\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      return this;\n    };\n    // distribution method to be used on a jStat instance\n    jStat.fn[func] = function(a, b, c) {\n      var newthis = jStat[func](a, b, c);\n      newthis.data = this;\n      return newthis;\n    };\n    // sample instance method\n    jStat[func].prototype.sample = function(arr) {\n      var a = this._a;\n      var b = this._b;\n      var c = this._c;\n      if (arr)\n        return jStat.alter(arr, function() {\n          return jStat[func].sample(a, b, c);\n        });\n      else\n        return jStat[func].sample(a, b, c);\n    };\n    // generate the pdf, cdf and inv instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function(x) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (!x && x !== 0)\n            x = this.data;\n          if (typeof x !== 'number') {\n            return jStat.fn.map.call(x, function(x) {\n              return jStat[func][fnfunc](x, a, b, c);\n            });\n          }\n          return jStat[func][fnfunc](x, a, b, c);\n        };\n      })(vals[i]);\n    })('pdf cdf inv'.split(' '));\n    // generate the mean, median, mode and variance instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function() {\n          return jStat[func][fnfunc](this._a, this._b, this._c);\n        };\n      })(vals[i]);\n    })('mean median mode variance'.split(' '));\n  })(list[i]);\n})((\n  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +\n  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +\n  'binomial negbin hypgeom poisson triangular tukey arcsine'\n).split(' '));\n\n\n\n// extend beta function with static methods\njStat.extend(jStat.beta, {\n  pdf: function pdf(x, alpha, beta) {\n    // PDF is zero outside the support\n    if (x > 1 || x < 0)\n      return 0;\n    // PDF is one for the uniform case\n    if (alpha == 1 && beta == 1)\n      return 1;\n\n    if (alpha < 512 && beta < 512) {\n      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n          jStat.betafn(alpha, beta);\n    } else {\n      return Math.exp((alpha - 1) * Math.log(x) +\n                      (beta - 1) * Math.log(1 - x) -\n                      jStat.betaln(alpha, beta));\n    }\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n  },\n\n  inv: function inv(x, alpha, beta) {\n    return jStat.ibetainv(x, alpha, beta);\n  },\n\n  mean: function mean(alpha, beta) {\n    return alpha / (alpha + beta);\n  },\n\n  median: function median(alpha, beta) {\n    return jStat.ibetainv(0.5, alpha, beta);\n  },\n\n  mode: function mode(alpha, beta) {\n    return (alpha - 1 ) / ( alpha + beta - 2);\n  },\n\n  // return a random sample\n  sample: function sample(alpha, beta) {\n    var u = jStat.randg(alpha);\n    return u / (u + jStat.randg(beta));\n  },\n\n  variance: function variance(alpha, beta) {\n    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n  }\n});\n\n// extend F function with static methods\njStat.extend(jStat.centralF, {\n  // This implementation of the pdf function avoids float overflow\n  // See the way that R calculates this value:\n  // https://svn.r-project.org/R/trunk/src/nmath/df.c\n  pdf: function pdf(x, df1, df2) {\n    var p, q, f;\n\n    if (x < 0)\n      return 0;\n\n    if (df1 <= 2) {\n      if (x === 0 && df1 < 2) {\n        return Infinity;\n      }\n      if (x === 0 && df1 === 2) {\n        return 1;\n      }\n      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *\n              Math.pow(df1 / df2, df1 / 2) *\n              Math.pow(x, (df1/2) - 1) *\n              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n    }\n\n    p = (df1 * x) / (df2 + x * df1);\n    q = df2 / (df2 + x * df1);\n    f = df1 * q / 2.0;\n    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n  },\n\n  cdf: function cdf(x, df1, df2) {\n    if (x < 0)\n      return 0;\n    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n  },\n\n  inv: function inv(x, df1, df2) {\n    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n  },\n\n  mean: function mean(df1, df2) {\n    return (df2 > 2) ? df2 / (df2 - 2) : undefined;\n  },\n\n  mode: function mode(df1, df2) {\n    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;\n  },\n\n  // return a random sample\n  sample: function sample(df1, df2) {\n    var x1 = jStat.randg(df1 / 2) * 2;\n    var x2 = jStat.randg(df2 / 2) * 2;\n    return (x1 / df1) / (x2 / df2);\n  },\n\n  variance: function variance(df1, df2) {\n    if (df2 <= 4)\n      return undefined;\n    return 2 * df2 * df2 * (df1 + df2 - 2) /\n        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n  }\n});\n\n\n// extend cauchy function with static methods\njStat.extend(jStat.cauchy, {\n  pdf: function pdf(x, local, scale) {\n    if (scale < 0) { return 0; }\n\n    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;\n  },\n\n  cdf: function cdf(x, local, scale) {\n    return Math.atan((x - local) / scale) / Math.PI + 0.5;\n  },\n\n  inv: function(p, local, scale) {\n    return local + scale * Math.tan(Math.PI * (p - 0.5));\n  },\n\n  median: function median(local/*, scale*/) {\n    return local;\n  },\n\n  mode: function mode(local/*, scale*/) {\n    return local;\n  },\n\n  sample: function sample(local, scale) {\n    return jStat.randn() *\n        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n  }\n});\n\n\n\n// extend chisquare function with static methods\njStat.extend(jStat.chisquare, {\n  pdf: function pdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && dof === 2) ? 0.5 :\n        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                 Math.log(2) - jStat.gammaln(dof / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(dof / 2, x / 2);\n  },\n\n  inv: function(p, dof) {\n    return 2 * jStat.gammapinv(p, 0.5 * dof);\n  },\n\n  mean : function(dof) {\n    return dof;\n  },\n\n  // TODO: this is an approximation (is there a better way?)\n  median: function median(dof) {\n    return dof * Math.pow(1 - (2 / (9 * dof)), 3);\n  },\n\n  mode: function mode(dof) {\n    return (dof - 2 > 0) ? dof - 2 : 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randg(dof / 2) * 2;\n  },\n\n  variance: function variance(dof) {\n    return 2 * dof;\n  }\n});\n\n\n\n// extend exponential function with static methods\njStat.extend(jStat.exponential, {\n  pdf: function pdf(x, rate) {\n    return x < 0 ? 0 : rate * Math.exp(-rate * x);\n  },\n\n  cdf: function cdf(x, rate) {\n    return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n  },\n\n  inv: function(p, rate) {\n    return -Math.log(1 - p) / rate;\n  },\n\n  mean : function(rate) {\n    return 1 / rate;\n  },\n\n  median: function (rate) {\n    return (1 / rate) * Math.log(2);\n  },\n\n  mode: function mode(/*rate*/) {\n    return 0;\n  },\n\n  sample: function sample(rate) {\n    return -1 / rate * Math.log(jStat._random_fn());\n  },\n\n  variance : function(rate) {\n    return Math.pow(rate, -2);\n  }\n});\n\n\n\n// extend gamma function with static methods\njStat.extend(jStat.gamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                    jStat.gammaln(shape) - shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(shape, x / scale);\n  },\n\n  inv: function(p, shape, scale) {\n    return jStat.gammapinv(p, shape) * scale;\n  },\n\n  mean : function(shape, scale) {\n    return shape * scale;\n  },\n\n  mode: function mode(shape, scale) {\n    if(shape > 1) return (shape - 1) * scale;\n    return undefined;\n  },\n\n  sample: function sample(shape, scale) {\n    return jStat.randg(shape) * scale;\n  },\n\n  variance: function variance(shape, scale) {\n    return shape * scale * scale;\n  }\n});\n\n// extend inverse gamma function with static methods\njStat.extend(jStat.invgamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -\n                    jStat.gammaln(shape) + shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return 1 - jStat.lowRegGamma(shape, scale / x);\n  },\n\n  inv: function(p, shape, scale) {\n    return scale / jStat.gammapinv(1 - p, shape);\n  },\n\n  mean : function(shape, scale) {\n    return (shape > 1) ? scale / (shape - 1) : undefined;\n  },\n\n  mode: function mode(shape, scale) {\n    return scale / (shape + 1);\n  },\n\n  sample: function sample(shape, scale) {\n    return scale / jStat.randg(shape);\n  },\n\n  variance: function variance(shape, scale) {\n    if (shape <= 2)\n      return undefined;\n    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n  }\n});\n\n\n// extend kumaraswamy function with static methods\njStat.extend(jStat.kumaraswamy, {\n  pdf: function pdf(x, alpha, beta) {\n    if (x === 0 && alpha === 1)\n      return beta;\n    else if (x === 1 && beta === 1)\n      return alpha;\n    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *\n                    Math.log(x) + (beta - 1) *\n                    Math.log(1 - Math.pow(x, alpha)));\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    if (x < 0)\n      return 0;\n    else if (x > 1)\n      return 1;\n    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));\n  },\n\n  inv: function inv(p, alpha, beta) {\n    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n  },\n\n  mean : function(alpha, beta) {\n    return (beta * jStat.gammafn(1 + 1 / alpha) *\n            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));\n  },\n\n  median: function median(alpha, beta) {\n    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n  },\n\n  mode: function mode(alpha, beta) {\n    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n      return undefined;\n    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n  },\n\n  variance: function variance(/*alpha, beta*/) {\n    throw new Error('variance not yet implemented');\n    // TODO: complete this\n  }\n});\n\n\n\n// extend lognormal function with static methods\njStat.extend(jStat.lognormal, {\n  pdf: function pdf(x, mu, sigma) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n                    (2 * sigma * sigma));\n  },\n\n  cdf: function cdf(x, mu, sigma) {\n    if (x < 0)\n      return 0;\n    return 0.5 +\n        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n  },\n\n  inv: function(p, mu, sigma) {\n    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n  },\n\n  mean: function mean(mu, sigma) {\n    return Math.exp(mu + sigma * sigma / 2);\n  },\n\n  median: function median(mu/*, sigma*/) {\n    return Math.exp(mu);\n  },\n\n  mode: function mode(mu, sigma) {\n    return Math.exp(mu - sigma * sigma);\n  },\n\n  sample: function sample(mu, sigma) {\n    return Math.exp(jStat.randn() * sigma + mu);\n  },\n\n  variance: function variance(mu, sigma) {\n    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n  }\n});\n\n\n\n// extend noncentralt function with static methods\njStat.extend(jStat.noncentralt, {\n  pdf: function pdf(x, dof, ncp) {\n    var tol = 1e-14;\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.pdf(x, dof)\n\n    if (Math.abs(x) < tol) {  // different formula for x == 0\n      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -\n                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n    }\n\n    // formula for x != 0\n    return dof / x *\n        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -\n         jStat.noncentralt.cdf(x, dof, ncp));\n  },\n\n  cdf: function cdf(x, dof, ncp) {\n    var tol = 1e-14;\n    var min_iterations = 200;\n\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.cdf(x, dof);\n\n    // turn negative x into positive and flip result afterwards\n    var flip = false;\n    if (x < 0) {\n      flip = true;\n      ncp = -ncp;\n    }\n\n    var prob = jStat.normal.cdf(-ncp, 0, 1);\n    var value = tol + 1;\n    // use value at last two steps to determine convergence\n    var lastvalue = value;\n    var y = x * x / (x * x + dof);\n    var j = 0;\n    var p = Math.exp(-ncp * ncp / 2);\n    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -\n                     jStat.gammaln(3 / 2)) * ncp;\n    while (j < min_iterations || lastvalue > tol || value > tol) {\n      lastvalue = value;\n      if (j > 0) {\n        p *= (ncp * ncp) / (2 * j);\n        q *= (ncp * ncp) / (2 * (j + 1 / 2));\n      }\n      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +\n          q * jStat.beta.cdf(y, j+1, dof/2);\n      prob += 0.5 * value;\n      j++;\n    }\n\n    return flip ? (1 - prob) : prob;\n  }\n});\n\n\n// extend normal function with static methods\njStat.extend(jStat.normal, {\n  pdf: function pdf(x, mean, std) {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n  },\n\n  cdf: function cdf(x, mean, std) {\n    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n  },\n\n  inv: function(p, mean, std) {\n    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n  },\n\n  mean : function(mean/*, std*/) {\n    return mean;\n  },\n\n  median: function median(mean/*, std*/) {\n    return mean;\n  },\n\n  mode: function (mean/*, std*/) {\n    return mean;\n  },\n\n  sample: function sample(mean, std) {\n    return jStat.randn() * std + mean;\n  },\n\n  variance : function(mean, std) {\n    return std * std;\n  }\n});\n\n\n\n// extend pareto function with static methods\njStat.extend(jStat.pareto, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return 1 - Math.pow(scale / x, shape);\n  },\n\n  inv: function inv(p, scale, shape) {\n    return scale / Math.pow(1 - p, 1 / shape);\n  },\n\n  mean: function mean(scale, shape) {\n    if (shape <= 1)\n      return undefined;\n    return (shape * Math.pow(scale, shape)) / (shape - 1);\n  },\n\n  median: function median(scale, shape) {\n    return scale * (shape * Math.SQRT2);\n  },\n\n  mode: function mode(scale/*, shape*/) {\n    return scale;\n  },\n\n  variance : function(scale, shape) {\n    if (shape <= 2)\n      return undefined;\n    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));\n  }\n});\n\n\n\n// extend studentt function with static methods\njStat.extend(jStat.studentt, {\n  pdf: function pdf(x, dof) {\n    dof = dof > 1e100 ? 1e100 : dof;\n    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *\n        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    var dof2 = dof / 2;\n    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /\n                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n  },\n\n  inv: function(p, dof) {\n    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt(dof * (1 - x) / x);\n    return (p > 0.5) ? x : -x;\n  },\n\n  mean: function mean(dof) {\n    return (dof > 1) ? 0 : undefined;\n  },\n\n  median: function median(/*dof*/) {\n    return 0;\n  },\n\n  mode: function mode(/*dof*/) {\n    return 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n  },\n\n  variance: function variance(dof) {\n    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;\n  }\n});\n\n\n\n// extend weibull function with static methods\njStat.extend(jStat.weibull, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < 0 || scale < 0 || shape < 0)\n      return 0;\n    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n        Math.exp(-(Math.pow((x / scale), shape)));\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n  },\n\n  inv: function(p, scale, shape) {\n    return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n  },\n\n  mean : function(scale, shape) {\n    return scale * jStat.gammafn(1 + 1 / shape);\n  },\n\n  median: function median(scale, shape) {\n    return scale * Math.pow(Math.log(2), 1 / shape);\n  },\n\n  mode: function mode(scale, shape) {\n    if (shape <= 1)\n      return 0;\n    return scale * Math.pow((shape - 1) / shape, 1 / shape);\n  },\n\n  sample: function sample(scale, shape) {\n    return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n  },\n\n  variance: function variance(scale, shape) {\n    return scale * scale * jStat.gammafn(1 + 2 / shape) -\n        Math.pow(jStat.weibull.mean(scale, shape), 2);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.uniform, {\n  pdf: function pdf(x, a, b) {\n    return (x < a || x > b) ? 0 : 1 / (b - a);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (x - a) / (b - a);\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (p * (b - a));\n  },\n\n  mean: function mean(a, b) {\n    return 0.5 * (a + b);\n  },\n\n  median: function median(a, b) {\n    return jStat.mean(a, b);\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n  },\n\n  variance: function variance(a, b) {\n    return Math.pow(b - a, 2) / 12;\n  }\n});\n\n\n// Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\nfunction betinc(x, a, b, eps) {\n  var a0 = 0;\n  var b0 = 1;\n  var a1 = 1;\n  var b1 = 1;\n  var m9 = 0;\n  var a2 = 0;\n  var c9;\n\n  while (Math.abs((a1 - a2) / a1) > eps) {\n    a2 = a1;\n    c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n    a0 = a1 + c9 * a0;\n    b0 = b1 + c9 * b0;\n    m9 = m9 + 1;\n    c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n    a1 = a0 + c9 * a1;\n    b1 = b0 + c9 * b1;\n    a0 = a0 / b1;\n    b0 = b0 / b1;\n    a1 = a1 / b1;\n    b1 = 1;\n  }\n\n  return a1 / a;\n}\n\n\n// extend uniform function with static methods\njStat.extend(jStat.binomial, {\n  pdf: function pdf(k, n, p) {\n    return (p === 0 || p === 1) ?\n      ((n * p) === k ? 1 : 0) :\n      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n  },\n\n  cdf: function cdf(x, n, p) {\n    var betacdf;\n    var eps = 1e-10;\n\n    if (x < 0)\n      return 0;\n    if (x >= n)\n      return 1;\n    if (p < 0 || p > 1 || n <= 0)\n      return NaN;\n\n    x = Math.floor(x);\n    var z = p;\n    var a = x + 1;\n    var b = n - x;\n    var s = a + b;\n    var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) -\n                      jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n\n    if (z < (a + 1) / (s + 2))\n      betacdf = bt * betinc(z, a, b, eps);\n    else\n      betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n\n    return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.negbin, {\n  pdf: function pdf(k, r, p) {\n    if (k !== k >>> 0)\n      return false;\n    if (k < 0)\n      return 0;\n    return jStat.combination(k + r - 1, r - 1) *\n        Math.pow(1 - p, k) * Math.pow(p, r);\n  },\n\n  cdf: function cdf(x, r, p) {\n    var sum = 0,\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sum += jStat.negbin.pdf(k, r, p);\n    }\n    return sum;\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.hypgeom, {\n  pdf: function pdf(k, N, m, n) {\n    // Hypergeometric PDF.\n\n    // A simplification of the CDF algorithm below.\n\n    // k = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(k !== k | 0) {\n      return false;\n    } else if(k < 0 || k < m - (N - n)) {\n      // It's impossible to have this few successes drawn.\n      return 0;\n    } else if(k > n || k > m) {\n      // It's impossible to have this many successes drawn.\n      return 0;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return jStat.hypgeom.pdf(m - k, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.pdf(k, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate product to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < k; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledPDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          scaledPDF *= 1 - (m / (N - samplesDone));\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledPDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledPDF));\n    }\n  },\n\n  cdf: function cdf(x, N, m, n) {\n    // Hypergeometric CDF.\n\n    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n    // and comes from his hypergeometric test calculator at\n    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n    // x = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(x < 0 || x < m - (N - n)) {\n      // It's impossible to have this few successes drawn or fewer.\n      return 0;\n    } else if(x >= n || x >= m) {\n      // We will always have this many successes or fewer.\n      return 1;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.cdf(x, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate sum to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // Holds the intermediate, scaled total CDF.\n      var scaledCDF = 1;\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < x; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledCDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          var factor = 1 - (m / (N - samplesDone));\n\n          scaledPDF *= factor;\n          scaledCDF *= factor;\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n        // Add to the CDF answer.\n        scaledCDF += scaledPDF;\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledCDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledCDF));\n    }\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.poisson, {\n  pdf: function pdf(k, l) {\n    if (l < 0 || (k % 1) !== 0 || k < 0) {\n      return 0;\n    }\n\n    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n  },\n\n  cdf: function cdf(x, l) {\n    var sumarr = [],\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sumarr.push(jStat.poisson.pdf(k, l));\n    }\n    return jStat.sum(sumarr);\n  },\n\n  mean : function(l) {\n    return l;\n  },\n\n  variance : function(l) {\n    return l;\n  },\n\n  sampleSmall: function sampleSmall(l) {\n    var p = 1, k = 0, L = Math.exp(-l);\n    do {\n      k++;\n      p *= jStat._random_fn();\n    } while (p > L);\n    return k - 1;\n  },\n\n  sampleLarge: function sampleLarge(l) {\n    var lam = l;\n    var k;\n    var U, V, slam, loglam, a, b, invalpha, vr, us;\n\n    slam = Math.sqrt(lam);\n    loglam = Math.log(lam);\n    b = 0.931 + 2.53 * slam;\n    a = -0.059 + 0.02483 * b;\n    invalpha = 1.1239 + 1.1328 / (b - 3.4);\n    vr = 0.9277 - 3.6224 / (b - 2);\n\n    while (1) {\n      U = Math.random() - 0.5;\n      V = Math.random();\n      us = 0.5 - Math.abs(U);\n      k = Math.floor((2 * a / us + b) * U + lam + 0.43);\n      if ((us >= 0.07) && (V <= vr)) {\n          return k;\n      }\n      if ((k < 0) || ((us < 0.013) && (V > us))) {\n          continue;\n      }\n      /* log(V) == log(0.0) ok here */\n      /* if U==0.0 so that us==0.0, log is ok since always returns */\n      if ((Math.log(V) + Math.log(invalpha) - Math.log(a / (us * us) + b)) <= (-lam + k * loglam - jStat.loggam(k + 1))) {\n          return k;\n      }\n    }\n  },\n\n  sample: function sample(l) {\n    if (l < 10)\n      return this.sampleSmall(l);\n    else\n      return this.sampleLarge(l);\n  }\n});\n\n// extend triangular function with static methods\njStat.extend(jStat.triangular, {\n  pdf: function pdf(x, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (x < a || x > b) {\n        return 0;\n      } else if (x < c) {\n          return (2 * (x - a)) / ((b - a) * (c - a));\n      } else if (x === c) {\n          return (2 / (b - a));\n      } else { // x > c\n          return (2 * (b - x)) / ((b - a) * (b - c));\n      }\n    }\n  },\n\n  cdf: function cdf(x, a, b, c) {\n    if (b <= a || c < a || c > b)\n      return NaN;\n    if (x <= a)\n      return 0;\n    else if (x >= b)\n      return 1;\n    if (x <= c)\n      return Math.pow(x - a, 2) / ((b - a) * (c - a));\n    else // x > c\n      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n  },\n\n  inv: function inv(p, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (p <= ((c - a) / (b - a))) {\n        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n      } else { // p > ((c - a) / (b - a))\n        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));\n      }\n    }\n  },\n\n  mean: function mean(a, b, c) {\n    return (a + b + c) / 3;\n  },\n\n  median: function median(a, b, c) {\n    if (c <= (a + b) / 2) {\n      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n    } else if (c > (a + b) / 2) {\n      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n    }\n  },\n\n  mode: function mode(a, b, c) {\n    return c;\n  },\n\n  sample: function sample(a, b, c) {\n    var u = jStat._random_fn();\n    if (u < ((c - a) / (b - a)))\n      return a + Math.sqrt(u * (b - a) * (c - a))\n    return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n  },\n\n  variance: function variance(a, b, c) {\n    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n  }\n});\n\n\n// extend arcsine function with static methods\njStat.extend(jStat.arcsine, {\n  pdf: function pdf(x, a, b) {\n    if (b <= a) return NaN;\n\n    return (x <= a || x >= b) ? 0 :\n      (2 / Math.PI) *\n        Math.pow(Math.pow(b - a, 2) -\n                  Math.pow(2 * x - a - b, 2), -0.5);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n  },\n\n  mean: function mean(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  median: function median(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return ((a + b) / 2) + ((b - a) / 2) *\n      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n  },\n\n  variance: function variance(a, b) {\n    if (b <= a) return NaN;\n    return Math.pow(b - a, 2) / 8;\n  }\n});\n\n\nfunction laplaceSign(x) { return x / Math.abs(x); }\n\njStat.extend(jStat.laplace, {\n  pdf: function pdf(x, mu, b) {\n    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);\n  },\n\n  cdf: function cdf(x, mu, b) {\n    if (b <= 0) { return 0; }\n\n    if(x < mu) {\n      return 0.5 * Math.exp((x - mu) / b);\n    } else {\n      return 1 - 0.5 * Math.exp(- (x - mu) / b);\n    }\n  },\n\n  mean: function(mu/*, b*/) {\n    return mu;\n  },\n\n  median: function(mu/*, b*/) {\n    return mu;\n  },\n\n  mode: function(mu/*, b*/) {\n    return mu;\n  },\n\n  variance: function(mu, b) {\n    return 2 * b * b;\n  },\n\n  sample: function sample(mu, b) {\n    var u = jStat._random_fn() - 0.5;\n\n    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));\n  }\n});\n\nfunction tukeyWprob(w, rr, cc) {\n  var nleg = 12;\n  var ihalf = 6;\n\n  var C1 = -30;\n  var C2 = -50;\n  var C3 = 60;\n  var bb   = 8;\n  var wlar = 3;\n  var wincr1 = 2;\n  var wincr2 = 3;\n  var xleg = [\n    0.981560634246719250690549090149,\n    0.904117256370474856678465866119,\n    0.769902674194304687036893833213,\n    0.587317954286617447296702418941,\n    0.367831498998180193752691536644,\n    0.125233408511468915472441369464\n  ];\n  var aleg = [\n    0.047175336386511827194615961485,\n    0.106939325995318430960254718194,\n    0.160078328543346226334652529543,\n    0.203167426723065921749064455810,\n    0.233492536538354808760849898925,\n    0.249147045813402785000562436043\n  ];\n\n  var qsqz = w * 0.5;\n\n  // if w >= 16 then the integral lower bound (occurs for c=20)\n  // is 0.99999999999995 so return a value of 1.\n\n  if (qsqz >= bb)\n    return 1.0;\n\n  // find (f(w/2) - 1) ^ cc\n  // (first term in integral of hartley's form).\n\n  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n  // if pr_w ^ cc < 2e-22 then set pr_w = 0\n  if (pr_w >= Math.exp(C2 / cc))\n    pr_w = Math.pow(pr_w, cc);\n  else\n    pr_w = 0.0;\n\n  // if w is large then the second component of the\n  // integral is small, so fewer intervals are needed.\n\n  var wincr;\n  if (w > wlar)\n    wincr = wincr1;\n  else\n    wincr = wincr2;\n\n  // find the integral of second term of hartley's form\n  // for the integral of the range for equal-length\n  // intervals using legendre quadrature.  limits of\n  // integration are from (w/2, 8).  two or three\n  // equal-length intervals are used.\n\n  // blb and bub are lower and upper limits of integration.\n\n  var blb = qsqz;\n  var binc = (bb - qsqz) / wincr;\n  var bub = blb + binc;\n  var einsum = 0.0;\n\n  // integrate over each interval\n\n  var cc1 = cc - 1.0;\n  for (var wi = 1; wi <= wincr; wi++) {\n    var elsum = 0.0;\n    var a = 0.5 * (bub + blb);\n\n    // legendre quadrature with order = nleg\n\n    var b = 0.5 * (bub - blb);\n\n    for (var jj = 1; jj <= nleg; jj++) {\n      var j, xx;\n      if (ihalf < jj) {\n        j = (nleg - jj) + 1;\n        xx = xleg[j-1];\n      } else {\n        j = jj;\n        xx = -xleg[j-1];\n      }\n      var c = b * xx;\n      var ac = a + c;\n\n      // if exp(-qexpo/2) < 9e-14,\n      // then doesn't contribute to integral\n\n      var qexpo = ac * ac;\n      if (qexpo > C3)\n        break;\n\n      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n      // if rinsum ^ (cc-1) < 9e-14,\n      // then doesn't contribute to integral\n\n      var rinsum = (pplus * 0.5) - (pminus * 0.5);\n      if (rinsum >= Math.exp(C1 / cc1)) {\n        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  // if pr_w ^ rr < 9e-14, then return 0\n  pr_w += einsum;\n  if (pr_w <= Math.exp(C1 / rr))\n    return 0;\n\n  pr_w = Math.pow(pr_w, rr);\n  if (pr_w >= 1) // 1 was iMax was eps\n    return 1;\n  return pr_w;\n}\n\nfunction tukeyQinv(p, c, v) {\n  var p0 = 0.322232421088;\n  var q0 = 0.993484626060e-01;\n  var p1 = -1.0;\n  var q1 = 0.588581570495;\n  var p2 = -0.342242088547;\n  var q2 = 0.531103462366;\n  var p3 = -0.204231210125;\n  var q3 = 0.103537752850;\n  var p4 = -0.453642210148e-04;\n  var q4 = 0.38560700634e-02;\n  var c1 = 0.8832;\n  var c2 = 0.2368;\n  var c3 = 1.214;\n  var c4 = 1.208;\n  var c5 = 1.4142;\n  var vmax = 120.0;\n\n  var ps = 0.5 - 0.5 * p;\n  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)\n     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  var q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * Math.log(c - 1.0) + c5);\n}\n\njStat.extend(jStat.tukey, {\n  cdf: function cdf(q, nmeans, df) {\n    // Identical implementation as the R ptukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var nlegq = 16;\n    var ihalfq = 8;\n\n    var eps1 = -30.0;\n    var eps2 = 1.0e-14;\n    var dhaf  = 100.0;\n    var dquar = 800.0;\n    var deigh = 5000.0;\n    var dlarg = 25000.0;\n    var ulen1 = 1.0;\n    var ulen2 = 0.5;\n    var ulen3 = 0.25;\n    var ulen4 = 0.125;\n    var xlegq = [\n      0.989400934991649932596154173450,\n      0.944575023073232576077988415535,\n      0.865631202387831743880467897712,\n      0.755404408355003033895101194847,\n      0.617876244402643748446671764049,\n      0.458016777657227386342419442984,\n      0.281603550779258913230460501460,\n      0.950125098376374401853193354250e-1\n    ];\n    var alegq = [\n      0.271524594117540948517805724560e-1,\n      0.622535239386478928628438369944e-1,\n      0.951585116824927848099251076022e-1,\n      0.124628971255533872052476282192,\n      0.149595988816576732081501730547,\n      0.169156519395002538189312079030,\n      0.182603415044923588866763667969,\n      0.189450610455068496285396723208\n    ];\n\n    if (q <= 0)\n      return 0;\n\n    // df must be > 1\n    // there must be at least two values\n\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (!Number.isFinite(q))\n      return 1;\n\n    if (df > dlarg)\n      return tukeyWprob(q, rr, cc);\n\n    // calculate leading constant\n\n    var f2 = df * 0.5;\n    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);\n    var f21 = f2 - 1.0;\n\n    // integral is divided into unit, half-unit, quarter-unit, or\n    // eighth-unit length intervals depending on the value of the\n    // degrees of freedom.\n\n    var ff4 = df * 0.25;\n    var ulen;\n    if      (df <= dhaf)  ulen = ulen1;\n    else if (df <= dquar) ulen = ulen2;\n    else if (df <= deigh) ulen = ulen3;\n    else                  ulen = ulen4;\n\n    f2lf += Math.log(ulen);\n\n    // integrate over each subinterval\n\n    var ans = 0.0;\n\n    for (var i = 1; i <= 50; i++) {\n      var otsum = 0.0;\n\n      // legendre quadrature with order = nlegq\n      // nodes (stored in xlegq) are symmetric around zero.\n\n      var twa1 = (2 * i - 1) * ulen;\n\n      for (var jj = 1; jj <= nlegq; jj++) {\n        var j, t1;\n        if (ihalfq < jj) {\n          j = jj - ihalfq - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))\n              - (((xlegq[j] * ulen) + twa1) * ff4);\n        } else {\n          j = jj - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))\n              + (((xlegq[j] * ulen) - twa1) * ff4);\n        }\n\n        // if exp(t1) < 9e-14, then doesn't contribute to integral\n        var qsqz;\n        if (t1 >= eps1) {\n          if (ihalfq < jj) {\n            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);\n          } else {\n            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);\n          }\n\n          // call wprob to find integral of range portion\n\n          var wprb = tukeyWprob(qsqz, rr, cc);\n          var rotsum = (wprb * alegq[j]) * Math.exp(t1);\n          otsum += rotsum;\n        }\n        // end legendre integral for interval i\n        // L200:\n      }\n\n      // if integral for interval i < 1e-14, then stop.\n      // However, in order to avoid small area under left tail,\n      // at least  1 / ulen  intervals are calculated.\n      if (i * ulen >= 1.0 && otsum <= eps2)\n        break;\n\n      // end of interval i\n      // L330:\n\n      ans += otsum;\n    }\n\n    if (otsum > eps2) { // not converged\n      throw new Error('tukey.cdf failed to converge');\n    }\n    if (ans > 1)\n      ans = 1;\n    return ans;\n  },\n\n  inv: function(p, nmeans, df) {\n    // Identical implementation as the R qtukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var eps = 0.0001;\n    var maxiter = 50;\n\n    // df must be > 1 ; there must be at least two values\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (p < 0 || p > 1) return NaN;\n    if (p === 0) return 0;\n    if (p === 1) return Infinity;\n\n    // Initial value\n\n    var x0 = tukeyQinv(p, cc, df);\n\n    // Find prob(value < x0)\n\n    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n    // Find the second iterate and prob(value < x1).\n    // If the first iterate has probability value\n    // exceeding p then second iterate is 1 less than\n    // first iterate; otherwise it is 1 greater.\n\n    var x1;\n    if (valx0 > 0.0)\n      x1 = Math.max(0.0, x0 - 1.0);\n    else\n      x1 = x0 + 1.0;\n    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n    // Find new iterate\n\n    var ans;\n    for(var iter = 1; iter < maxiter; iter++) {\n      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));\n      valx0 = valx1;\n\n      // New iterate must be >= 0\n\n      x0 = x1;\n      if (ans < 0.0) {\n        ans = 0.0;\n        valx1 = -p;\n      }\n      // Find prob(value < new iterate)\n\n      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n      x1 = ans;\n\n      // If the difference between two successive\n      // iterates is less than eps, stop\n\n      var xabs = Math.abs(x1 - x0);\n      if (xabs < eps)\n        return ans;\n    }\n\n    throw new Error('tukey.inv failed to converge');\n  }\n});\n\n}(jStat, Math));\n/* Provides functions for the solution of linear system of equations, integration, extrapolation,\n * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n(function(jStat, Math) {\n\nvar push = Array.prototype.push;\nvar isArray = jStat.utils.isArray;\n\nfunction isUsable(arg) {\n  return isArray(arg) || arg instanceof jStat;\n}\n\njStat.extend({\n\n  // add a vector/matrix to a vector/matrix or scalar\n  add: function add(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value + arg[row][col];\n      });\n    }\n    return jStat.map(arr, function(value) { return value + arg; });\n  },\n\n  // subtract a vector or scalar from the vector\n  subtract: function subtract(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value - arg[row][col] || 0;\n      });\n    }\n    return jStat.map(arr, function(value) { return value - arg; });\n  },\n\n  // matrix division\n  divide: function divide(arr, arg) {\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.multiply(arr, jStat.inv(arg));\n    }\n    return jStat.map(arr, function(value) { return value / arg; });\n  },\n\n  // matrix multiplication\n  multiply: function multiply(arr, arg) {\n    var row, col, nrescols, sum, nrow, ncol, res, rescols;\n    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n    if (arr.length === undefined && arg.length === undefined) {\n      return arr * arg;\n    }\n    nrow = arr.length,\n    ncol = arr[0].length,\n    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),\n    rescols = 0;\n    if (isUsable(arg)) {\n      for (; rescols < nrescols; rescols++) {\n        for (row = 0; row < nrow; row++) {\n          sum = 0;\n          for (col = 0; col < ncol; col++)\n          sum += arr[row][col] * arg[col][rescols];\n          res[row][rescols] = sum;\n        }\n      }\n      return (nrow === 1 && rescols === 1) ? res[0][0] : res;\n    }\n    return jStat.map(arr, function(value) { return value * arg; });\n  },\n\n  // outer([1,2,3],[4,5,6])\n  // ===\n  // [[1],[2],[3]] times [[4,5,6]]\n  // ->\n  // [[4,5,6],[8,10,12],[12,15,18]]\n  outer:function outer(A, B) {\n    return jStat.multiply(A.map(function(t){ return [t] }), [B]);\n  },\n\n\n  // Returns the dot product of two matricies\n  dot: function dot(arr, arg) {\n    if (!isUsable(arr[0])) arr = [ arr ];\n    if (!isUsable(arg[0])) arg = [ arg ];\n    // convert column to row vector\n    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,\n    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,\n    res = [],\n    row = 0,\n    nrow = left.length,\n    ncol = left[0].length,\n    sum, col;\n    for (; row < nrow; row++) {\n      res[row] = [];\n      sum = 0;\n      for (col = 0; col < ncol; col++)\n      sum += left[row][col] * right[row][col];\n      res[row] = sum;\n    }\n    return (res.length === 1) ? res[0] : res;\n  },\n\n  // raise every element by a scalar\n  pow: function pow(arr, arg) {\n    return jStat.map(arr, function(value) { return Math.pow(value, arg); });\n  },\n\n  // exponentiate every element\n  exp: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.exp(value); });\n  },\n\n  // generate the natural log of every element\n  log: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.log(value); });\n  },\n\n  // generate the absolute values of the vector\n  abs: function abs(arr) {\n    return jStat.map(arr, function(value) { return Math.abs(value); });\n  },\n\n  // computes the p-norm of the vector\n  // In the case that a matrix is passed, uses the first row as the vector\n  norm: function norm(arr, p) {\n    var nnorm = 0,\n    i = 0;\n    // check the p-value of the norm, and set for most common case\n    if (isNaN(p)) p = 2;\n    // check if multi-dimensional array, and make vector correction\n    if (isUsable(arr[0])) arr = arr[0];\n    // vector norm\n    for (; i < arr.length; i++) {\n      nnorm += Math.pow(Math.abs(arr[i]), p);\n    }\n    return Math.pow(nnorm, 1 / p);\n  },\n\n  // computes the angle between two vectors in rads\n  // In case a matrix is passed, this uses the first row as the vector\n  angle: function angle(arr, arg) {\n    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n  },\n\n  // augment one matrix by another\n  // Note: this function returns a matrix, not a jStat object\n  aug: function aug(a, b) {\n    var newarr = [];\n    var i;\n    for (i = 0; i < a.length; i++) {\n      newarr.push(a[i].slice());\n    }\n    for (i = 0; i < newarr.length; i++) {\n      push.apply(newarr[i], b[i]);\n    }\n    return newarr;\n  },\n\n  // The inv() function calculates the inverse of a matrix\n  // Create the inverse by augmenting the matrix by the identity matrix of the\n  // appropriate size, and then use G-J elimination on the augmented matrix.\n  inv: function inv(a) {\n    var rows = a.length;\n    var cols = a[0].length;\n    var b = jStat.identity(rows, cols);\n    var c = jStat.gauss_jordan(a, b);\n    var result = [];\n    var i = 0;\n    var j;\n\n    //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n    for (; i < rows; i++) {\n      result[i] = [];\n      for (j = cols; j < c[0].length; j++)\n        result[i][j - cols] = c[i][j];\n    }\n    return result;\n  },\n\n  // calculate the determinant of a matrix\n  det: function det(a) {\n    if (a.length === 2) {\n      return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n    }\n\n    var determinant = 0;\n    for (var i = 0; i < a.length; i++) {\n      // build a sub matrix without column `i`\n      var submatrix = [];\n      for (var row = 1; row < a.length; row++) {\n        submatrix[row - 1] = [];\n        for (var col = 0; col < a.length; col++) {\n          if (col < i) {\n            submatrix[row - 1][col] = a[row][col];\n          } else if (col > i) {\n            submatrix[row - 1][col - 1] = a[row][col];\n          }\n        }\n      }\n\n      // alternate between + and - between determinants\n      var sign = i % 2 ? -1 : 1;\n      determinant += det(submatrix) * a[0][i] * sign;\n    }\n\n    return determinant\n  },\n\n  gauss_elimination: function gauss_elimination(a, b) {\n    var i = 0,\n    j = 0,\n    n = a.length,\n    m = a[0].length,\n    factor = 1,\n    sum = 0,\n    x = [],\n    maug, pivot, temp, k;\n    a = jStat.aug(a, b);\n    maug = a[0].length;\n    for(i = 0; i < n; i++) {\n      pivot = a[i][i];\n      j = i;\n      for (k = i + 1; k < m; k++) {\n        if (pivot < Math.abs(a[k][i])) {\n          pivot = a[k][i];\n          j = k;\n        }\n      }\n      if (j != i) {\n        for(k = 0; k < maug; k++) {\n          temp = a[i][k];\n          a[i][k] = a[j][k];\n          a[j][k] = temp;\n        }\n      }\n      for (j = i + 1; j < n; j++) {\n        factor = a[j][i] / a[i][i];\n        for(k = i; k < maug; k++) {\n          a[j][k] = a[j][k] - factor * a[i][k];\n        }\n      }\n    }\n    for (i = n - 1; i >= 0; i--) {\n      sum = 0;\n      for (j = i + 1; j<= n - 1; j++) {\n        sum = sum + x[j] * a[i][j];\n      }\n      x[i] =(a[i][maug - 1] - sum) / a[i][i];\n    }\n    return x;\n  },\n\n  gauss_jordan: function gauss_jordan(a, b) {\n    var m = jStat.aug(a, b);\n    var h = m.length;\n    var w = m[0].length;\n    var c = 0;\n    var x, y, y2;\n    // find max pivot\n    for (y = 0; y < h; y++) {\n      var maxrow = y;\n      for (y2 = y+1; y2 < h; y2++) {\n        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n          maxrow = y2;\n      }\n      var tmp = m[y];\n      m[y] = m[maxrow];\n      m[maxrow] = tmp\n      for (y2 = y+1; y2 < h; y2++) {\n        c = m[y2][y] / m[y][y];\n        for (x = y; x < w; x++) {\n          m[y2][x] -= m[y][x] * c;\n        }\n      }\n    }\n    // backsubstitute\n    for (y = h-1; y >= 0; y--) {\n      c = m[y][y];\n      for (y2 = 0; y2 < y; y2++) {\n        for (x = w-1; x > y-1; x--) {\n          m[y2][x] -= m[y][x] * m[y2][y] / c;\n        }\n      }\n      m[y][y] /= c;\n      for (x = h; x < w; x++) {\n        m[y][x] /= c;\n      }\n    }\n    return m;\n  },\n\n  // solve equation\n  // Ax=b\n  // A is upper triangular matrix\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[1,2,3]\n  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n  // if you use matrix style\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[[1],[2],[3]]\n  // will return [[2.666],[0.1666],[1.666]]\n  triaUpSolve: function triaUpSolve(A, b) {\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n    var matrix_mode = false;\n\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size - 1, -1, -1).forEach(function(i) {\n      parts = jStat.arange(i + 1, size).map(function(j) {\n        return x[j] * A[i][j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    });\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n  triaLowSolve: function triaLowSolve(A, b) {\n    // like to triaUpSolve but A is lower triangular matrix\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n\n    var matrix_mode=false;\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(j) {\n        return A[i][j] * x[j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    })\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n\n  // A -> [L,U]\n  // A=LU\n  // L is lower triangular matrix\n  // U is upper triangular matrix\n  lu: function lu(A) {\n    var size = A.length;\n    //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n    var L = jStat.identity(size);\n    var R = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(t) {\n      R[0][t] = A[0][t];\n    });\n    jStat.arange(1, size).forEach(function(l) {\n      jStat.arange(l).forEach(function(i) {\n        parts = jStat.arange(i).map(function(jj) {\n          return L[l][jj] * R[jj][i];\n        });\n        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n      });\n      jStat.arange(l, size).forEach(function(j) {\n        parts = jStat.arange(l).map(function(jj) {\n          return L[l][jj] * R[jj][j];\n        });\n        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n      });\n    });\n    return [L, R];\n  },\n\n  // A -> T\n  // A=TT'\n  // T is lower triangular matrix\n  cholesky: function cholesky(A) {\n    var size = A.length;\n    var T = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(t) {\n        return Math.pow(T[i][t],2);\n      });\n      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n      jStat.arange(i + 1, size).forEach(function(j) {\n        parts = jStat.arange(i).map(function(t) {\n          return T[i][t] * T[j][t];\n        });\n        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n      });\n    });\n    return T;\n  },\n\n\n  gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n    var i = 0;\n    var j = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n    c = jStat.multiply(jStat.inv(d), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  gauss_seidel: function gauss_seidel(a, b, x, r) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i = i + 1;\n    }\n    return xk;\n  },\n\n  SOR: function SOR(a, b, x, r, w) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),\n                       jStat.subtract(jStat.multiply(d, 1 - w),\n                                      jStat.multiply(u, w)));\n    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,\n        jStat.multiply(l, w))), b), w);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  householder: function householder(a) {\n    var m = a.length;\n    var n = a[0].length;\n    var i = 0;\n    var w = [];\n    var p = [];\n    var alpha, r, k, j, factor;\n    for (; i < m - 1; i++) {\n      alpha = 0;\n      for (j = i + 1; j < n; j++)\n      alpha += (a[j][i] * a[j][i]);\n      factor = (a[i + 1][i] > 0) ? -1 : 1;\n      alpha = factor * Math.sqrt(alpha);\n      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));\n      w = jStat.zeros(m, 1);\n      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n      p = jStat.subtract(jStat.identity(m, n),\n          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n      a = jStat.multiply(p, jStat.multiply(a, p));\n    }\n    return a;\n  },\n\n  // A -> [Q,R]\n  // Q is orthogonal matrix\n  // R is upper triangular\n  QR: (function() {\n    // x -> Q\n    // find a orthogonal matrix Q st.\n    // Qx=y\n    // y is [||x||,0,0,...]\n\n    // quick ref\n    var sum   = jStat.sum;\n    var range = jStat.arange;\n\n    function qr2(x) {\n      // quick impletation\n      // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n      var n = x.length;\n      var p = x[0].length;\n\n      var r = jStat.zeros(p, p);\n      x = jStat.copy(x);\n\n      var i,j,k;\n      for(j = 0; j < p; j++){\n        r[j][j] = Math.sqrt(sum(range(n).map(function(i){\n          return x[i][j] * x[i][j];\n        })));\n        for(i = 0; i < n; i++){\n          x[i][j] = x[i][j] / r[j][j];\n        }\n        for(k = j+1; k < p; k++){\n          r[j][k] = sum(range(n).map(function(i){\n            return x[i][j] * x[i][k];\n          }));\n          for(i = 0; i < n; i++){\n            x[i][k] = x[i][k] - x[i][j]*r[j][k];\n          }\n        }\n      }\n      return [x, r];\n    }\n\n    return qr2;\n  }()),\n\n  lstsq: (function() {\n    // solve least squard problem for Ax=b as QR decomposition way if b is\n    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n    function R_I(A) {\n      A = jStat.copy(A);\n      var size = A.length;\n      var I = jStat.identity(size);\n      jStat.arange(size - 1, -1, -1).forEach(function(i) {\n        jStat.sliceAssign(\n            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n        jStat.sliceAssign(\n            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n        jStat.arange(i).forEach(function(j) {\n          var c = jStat.multiply(A[j][i], -1);\n          var Aj = jStat.slice(A, { row: j });\n          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n          var Ij = jStat.slice(I, { row: j });\n          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n        })\n      });\n      return I;\n    }\n\n    function qr_solve(A, b){\n      var array_mode = false;\n      if (b[0].length === undefined) {\n        // [c1,c2,c3] mode\n        b = b.map(function(x){ return [x] });\n        array_mode = true;\n      }\n      var QR = jStat.QR(A);\n      var Q = QR[0];\n      var R = QR[1];\n      var attrs = A[0].length;\n      var Q1 = jStat.slice(Q,{col:{end:attrs}});\n      var R1 = jStat.slice(R,{row:{end:attrs}});\n      var RI = R_I(R1);\n      var Q2 = jStat.transpose(Q1);\n\n      if(Q2[0].length === undefined){\n        Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n      var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n      if(x.length === undefined){\n        x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n\n      if (array_mode)\n        return x.map(function(i){ return i[0] });\n      return x;\n    }\n\n    return qr_solve;\n  }()),\n\n  jacobi: function jacobi(a) {\n    var condition = 1;\n    var n = a.length;\n    var e = jStat.identity(n, n);\n    var ev = [];\n    var b, i, j, p, q, maxim, theta, s;\n    // condition === 1 only if tolerance is not reached\n    while (condition === 1) {\n      maxim = a[0][1];\n      p = 0;\n      q = 1;\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i != j) {\n            if (maxim < Math.abs(a[i][j])) {\n              maxim = Math.abs(a[i][j]);\n              p = i;\n              q = j;\n            }\n          }\n        }\n      }\n      if (a[p][p] === a[q][q])\n        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;\n      else\n        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n      s = jStat.identity(n, n);\n      s[p][p] = Math.cos(theta);\n      s[p][q] = -Math.sin(theta);\n      s[q][p] = Math.sin(theta);\n      s[q][q] = Math.cos(theta);\n      // eigen vector matrix\n      e = jStat.multiply(e, s);\n      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n      a = b;\n      condition = 0;\n      for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n          if (i != j && Math.abs(a[i][j]) > 0.001) {\n            condition = 1;\n          }\n        }\n      }\n    }\n    for (i = 0; i < n; i++) ev.push(a[i][i]);\n    //returns both the eigenvalue and eigenmatrix\n    return [e, ev];\n  },\n\n  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n    var k1, k2, u_j1, k3, k4;\n    if (order === 2) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h, u_j + k1);\n        u_j1 = u_j + (k1 + k2) / 2;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    if (order === 4) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n        k4 = h * f(t_j +h, u_j + k3);\n        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    return u_j;\n  },\n\n  romberg: function romberg(f, a, b, order) {\n    var i = 0;\n    var h = (b - a) / 2;\n    var x = [];\n    var h1 = [];\n    var g = [];\n    var m, a1, j, k, I;\n    while (i < order / 2) {\n      I = f(a);\n      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n      m = x.length;\n      for (j = 1; j < m - 1; j++) {\n        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);\n      }\n      I = (h / 3) * (I + f(b));\n      g[i] = I;\n      h /= 2;\n      i++;\n    }\n    a1 = g.length;\n    m = 1;\n    while (a1 !== 1) {\n      for (j = 0; j < a1 - 1; j++)\n      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a1 = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  richardson: function richardson(X, f, x, h) {\n    function pos(X, x) {\n      var i = 0;\n      var n = X.length;\n      var p;\n      for (; i < n; i++)\n        if (X[i] === x) p = i;\n      return p;\n    }\n    var h_min = Math.abs(x - X[pos(X, x) + 1]);\n    var i = 0;\n    var g = [];\n    var h1 = [];\n    var y1, y2, m, a, j;\n    while (h >= h_min) {\n      y1 = pos(X, x + h);\n      y2 = pos(X, x);\n      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n      h /= 2;\n      i++;\n    }\n    a = g.length;\n    m = 1;\n    while (a != 1) {\n      for (j = 0; j < a - 1; j++)\n        h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  simpson: function simpson(f, a, b, n) {\n    var h = (b - a) / n;\n    var I = f(a);\n    var x = [];\n    var j = a;\n    var k = 0;\n    var i = 1;\n    var m;\n    for (; j <= b; j = j + h, k++)\n      x[k] = j;\n    m = x.length;\n    for (; i < m - 1; i++) {\n      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);\n    }\n    return (h / 3) * (I + f(b));\n  },\n\n  hermite: function hermite(X, F, dF, value) {\n    var n = X.length;\n    var p = 0;\n    var i = 0;\n    var l = [];\n    var dl = [];\n    var A = [];\n    var B = [];\n    var j;\n    for (; i < n; i++) {\n      l[i] = 1;\n      for (j = 0; j < n; j++) {\n        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n      }\n      dl[i] = 0;\n      for (j = 0; j < n; j++) {\n        if (i != j) dl[i] += 1 / (X [i] - X[j]);\n      }\n      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n      B[i] = (value - X[i]) * (l[i] * l[i]);\n      p += (A[i] * F[i] + B[i] * dF[i]);\n    }\n    return p;\n  },\n\n  lagrange: function lagrange(X, F, value) {\n    var p = 0;\n    var i = 0;\n    var j, l;\n    var n = X.length;\n    for (; i < n; i++) {\n      l = F[i];\n      for (j = 0; j < n; j++) {\n        // calculating the lagrange polynomial L_i\n        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n      }\n      // adding the lagrange polynomials found above\n      p += l;\n    }\n    return p;\n  },\n\n  cubic_spline: function cubic_spline(X, F, value) {\n    var n = X.length;\n    var i = 0, j;\n    var A = [];\n    var B = [];\n    var alpha = [];\n    var c = [];\n    var h = [];\n    var b = [];\n    var d = [];\n    for (; i < n - 1; i++)\n      h[i] = X[i + 1] - X[i];\n    alpha[0] = 0;\n    for (i = 1; i < n - 1; i++) {\n      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -\n          (3 / h[i-1]) * (F[i] - F[i-1]);\n    }\n    for (i = 1; i < n - 1; i++) {\n      A[i] = [];\n      B[i] = [];\n      A[i][i-1] = h[i-1];\n      A[i][i] = 2 * (h[i - 1] + h[i]);\n      A[i][i+1] = h[i];\n      B[i][0] = alpha[i];\n    }\n    c = jStat.multiply(jStat.inv(A), B);\n    for (j = 0; j < n - 1; j++) {\n      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n    }\n    for (j = 0; j < n; j++) {\n      if (X[j] > value) break;\n    }\n    j -= 1;\n    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *\n        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n  },\n\n  gauss_quadrature: function gauss_quadrature() {\n    throw new Error('gauss_quadrature not yet implemented');\n  },\n\n  PCA: function PCA(X) {\n    var m = X.length;\n    var n = X[0].length;\n    var i = 0;\n    var j, temp1;\n    var u = [];\n    var D = [];\n    var result = [];\n    var temp2 = [];\n    var Y = [];\n    var Bt = [];\n    var B = [];\n    var C = [];\n    var V = [];\n    var Vt = [];\n    for (i = 0; i < m; i++) {\n      u[i] = jStat.sum(X[i]) / n;\n    }\n    for (i = 0; i < n; i++) {\n      B[i] = [];\n      for(j = 0; j < m; j++) {\n        B[i][j] = X[j][i] - u[j];\n      }\n    }\n    B = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      C[i] = [];\n      for (j = 0; j < m; j++) {\n        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);\n      }\n    }\n    result = jStat.jacobi(C);\n    V = result[0];\n    D = result[1];\n    Vt = jStat.transpose(V);\n    for (i = 0; i < D.length; i++) {\n      for (j = i; j < D.length; j++) {\n        if(D[i] < D[j])  {\n          temp1 = D[i];\n          D[i] = D[j];\n          D[j] = temp1;\n          temp2 = Vt[i];\n          Vt[i] = Vt[j];\n          Vt[j] = temp2;\n        }\n      }\n    }\n    Bt = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      Y[i] = [];\n      for (j = 0; j < Bt.length; j++) {\n        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n      }\n    }\n    return [X, D, Vt, Y];\n  }\n});\n\n// extend jStat.fn with methods that require one argument\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function(arg, func) {\n      var tmpthis = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n        }, 15);\n        return this;\n      }\n      if (typeof jStat[passfunc](this, arg) === 'number')\n        return jStat[passfunc](this, arg);\n      else\n        return jStat(jStat[passfunc](this, arg));\n    };\n  }(funcs[i]));\n}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\nvar slice = [].slice;\nvar isNumber = jStat.utils.isNumber;\nvar isArray = jStat.utils.isArray;\n\n// flag==true denotes use of sample standard deviation\n// Z Statistics\njStat.extend({\n  // 2 different parameter lists:\n  // (value, mean, sd)\n  // (value, array, flag)\n  zscore: function zscore() {\n    var args = slice.call(arguments);\n    if (isNumber(args[1])) {\n      return (args[0] - args[1]) / args[2];\n    }\n    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, sides)\n  // (zscore, sides)\n  // (value, array, sides, flag)\n  ztest: function ztest() {\n    var args = slice.call(arguments);\n    var z;\n    if (isArray(args[1])) {\n      // (value, array, sides, flag)\n      z = jStat.zscore(args[0],args[1],args[3]);\n      return (args[2] === 1) ?\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);\n    } else {\n      if (args.length > 2) {\n        // (value, mean, sd, sides)\n        z = jStat.zscore(args[0],args[1],args[2]);\n        return (args[3] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);\n      } else {\n        // (zscore, sides)\n        z = args[0];\n        return (args[1] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)*2);\n      }\n    }\n  }\n});\n\njStat.extend(jStat.fn, {\n  zscore: function zscore(value, flag) {\n    return (value - this.mean()) / this.stdev(flag);\n  },\n\n  ztest: function ztest(value, sides, flag) {\n    var zscore = Math.abs(this.zscore(value, flag));\n    return (sides === 1) ?\n      (jStat.normal.cdf(-zscore, 0, 1)) :\n      (jStat.normal.cdf(-zscore, 0, 1) * 2);\n  }\n});\n\n// T Statistics\njStat.extend({\n  // 2 parameter lists\n  // (value, mean, sd, n)\n  // (value, array)\n  tscore: function tscore() {\n    var args = slice.call(arguments);\n    return (args.length === 4) ?\n      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :\n      ((args[0] - jStat.mean(args[1])) /\n       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, n, sides)\n  // (tscore, n, sides)\n  // (value, array, sides)\n  ttest: function ttest() {\n    var args = slice.call(arguments);\n    var tscore;\n    if (args.length === 5) {\n      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n      return (args[4] === 1) ?\n        (jStat.studentt.cdf(-tscore, args[3]-1)) :\n        (jStat.studentt.cdf(-tscore, args[3]-1)*2);\n    }\n    if (isNumber(args[1])) {\n      tscore = Math.abs(args[0])\n      return (args[2] == 1) ?\n        (jStat.studentt.cdf(-tscore, args[1]-1)) :\n        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);\n    }\n    tscore = Math.abs(jStat.tscore(args[0], args[1]))\n    return (args[2] == 1) ?\n      (jStat.studentt.cdf(-tscore, args[1].length-1)) :\n      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  tscore: function tscore(value) {\n    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n  },\n\n  ttest: function ttest(value, sides) {\n    return (sides === 1) ?\n      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :\n      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);\n  }\n});\n\n// F Statistics\njStat.extend({\n  // Paramter list is as follows:\n  // (array1, array2, array3, ...)\n  // or it is an array of arrays\n  // array of arrays conversion\n  anovafscore: function anovafscore() {\n    var args = slice.call(arguments),\n    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n    if (args.length === 1) {\n      tmpargs = new Array(args[0].length);\n      for (i = 0; i < args[0].length; i++) {\n        tmpargs[i] = args[0][i];\n      }\n      args = tmpargs;\n    }\n    // Builds sample array\n    sample = new Array();\n    for (i = 0; i < args.length; i++) {\n      sample = sample.concat(args[i]);\n    }\n    sampMean = jStat.mean(sample);\n    // Computes the explained variance\n    expVar = 0;\n    for (i = 0; i < args.length; i++) {\n      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n    }\n    expVar /= (args.length - 1);\n    // Computes unexplained variance\n    unexpVar = 0;\n    for (i = 0; i < args.length; i++) {\n      sampSampMean = jStat.mean(args[i]);\n      for (j = 0; j < args[i].length; j++) {\n        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n      }\n    }\n    unexpVar /= (sample.length - args.length);\n    return expVar / unexpVar;\n  },\n\n  // 2 different paramter setups\n  // (array1, array2, array3, ...)\n  // (anovafscore, df1, df2)\n  anovaftest: function anovaftest() {\n    var args = slice.call(arguments),\n    df1, df2, n, i;\n    if (isNumber(args[0])) {\n      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n    }\n    var anovafscore = jStat.anovafscore(args);\n    df1 = args.length - 1;\n    n = 0;\n    for (i = 0; i < args.length; i++) {\n      n = n + args[i].length;\n    }\n    df2 = n - df1 - 1;\n    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n  },\n\n  ftest: function ftest(fscore, df1, df2) {\n    return 1 - jStat.centralF.cdf(fscore, df1, df2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  anovafscore: function anovafscore() {\n    return jStat.anovafscore(this.toArray());\n  },\n\n  anovaftes: function anovaftes() {\n    var n = 0;\n    var i;\n    for (i = 0; i < this.length; i++) {\n      n = n + this[i].length;\n    }\n    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n  }\n});\n\n// Tukey's range test\njStat.extend({\n  // 2 parameter lists\n  // (mean1, mean2, n1, n2, sd)\n  // (array1, array2, sd)\n  qscore: function qscore() {\n    var args = slice.call(arguments);\n    var mean1, mean2, n1, n2, sd;\n    if (isNumber(args[0])) {\n        mean1 = args[0];\n        mean2 = args[1];\n        n1 = args[2];\n        n2 = args[3];\n        sd = args[4];\n    } else {\n        mean1 = jStat.mean(args[0]);\n        mean2 = jStat.mean(args[1]);\n        n1 = args[0].length;\n        n2 = args[1].length;\n        sd = args[2];\n    }\n    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n  },\n\n  // 3 different parameter lists:\n  // (qscore, n, k)\n  // (mean1, mean2, n1, n2, sd, n, k)\n  // (array1, array2, sd, n, k)\n  qtest: function qtest() {\n    var args = slice.call(arguments);\n\n    var qscore;\n    if (args.length === 3) {\n      qscore = args[0];\n      args = args.slice(1);\n    } else if (args.length === 7) {\n      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n      args = args.slice(5);\n    } else {\n      qscore = jStat.qscore(args[0], args[1], args[2]);\n      args = args.slice(3);\n    }\n\n    var n = args[0];\n    var k = args[1];\n\n    return 1 - jStat.tukey.cdf(qscore, k, n - k);\n  },\n\n  tukeyhsd: function tukeyhsd(arrays) {\n    var sd = jStat.pooledstdev(arrays);\n    var means = arrays.map(function (arr) {return jStat.mean(arr);});\n    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);\n\n    var results = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n        }\n    }\n\n    return results;\n  }\n});\n\n// Error Bounds\njStat.extend({\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  normalci: function normalci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  tci: function tci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *\n                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  significant: function significant(pvalue, alpha) {\n    return pvalue < alpha;\n  }\n});\n\njStat.extend(jStat.fn, {\n  normalci: function normalci(value, alpha) {\n    return jStat.normalci(value, alpha, this.toArray());\n  },\n\n  tci: function tci(value, alpha) {\n    return jStat.tci(value, alpha, this.toArray());\n  }\n});\n\n// internal method for calculating the z-score for a difference of proportions test\nfunction differenceOfProportions(p1, n1, p2, n2) {\n  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n    throw new Error(\"Proportions should be greater than 0 and less than 1\")\n  }\n  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));\n  return (p1 - p2) / se;\n}\n\n// Difference of Proportions\njStat.extend(jStat.fn, {\n  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 1);\n  },\n\n  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 2);\n  }\n});\n\n}(jStat, Math));\njStat.models = (function(){\n  function sub_regress(exog) {\n    var var_count = exog[0].length;\n    var modelList = jStat.arange(var_count).map(function(endog_index) {\n      var exog_index =\n          jStat.arange(var_count).filter(function(i){return i!==endog_index});\n      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),\n                 jStat.col(exog, exog_index))\n    });\n    return modelList;\n  }\n\n  // do OLS model regress\n  // exog have include const columns ,it will not generate it .In fact, exog is\n  // \"design matrix\" look at\n  //https://en.wikipedia.org/wiki/Design_matrix\n  function ols(endog, exog) {\n    var nobs = endog.length;\n    var df_model = exog[0].length - 1;\n    var df_resid = nobs-df_model - 1;\n    var coef = jStat.lstsq(exog, endog);\n    var predict =\n        jStat.multiply(exog, coef.map(function(x) { return [x] }))\n            .map(function(p) { return p[0] });\n    var resid = jStat.subtract(endog, predict);\n    var ybar = jStat.mean(endog);\n    // constant cause problem\n    // var SST = jStat.sum(endog.map(function(y) {\n    //   return Math.pow(y-ybar,2);\n    // }));\n    var SSE = jStat.sum(predict.map(function(f) {\n      return Math.pow(f - ybar, 2);\n    }));\n    var SSR = jStat.sum(endog.map(function(y, i) {\n      return Math.pow(y - predict[i], 2);\n    }));\n    var SST = SSE + SSR;\n    var R2 = (SSE / SST);\n    return {\n        exog:exog,\n        endog:endog,\n        nobs:nobs,\n        df_model:df_model,\n        df_resid:df_resid,\n        coef:coef,\n        predict:predict,\n        resid:resid,\n        ybar:ybar,\n        SST:SST,\n        SSE:SSE,\n        SSR:SSR,\n        R2:R2\n    };\n  }\n\n  // H0: b_I=0\n  // H1: b_I!=0\n  function t_test(model) {\n    var subModelList = sub_regress(model.exog);\n    //var sigmaHat=jStat.stdev(model.resid);\n    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));\n    var seBetaHat = subModelList.map(function(mod) {\n      var SST = mod.SST;\n      var R2 = mod.R2;\n      return sigmaHat / Math.sqrt(SST * (1 - R2));\n    });\n    var tStatistic = model.coef.map(function(coef, i) {\n      return (coef - 0) / seBetaHat[i];\n    });\n    var pValue = tStatistic.map(function(t) {\n      var leftppf = jStat.studentt.cdf(t, model.df_resid);\n      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n    });\n    var c = jStat.studentt.inv(0.975, model.df_resid);\n    var interval95 = model.coef.map(function(coef, i) {\n      var d = c * seBetaHat[i];\n      return [coef - d, coef + d];\n    })\n    return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n    };\n  }\n\n  function F_test(model) {\n    var F_statistic =\n        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);\n    var fcdf = function(x, n1, n2) {\n      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)\n    }\n    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n    return { F_statistic: F_statistic, pvalue: pvalue };\n  }\n\n  function ols_wrap(endog, exog) {\n    var model = ols(endog,exog);\n    var ttest = t_test(model);\n    var ftest = F_test(model);\n    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n    // Which matches the 'adjusted R^2' provided by R's lm package\n    var adjust_R2 =\n        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));\n    model.t = ttest;\n    model.f = ftest;\n    model.adjust_R2 = adjust_R2;\n    return model;\n  }\n\n  return { ols: ols_wrap };\n})();\n//To regress, simply build X matrix\n//(append column of 1's) using\n//buildxmatrix and build the Y\n//matrix using buildymatrix\n//(simply the transpose)\n//and run regress.\n\n\n\n//Regressions\n\njStat.extend({\n  buildxmatrix: function buildxmatrix(){\n    //Parameters will be passed in as such\n    //(array1,array2,array3,...)\n    //as (x1,x2,x3,...)\n    //needs to be (1,x1,x2,x3,...)\n    var matrixRows = new Array(arguments.length);\n    for(var i=0;i<arguments.length;i++){\n      var array = [1];\n      matrixRows[i]= array.concat(arguments[i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  builddxmatrix: function builddxmatrix() {\n    //Paramters will be passed in as such\n    //([array1,array2,...]\n    var matrixRows = new Array(arguments[0].length);\n    for(var i=0;i<arguments[0].length;i++){\n      var array = [1]\n      matrixRows[i]= array.concat(arguments[0][i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  buildjxmatrix: function buildjxmatrix(jMat) {\n    //Builds from jStat Matrix\n    var pass = new Array(jMat.length)\n    for(var i=0;i<jMat.length;i++){\n      pass[i] = jMat[i];\n    }\n    return jStat.builddxmatrix(pass);\n\n  },\n\n  buildymatrix: function buildymatrix(array){\n    return jStat(array).transpose();\n  },\n\n  buildjymatrix: function buildjymatrix(jMat){\n    return jMat.transpose();\n  },\n\n  matrixmult: function matrixmult(A,B){\n    var i, j, k, result, sum;\n    if (A.cols() == B.rows()) {\n      if(B.rows()>1){\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[k][j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n      result = [];\n      for (i = 0; i < A.rows(); i++) {\n        result[i] = [];\n        for (j = 0; j < B.cols(); j++) {\n          sum = 0;\n          for (k = 0; k < A.cols(); k++) {\n            sum += A.toArray()[i][k] * B.toArray()[j];\n          }\n          result[i][j] = sum;\n        }\n      }\n      return jStat(result);\n    }\n  },\n\n  //regress and regresst to be fixed\n\n  regress: function regress(jMatX,jMatY){\n    //print(\"regressin!\");\n    //print(jMatX.toArray());\n    var innerinv = jStat.xtranspxinv(jMatX);\n    //print(innerinv);\n    var xtransp = jMatX.transpose();\n    var next = jStat.matrixmult(jStat(innerinv),xtransp);\n    return jStat.matrixmult(next,jMatY);\n\n  },\n\n  regresst: function regresst(jMatX,jMatY,sides){\n    var beta = jStat.regress(jMatX,jMatY);\n\n    var compile = {};\n    compile.anova = {};\n    var jMatYBar = jStat.jMatYBar(jMatX, beta);\n    compile.yBar = jMatYBar;\n    var yAverage = jMatY.mean();\n    compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n\n    compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n    compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n\n    compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n    compile.anova.mse =\n        compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.sst = jStat.sst(jMatY, yAverage);\n    compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n\n    compile.anova.r2 = 1 - (compile.anova.sse / compile.anova.sst);\n    if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n\n    compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n    compile.anova.pvalue =\n        jStat.anovaftest(compile.anova.fratio,\n                         jMatX[0].length - 1,\n                         jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.rmse = Math.sqrt(compile.anova.mse);\n\n    compile.anova.r2adj = 1 - (compile.anova.mse / compile.anova.mst);\n    if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n\n    compile.stats = new Array(jMatX[0].length);\n    var covar = jStat.xtranspxinv(jMatX);\n    var sds, ts, ps;\n\n    for(var i=0; i<beta.length;i++){\n      sds=Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n      ts= Math.abs(beta[i] / sds);\n      ps= jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n\n      compile.stats[i]=[beta[i], sds, ts, ps];\n    }\n\n    compile.regress = beta;\n    return compile;\n  },\n\n  xtranspx: function xtranspx(jMatX){\n    return jStat.matrixmult(jMatX.transpose(),jMatX);\n  },\n\n\n  xtranspxinv: function xtranspxinv(jMatX){\n    var inner = jStat.matrixmult(jMatX.transpose(),jMatX);\n    var innerinv = jStat.inv(inner);\n    return innerinv;\n  },\n\n  jMatYBar: function jMatYBar(jMatX, beta) {\n    var yBar = jStat.matrixmult(jMatX, beta);\n    return new jStat(yBar);\n  },\n\n  residuals: function residuals(jMatY, jMatYBar) {\n    return jStat.matrixsubtract(jMatY, jMatYBar);\n  },\n\n  ssr: function ssr(jMatYBar, yAverage) {\n    var ssr = 0;\n    for(var i = 0; i < jMatYBar.length; i++) {\n      ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n    }\n    return ssr;\n  },\n\n  sse: function sse(jMatY, jMatYBar) {\n    var sse = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n    }\n    return sse;\n  },\n\n  sst: function sst(jMatY, yAverage) {\n    var sst = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sst += Math.pow(jMatY[i] - yAverage, 2);\n    }\n    return sst;\n  },\n\n  matrixsubtract: function matrixsubtract(A,B){\n    var ans = new Array(A.length);\n    for(var i=0;i<A.length;i++){\n      ans[i] = new Array(A[i].length);\n      for(var j=0;j<A[i].length;j++){\n        ans[i][j]=A[i][j]-B[i][j];\n      }\n    }\n    return jStat(ans);\n  }\n});\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n\n  return jStat;\n});\n","\nimport jStat from 'jstat';\n\n/*\n  SDTMath Static Class - Not intended for instantiation!\n\n  Variables:\n    H = hits\n    M = misses\n    FA = false alarms\n    CR = correct rejections\n    HR = hit rate\n    zHR = Z-transformed hit rate\n    FAR = false alarm rate\n    zFAR = Z-transformed false alarm rate\n    ACC = accuracy\n    PPV = positive predictive value\n    FOMR = false omission rate (used FOMR to avoid keyword FOR!)\n    d = sensitivity (d' for equal variance, d_a for unequal variance)\n    c = response bias (c for equal variance, c_a for unequal variance)\n    s = standard deviation of signal distribution, with standard deviation of noise distribution = 1\n    muN = mean of noise distribution\n    muS = mean of signal distribution\n    l = lambda, threshold location, with l = 0 indicating no response bias\n    h = height of signal distribution\n\n  Functions:\n    Z = z-score\n    Z^-1 = inverse z-score\n\n  Equations (* = unequal variance):\n    HR = H / (H + M)\n    FAR = FA / (FA + CR)\n    ACC = (H + CR) / (H + M + FA + CR)\n    ACC = (HR + (1 - FAR)) / 2\n    PPV = H / (H + FA)\n    FOMR = M / (M + CR)\n\n    d' = Z^-1(HR) - Z^-1(FAR)\n    *d' = (2 / (s^2 + 1))^(1/2) * (s * Z^-1(HR) - Z^-1(FAR))\n\n    c = -(Z^-1(HR) + Z^-1(FAR))/2\n    *c = (2 / (s^2 + 1))^(1/2) * (s / s + 1) * -(Z^-1(HR) + Z^-1(FAR))\n\n    HR = Z(d'/2 - c)\n    *HR = Z(((s^2 + 1) / 2)^(1/2) * (d' / (s + 1) - c / s))\n\n    FAR = Z(-d'/2 - c)\n    *FAR = Z(((s^2 + 1) / 2)^(1/2) * -(d' / (s + 1) + c))\n\n    HR = Z(d' + Z^-1(FAR))\n    *HR = Z(((s^2 + 1) / 2)^(1/2) * d' + Z^-1(FAR) / s)\n\n    HR = Z(-2c - Z^-1(FAR))\n    *HR = Z(-((s^2 + 1) / 2)^(1/2) * ((s + 1) / s) * c - Z^-1(FAR))\n\n    muN = -d'/2\n    *muN = -((s^2 + 1) / 2)^(1/2) * (1 / (s + 1)) * d'\n\n    d' = -2 * muN\n    *d' = -(2 / (s^2 + 1))^(1/2) * (s + 1) * muN\n\n    muS = d'/2\n    *muS = ((s^2 + 1) / 2)^(1/2) * (s / (s + 1)) * d'\n\n    d' = 2 * muS\n    *d' = (2 / (s^2 + 1))^(1/2) * ((s + 1) / s) * muS\n\n    l = c\n    *l = ((s^2 + 1) / 2)^(1/2) * c\n\n    c = l\n    *c = (2 / (s^2 + 1))^(1/2) * l\n\n    h = 1 / (s * (2 * pi)^(1/2))\n    s = 1 / (h * (2 * pi)^(1/2))\n\n    zHR = Z(HR)\n\n    zFAR = Z(FAR)\n\n    HR = Z^-1(zHR)\n\n    FAR = Z^-1(zFAR)\n\n*/\nexport default class SDTMath {\n  static hM2Hr(h, m) {\n    if ((h === 0) && (m === 0)) {\n      return 0;\n    }\n    return h / (h + m);\n  }\n\n  static faCr2Far(fa, cr) {\n    if ((fa === 0) && (cr === 0)) {\n      return 0;\n    }\n    return fa / (fa + cr);\n  }\n\n  static hMFaCr2Acc(h, m, fa, cr) {\n    if ((h === 0) && (m === 0) && (fa === 0) && (cr === 0)) {\n      return 0;\n    }\n    return (h + cr) / (h + m + fa + cr);\n  }\n\n  static hrFar2Acc(hr, far) {\n    return (hr + (1 - far)) / 2;\n  }\n\n  static hFa2Ppv(h, fa) {\n    if ((h === 0) && (fa === 0)) {\n      return 0;\n    }\n    return h / (h + fa);\n  }\n\n  static mCr2Fomr(m, cr) {\n    if ((m === 0) && (cr === 0)) {\n      return 0;\n    }\n    return m / (m + cr);\n  }\n\n  static hrFar2D(hr, far, s = 1) {\n    if (s === 1) return (jStat.normal.inv(hr, 0, 1) - jStat.normal.inv(far, 0, 1));\n    return (\n      Math.sqrt(2 / (s * s + 1))\n      * (s * jStat.normal.inv(hr, 0, 1) - jStat.normal.inv(far, 0, 1))\n    );\n  }\n\n  static hrFar2C(hr, far, s = 1) {\n    if (s === 1) return (-(jStat.normal.inv(hr, 0, 1) + jStat.normal.inv(far, 0, 1)) / 2);\n    return (\n      Math.sqrt(2 / (s * s + 1))\n      * (s / (s + 1))\n      * -(jStat.normal.inv(hr, 0, 1) + jStat.normal.inv(far, 0, 1))\n    );\n  }\n\n  static dC2Hr(d, c, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(d / 2 - c, 0, 1));\n    return (jStat.normal.cdf(Math.sqrt((s * s + 1) / 2) * (d / (1 + s) - c / s), 0, 1));\n  }\n\n  static dC2Far(d, c, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(-(d / 2 + c), 0, 1));\n    return (jStat.normal.cdf(Math.sqrt((s * s + 1) / 2) * -(d / (1 + s) + c), 0, 1));\n  }\n\n  static dFar2Hr(d, far, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(d + jStat.normal.inv(far, 0, 1), 0, 1));\n    return (jStat.normal.cdf(\n      (Math.sqrt((s * s + 1) / 2) * d + jStat.normal.inv(far, 0, 1)) / s,\n      0,\n      1,\n    ));\n  }\n\n  static cFar2Hr(c, far, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(-(2 * c) - jStat.normal.inv(far, 0, 1), 0, 1));\n    return (jStat.normal.cdf(\n      -Math.sqrt((s * s + 1) / 2) * ((s + 1) / s) * c - jStat.normal.inv(far, 0, 1),\n      0,\n      1,\n    ));\n  }\n\n  static d2MuN(d, s = 1) {\n    if (s === 1) return -d / 2;\n    return -Math.sqrt((s * s + 1) / 2) * (1 / (s + 1)) * d;\n  }\n\n  static muN2D(muN, s = 1) {\n    if (s === 1) return -2 * muN;\n    return -Math.sqrt(2 / (s * s + 1)) * (s + 1) * muN;\n  }\n\n  static d2MuS(d, s = 1) {\n    if (s === 1) return d / 2;\n    return Math.sqrt((s * s + 1) / 2) * (s / (s + 1)) * d;\n  }\n\n  static muS2D(muS, s = 1) {\n    if (s === 1) return 2 * muS;\n    return Math.sqrt(2 / (s * s + 1)) * ((s + 1) / s) * muS;\n  }\n\n  static c2L(c, s = 1) {\n    if (s === 1) return c;\n    return Math.sqrt((s * s + 1) / 2) * c;\n  }\n\n  static l2C(l, s = 1) {\n    if (s === 1) return l;\n    return Math.sqrt(2 / (s * s + 1)) * l;\n  }\n\n  static s2H(s = 1) {\n    return 1 / (s * Math.sqrt(2 * Math.PI));\n  }\n\n  static h2S(h) {\n    return 1 / (h * Math.sqrt(2 * Math.PI));\n  }\n\n  static hr2Zhr(hr) {\n    return jStat.normal.inv(hr, 0, 1);\n  }\n\n  static far2Zfar(far) {\n    return jStat.normal.inv(far, 0, 1);\n  }\n\n  static zhr2Hr(zhr) {\n    return jStat.normal.cdf(zhr, 0, 1);\n  }\n\n  static zfar2Far(zfar) {\n    return jStat.normal.cdf(zfar, 0, 1);\n  }\n}\n","\n// Internal dependencies\nimport SDTMath from './sdt-math';\n\nexport default SDTMath;\n"],"names":["window","factory","module","exports","this","jStat","Math","undefined","concat","Array","prototype","slice","toString","Object","calcRdx","n","m","val","pow","log","LOG10E","isArray","arg","call","isFunction","isNumber","num","toVector","arr","apply","_init","arguments","fn","args","map","i","length","seq","toArray","constructor","utils","_random_fn","random","setRandom","TypeError","extend","obj","j","rows","cols","dimensions","row","index","rowa","col","submat","arange","forEach","ind","column","cola","a","diag","nrow","res","antidiag","transpose","objArr","push","func","toAlter","ncol","cumreduce","alter","create","retZero","zeros","retOne","ones","rand","retIdent","identity","symmetric","size","clear","min","max","hival","step","current","cnt","start","end","rl","_slice","list","copy","rcSlice","colSlice","rowSlice","sliceAssign","A","B","nl","ml","diagonal","diagArray","mat","t","jProto","sort","splice","funcs","passfunc","self","results","setTimeout","split","ascNum","b","clip","sum","sumsqrd","sumsqerr","mean","tmp","sumrow","product","prod","low","high","unique","hash","_arr","meansqerr","geomean","logs","meanOfLogs","exp","median","arrlen","cumsum","cumprod","diff","diffs","arrLen","rank","distinctNumbers","numberCounts","number","sortedDistinctNumbers","numberRanks","currentRank","count","first","last","mode","maxCount","numMaxCount","mode_arr","range","variance","flag","pooledvariance","reduce","samples","deviation","dev","stdev","sqrt","pooledstdev","meandev","abs","meddev","coeffvar","quartiles","round","quantiles","quantilesArray","alphap","betap","sortedArray","quantileVals","p","aleph","k","gamma","floor","percentile","exclusive","realIndex","parseInt","frac","percentileOfScore","score","kind","counter","len","strict","value","histogram","binCnt","binWidth","bins","covariance","arr1","arr2","u","v","arr1Len","sq_dev","corrcoeff","spearmancoeff","stanMoment","mu","sigma","skewSum","skewness","kurtosis","fullbool","tmpthis","callbackFunction","argsToPass","curriedFunction","vector","gammaln","x","cof","ser","xx","y","loggam","x0","x2","xp","gl","gl0","PI","gammafn","q","fact","xden","xnum","z","yi","Infinity","sin","gammap","lowRegGamma","aln","ap","del","c","d","h","ITMAX","an","NaN","factorialln","factorial","combination","combinationln","permutation","betafn","betaln","betacf","fpmin","qab","qap","qam","m2","aa","gammapinv","a1","EPS","gln","err","pp","lna1","afac","erf","isneg","dd","ty","erfc","erfcinv","ibetainv","b1","lna","lnb","al","w","ibeta","bt","randn","randg","shape","oalph","a2","f","_a","_b","_c","newthis","data","sample","vals","fnfunc","beta","pdf","alpha","cdf","inv","centralF","df1","df2","binomial","x1","cauchy","local","scale","atan","tan","chisquare","dof","exponential","rate","invgamma","kumaraswamy","Error","lognormal","noncentralt","ncp","tol","studentt","min_iterations","flip","prob","normal","lastvalue","std","pareto","SQRT2","dof2","weibull","uniform","betinc","eps","a0","b0","m9","c9","betacdf","s","negbin","r","hypgeom","N","scaledPDF","samplesDone","scaledCDF","factor","poisson","l","sumarr","sampleSmall","L","sampleLarge","lam","U","V","slam","loglam","invalpha","vr","us","triangular","arcsine","asin","cos","laplaceSign","laplace","tukeyWprob","rr","cc","nleg","ihalf","C1","C2","C3","bb","wlar","wincr1","wincr2","xleg","aleg","qsqz","pr_w","wincr","blb","binc","bub","einsum","cc1","wi","elsum","jj","ac","qexpo","pplus","pminus","rinsum","tukeyQinv","p0","q0","p1","q1","p2","q2","p3","q3","p4","q4","c1","c2","c3","c4","c5","vmax","ps","tukey","nmeans","df","nlegq","ihalfq","eps1","eps2","dhaf","dquar","deigh","dlarg","ulen1","ulen2","ulen3","ulen4","xlegq","alegq","Number","isFinite","f2","f2lf","f21","ff4","ulen","ans","otsum","twa1","t1","wprb","rotsum","maxiter","valx0","valx1","iter","xabs","isUsable","add","subtract","divide","multiply","nrescols","rescols","outer","dot","left","right","norm","nnorm","isNaN","angle","acos","aug","newarr","gauss_jordan","result","det","determinant","submatrix","sign","gauss_elimination","maug","pivot","temp","y2","maxrow","triaUpSolve","parts","matrix_mode","triaLowSolve","lu","R","cholesky","T","gauss_jacobi","xv","xk","gauss_seidel","SOR","householder","QR","qr2","lstsq","R_I","I","Aj","cAi","Ij","cIi","qr_solve","array_mode","Q","attrs","Q1","R1","RI","Q2","jacobi","condition","e","ev","maxim","theta","rungekutta","t_j","u_j","order","k1","k2","u_j1","k3","k4","romberg","h1","g","richardson","X","pos","h_min","y1","simpson","hermite","F","dF","dl","lagrange","cubic_spline","sq","gauss_quadrature","PCA","temp1","D","temp2","Y","Bt","C","Vt","zscore","ztest","sides","tscore","ttest","anovafscore","expVar","sampMean","sampSampMean","tmpargs","unexpVar","anovaftest","ftest","fscore","anovaftes","qscore","mean1","mean2","n1","n2","sd","qtest","tukeyhsd","arrays","means","normalci","change","tci","significant","pvalue","differenceOfProportions","pooled","se","oneSidedDifferenceOfProportions","twoSidedDifferenceOfProportions","models","sub_regress","exog","var_count","modelList","endog_index","exog_index","filter","ols","endog","nobs","df_model","df_resid","coef","predict","resid","ybar","SSE","SSR","SST","R2","t_test","model","subModelList","sigmaHat","seBetaHat","mod","tStatistic","pValue","leftppf","interval95","F_test","F_statistic","fcdf","ols_wrap","adjust_R2","buildxmatrix","matrixRows","array","builddxmatrix","buildjxmatrix","jMat","pass","buildymatrix","buildjymatrix","matrixmult","regress","jMatX","jMatY","innerinv","xtranspxinv","xtransp","next","regresst","compile","anova","jMatYBar","yBar","yAverage","residuals","ssr","msr","sse","mse","sst","mst","r2","fratio","rmse","r2adj","stats","covar","sds","ts","xtranspx","inner","matrixsubtract","SDTMath","hM2Hr","faCr2Far","fa","cr","hMFaCr2Acc","hrFar2Acc","hr","far","hFa2Ppv","mCr2Fomr","hrFar2D","hrFar2C","dC2Hr","dC2Far","dFar2Hr","cFar2Hr","d2MuN","muN2D","muN","d2MuS","muS2D","muS","c2L","l2C","s2H","h2S","hr2Zhr","far2Zfar","zhr2Hr","zhr","zfar2Far","zfar"],"mappings":"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","x_google_ignoreList":[0]}