{"version":3,"sources":["../../../node_modules/browser-pack/_prelude.js","../../../node_modules/jstat/dist/jstat.js","index.js","sdt-math.js"],"names":["f","exports","module","define","amd","window","global","self","this","detectableMath","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","factory","jStat","Math","sum","range","push","isArray","slice","isNumber","undefined","concat","Array","prototype","toString","Object","calcRdx","m","val","pow","log","LOG10E","arg","isFunction","num","_init","arguments","retZero","retOne","retIdent","j","_slice","list","start","end","step","rl","copy","fn","args","map","seq","apply","toArray","constructor","utils","toVector","arr","_random_fn","random","setRandom","TypeError","extend","obj","rows","cols","dimensions","row","index","rowa","col","submat","arange","forEach","ind","column","cola","diag","nrow","res","antidiag","transpose","objArr","func","toAlter","ncol","cumreduce","alter","create","zeros","ones","rand","identity","symmetric","size","clear","min","max","cnt","hival","current","rcSlice","colSlice","rowSlice","sliceAssign","A","B","nl","ml","diagonal","diagArray","mat","jProto","sort","splice","funcs","passfunc","results","setTimeout","split","betinc","x","b","eps","c9","a0","b0","a1","b1","m9","a2","abs","tukeyWprob","w","rr","cc","xleg","aleg","qsqz","wincr","pr_w","normal","cdf","exp","blb","binc","bub","einsum","cc1","wi","elsum","jj","ac","qexpo","rinsum","sqrt","PI","isUsable","differenceOfProportions","p1","n1","p2","n2","pooled","ols","endog","exog","nobs","df_model","df_resid","coef","lstsq","predict","multiply","resid","subtract","ybar","mean","SSE","SSR","y","SST","R2","t_test","model","var_count","subModelList","endog_index","exog_index","filter","sigmaHat","seBetaHat","mod","tStatistic","pValue","leftppf","studentt","inv","interval95","d","se","ascNum","clip","sumsqrd","sumsqerr","tmp","sumrow","product","prod","low","high","unique","hash","_arr","meansqerr","geomean","median","arrlen","cumsum","cumprod","diff","diffs","arrLen","rank","sorted","ranks","first","indexOf","last","lastIndexOf","mode","count","maxCount","numMaxCount","mode_arr","variance","flag","pooledvariance","reduce","samples","deviation","dev","stdev","pooledstdev","meandev","meddev","coeffvar","quartiles","round","quantiles","quantilesArray","alphap","betap","aleph","k","gamma","sortedArray","quantileVals","floor","percentile","exclusive","realIndex","parseInt","frac","percentileOfScore","score","kind","value","counter","len","strict","histogram","binCnt","binWidth","bins","covariance","arr1","arr2","v","arr1Len","sq_dev","corrcoeff","spearmancoeff","stanMoment","mu","sigma","skewSum","skewness","kurtosis","fullbool","tmpthis","callbackFunction","argsToPass","curriedFunction","vector","gammaln","xx","cof","ser","loggam","x0","x2","xp","gl","gl0","gammafn","z","yi","q","fact","xden","xnum","Infinity","sin","gammap","lowRegGamma","an","aln","ap","del","h","ITMAX","NaN","factorialln","factorial","combination","combinationln","permutation","betafn","betaln","betacf","m2","aa","fpmin","qab","qap","qam","gammapinv","pp","lna1","afac","gln","erf","ty","isneg","dd","erfc","erfcinv","err","ibetainv","lna","lnb","al","ibeta","bt","randn","randg","shape","oalph","callee","_a","_b","_c","newthis","data","sample","vals","fnfunc","beta","pdf","alpha","centralF","df1","df2","binomial","cauchy","local","scale","atan","tan","chisquare","dof","exponential","rate","invgamma","kumaraswamy","lognormal","noncentralt","ncp","tol","flip","prob","lastvalue","std","_mean","pareto","SQRT2","dof2","weibull","uniform","betacdf","s","negbin","hypgeom","N","scaledPDF","samplesDone","scaledCDF","factor","poisson","l","sumarr","sampleSmall","L","sampleLarge","U","V","slam","loglam","invalpha","vr","us","lam","triangular","arcsine","asin","cos","laplace","tukey","nmeans","df","xlegq","alegq","Number","isFinite","ulen","f2","f2lf","f21","ff4","ans","otsum","twa1","t1","x1","ps","tukeyQinv","valx0","valx1","iter","add","divide","nrescols","rescols","outer","dot","left","right","norm","nnorm","isNaN","angle","acos","aug","newarr","gauss_jordan","result","det","alen","alend","rowshift","colshift","mrow","mcol","gauss_elimination","maug","pivot","temp","y2","maxrow","triaUpSolve","parts","matrix_mode","triaLowSolve","lu","R","cholesky","T","gauss_jacobi","xv","xk","gauss_seidel","SOR","householder","QR","array_mode","I","Q","attrs","Q1","R1","RI","Aj","cAi","Ij","cIi","Q2","jacobi","maxim","theta","condition","ev","rungekutta","t_j","u_j","order","k1","k2","k3","romberg","h1","g","richardson","X","pos","y1","h_min","simpson","hermite","F","dF","dl","lagrange","cubic_spline","sq","gauss_quadrature","PCA","temp1","Bt","D","temp2","Y","C","Vt","zscore","ztest","sides","tscore","ttest","anovafscore","expVar","sampMean","sampSampMean","tmpargs","unexpVar","anovaftest","ftest","fscore","anovaftes","qscore","mean1","mean2","sd","qtest","tukeyhsd","arrays","means","normalci","change","tci","significant","pvalue","oneSidedDifferenceOfProportions","twoSidedDifferenceOfProportions","models","F_statistic","adjust_R2","buildxmatrix","matrixRows","builddxmatrix","buildjxmatrix","jMat","pass","buildymatrix","array","buildjymatrix","matrixmult","regress","jMatX","jMatY","innerinv","xtranspxinv","xtransp","next","regresst","compile","anova","jMatYBar","yBar","yAverage","residuals","ssr","msr","sse","mse","sst","mst","r2","fratio","rmse","r2adj","stats","sds","ts","covar","xtranspx","inner","matrixsubtract","_typeof","_sdtMath","_interopRequireWildcard","SDTMath","fa","cr","hr","far","muN","muS","zhr","zfar"],"mappings":"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","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n})(this, function () {\nvar jStat = (function(Math, undefined) {\n\n// For quick reference.\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n// Calculate correction for IEEE error\n// TODO: This calculation can be improved.\nfunction calcRdx(n, m) {\n  var val = n > m ? n : m;\n  return Math.pow(10,\n                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));\n}\n\n\nvar isArray = Array.isArray || function isArray(arg) {\n  return toString.call(arg) === '[object Array]';\n};\n\n\nfunction isFunction(arg) {\n  return toString.call(arg) === '[object Function]';\n}\n\n\nfunction isNumber(num) {\n  return (typeof num === 'number') ? num - num === 0 : false;\n}\n\n\n// Converts the jStat matrix to vector.\nfunction toVector(arr) {\n  return concat.apply([], arr);\n}\n\n\n// The one and only jStat constructor.\nfunction jStat() {\n  return new jStat._init(arguments);\n}\n\n\n// TODO: Remove after all references in src files have been removed.\njStat.fn = jStat.prototype;\n\n\n// By separating the initializer from the constructor it's easier to handle\n// always returning a new instance whether \"new\" was used or not.\njStat._init = function _init(args) {\n  // If first argument is an array, must be vector or matrix.\n  if (isArray(args[0])) {\n    // Check if matrix.\n    if (isArray(args[0][0])) {\n      // See if a mapping function was also passed.\n      if (isFunction(args[1]))\n        args[0] = jStat.map(args[0], args[1]);\n      // Iterate over each is faster than this.push.apply(this, args[0].\n      for (var i = 0; i < args[0].length; i++)\n        this[i] = args[0][i];\n      this.length = args[0].length;\n\n    // Otherwise must be a vector.\n    } else {\n      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n      this.length = 1;\n    }\n\n  // If first argument is number, assume creation of sequence.\n  } else if (isNumber(args[0])) {\n    this[0] = jStat.seq.apply(null, args);\n    this.length = 1;\n\n  // Handle case when jStat object is passed to jStat.\n  } else if (args[0] instanceof jStat) {\n    // Duplicate the object and pass it back.\n    return jStat(args[0].toArray());\n\n  // Unexpected argument value, return empty jStat object.\n  // TODO: This is strange behavior. Shouldn't this throw or some such to let\n  // the user know they had bad arguments?\n  } else {\n    this[0] = [];\n    this.length = 1;\n  }\n\n  return this;\n};\njStat._init.prototype = jStat.prototype;\njStat._init.constructor = jStat;\n\n\n// Utility functions.\n// TODO: for internal use only?\njStat.utils = {\n  calcRdx: calcRdx,\n  isArray: isArray,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  toVector: toVector\n};\n\n\njStat._random_fn = Math.random;\njStat.setRandom = function setRandom(fn) {\n  if (typeof fn !== 'function')\n    throw new TypeError('fn is not a function');\n  jStat._random_fn = fn;\n};\n\n\n// Easily extend the jStat object.\n// TODO: is this seriously necessary?\njStat.extend = function extend(obj) {\n  var i, j;\n\n  if (arguments.length === 1) {\n    for (j in obj)\n      jStat[j] = obj[j];\n    return this;\n  }\n\n  for (i = 1; i < arguments.length; i++) {\n    for (j in arguments[i])\n      obj[j] = arguments[i][j];\n  }\n\n  return obj;\n};\n\n\n// Returns the number of rows in the matrix.\njStat.rows = function rows(arr) {\n  return arr.length || 1;\n};\n\n\n// Returns the number of columns in the matrix.\njStat.cols = function cols(arr) {\n  return arr[0].length || 1;\n};\n\n\n// Returns the dimensions of the object { rows: i, cols: j }\njStat.dimensions = function dimensions(arr) {\n  return {\n    rows: jStat.rows(arr),\n    cols: jStat.cols(arr)\n  };\n};\n\n\n// Returns a specified row as a vector or return a sub matrix by pick some rows\njStat.row = function row(arr, index) {\n  if (isArray(index)) {\n    return index.map(function(i) {\n      return jStat.row(arr, i);\n    })\n  }\n  return arr[index];\n};\n\n\n// return row as array\n// rowa([[1,2],[3,4]],0) -> [1,2]\njStat.rowa = function rowa(arr, i) {\n  return jStat.row(arr, i);\n};\n\n\n// Returns the specified column as a vector or return a sub matrix by pick some\n// columns\njStat.col = function col(arr, index) {\n  if (isArray(index)) {\n    var submat = jStat.arange(arr.length).map(function() {\n      return new Array(index.length);\n    });\n    index.forEach(function(ind, i){\n      jStat.arange(arr.length).forEach(function(j) {\n        submat[j][i] = arr[j][ind];\n      });\n    });\n    return submat;\n  }\n  var column = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++)\n    column[i] = [arr[i][index]];\n  return column;\n};\n\n\n// return column as array\n// cola([[1,2],[3,4]],0) -> [1,3]\njStat.cola = function cola(arr, i) {\n  return jStat.col(arr, i).map(function(a){ return a[0] });\n};\n\n\n// Returns the diagonal of the matrix\njStat.diag = function diag(arr) {\n  var nrow = jStat.rows(arr);\n  var res = new Array(nrow);\n  for (var row = 0; row < nrow; row++)\n    res[row] = [arr[row][row]];\n  return res;\n};\n\n\n// Returns the anti-diagonal of the matrix\njStat.antidiag = function antidiag(arr) {\n  var nrow = jStat.rows(arr) - 1;\n  var res = new Array(nrow);\n  for (var i = 0; nrow >= 0; nrow--, i++)\n    res[i] = [arr[i][nrow]];\n  return res;\n};\n\n// Transpose a matrix or array.\njStat.transpose = function transpose(arr) {\n  var obj = [];\n  var objArr, rows, cols, j, i;\n\n  // Make sure arr is in matrix format.\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  rows = arr.length;\n  cols = arr[0].length;\n\n  for (i = 0; i < cols; i++) {\n    objArr = new Array(rows);\n    for (j = 0; j < rows; j++)\n      objArr[j] = arr[j][i];\n    obj.push(objArr);\n  }\n\n  // If obj is vector, return only single array.\n  return obj.length === 1 ? obj[0] : obj;\n};\n\n\n// Map a function to an array or array of arrays.\n// \"toAlter\" is an internal variable.\njStat.map = function map(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    for (col = 0; col < ncol; col++)\n      res[row][col] = func(arr[row][col], row, col);\n  }\n\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Cumulatively combine the elements of an array or array of arrays using a function.\njStat.cumreduce = function cumreduce(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    if (ncol > 0)\n      res[row][0] = arr[row][0];\n    for (col = 1; col < ncol; col++)\n      res[row][col] = func(res[row][col-1], arr[row][col]);\n  }\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Destructively alter an array.\njStat.alter = function alter(arr, func) {\n  return jStat.map(arr, func, true);\n};\n\n\n// Generate a rows x cols matrix according to the supplied function.\njStat.create = function  create(rows, cols, func) {\n  var res = new Array(rows);\n  var i, j;\n\n  if (isFunction(cols)) {\n    func = cols;\n    cols = rows;\n  }\n\n  for (i = 0; i < rows; i++) {\n    res[i] = new Array(cols);\n    for (j = 0; j < cols; j++)\n      res[i][j] = func(i, j);\n  }\n\n  return res;\n};\n\n\nfunction retZero() { return 0; }\n\n\n// Generate a rows x cols matrix of zeros.\njStat.zeros = function zeros(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retZero);\n};\n\n\nfunction retOne() { return 1; }\n\n\n// Generate a rows x cols matrix of ones.\njStat.ones = function ones(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retOne);\n};\n\n\n// Generate a rows x cols matrix of uniformly random numbers.\njStat.rand = function rand(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, jStat._random_fn);\n};\n\n\nfunction retIdent(i, j) { return i === j ? 1 : 0; }\n\n\n// Generate an identity matrix of size row x cols.\njStat.identity = function identity(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retIdent);\n};\n\n\n// Tests whether a matrix is symmetric\njStat.symmetric = function symmetric(arr) {\n  var size = arr.length;\n  var row, col;\n\n  if (arr.length !== arr[0].length)\n    return false;\n\n  for (row = 0; row < size; row++) {\n    for (col = 0; col < size; col++)\n      if (arr[col][row] !== arr[row][col])\n        return false;\n  }\n\n  return true;\n};\n\n\n// Set all values to zero.\njStat.clear = function clear(arr) {\n  return jStat.alter(arr, retZero);\n};\n\n\n// Generate sequence.\njStat.seq = function seq(min, max, length, func) {\n  if (!isFunction(func))\n    func = false;\n\n  var arr = [];\n  var hival = calcRdx(min, max);\n  var step = (max * hival - min * hival) / ((length - 1) * hival);\n  var current = min;\n  var cnt;\n\n  // Current is assigned using a technique to compensate for IEEE error.\n  // TODO: Needs better implementation.\n  for (cnt = 0;\n       current <= max && cnt < length;\n       cnt++, current = (min * hival + step * hival * cnt) / hival) {\n    arr.push((func ? func(current, cnt) : current));\n  }\n\n  return arr;\n};\n\n\n// arange(5) -> [0,1,2,3,4]\n// arange(1,5) -> [1,2,3,4]\n// arange(5,1,-1) -> [5,4,3,2]\njStat.arange = function arange(start, end, step) {\n  var rl = [];\n  var i;\n  step = step || 1;\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  if (start === end || step === 0) {\n    return [];\n  }\n  if (start < end && step < 0) {\n    return [];\n  }\n  if (start > end && step > 0) {\n    return [];\n  }\n  if (step > 0) {\n    for (i = start; i < end; i += step) {\n      rl.push(i);\n    }\n  } else {\n    for (i = start; i > end; i += step) {\n      rl.push(i);\n    }\n  }\n  return rl;\n};\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n// slice(A,1,{start:1}) -> [5,6]\n// as numpy code A[:2,1:]\njStat.slice = (function(){\n  function _slice(list, start, end, step) {\n    // note it's not equal to range.map mode it's a bug\n    var i;\n    var rl = [];\n    var length = list.length;\n    if (start === undefined && end === undefined && step === undefined) {\n      return jStat.copy(list);\n    }\n\n    start = start || 0;\n    end = end || list.length;\n    start = start >= 0 ? start : length + start;\n    end = end >= 0 ? end : length + end;\n    step = step || 1;\n    if (start === end || step === 0) {\n      return [];\n    }\n    if (start < end && step < 0) {\n      return [];\n    }\n    if (start > end && step > 0) {\n      return [];\n    }\n    if (step > 0) {\n      for (i = start; i < end; i += step) {\n        rl.push(list[i]);\n      }\n    } else {\n      for (i = start; i > end;i += step) {\n        rl.push(list[i]);\n      }\n    }\n    return rl;\n  }\n\n  function slice(list, rcSlice) {\n    var colSlice, rowSlice;\n    rcSlice = rcSlice || {};\n    if (isNumber(rcSlice.row)) {\n      if (isNumber(rcSlice.col))\n        return list[rcSlice.row][rcSlice.col];\n      var row = jStat.rowa(list, rcSlice.row);\n      colSlice = rcSlice.col || {};\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    }\n\n    if (isNumber(rcSlice.col)) {\n      var col = jStat.cola(list, rcSlice.col);\n      rowSlice = rcSlice.row || {};\n      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n    }\n\n    rowSlice = rcSlice.row || {};\n    colSlice = rcSlice.col || {};\n    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n    return rows.map(function(row) {\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    });\n  }\n\n  return slice;\n}());\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n// A=[[1,2,3],[4,0,0],[7,0,0]]\njStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n  var nl, ml;\n  if (isNumber(rcSlice.row)) {\n    if (isNumber(rcSlice.col))\n      return A[rcSlice.row][rcSlice.col] = B;\n    rcSlice.col = rcSlice.col || {};\n    rcSlice.col.start = rcSlice.col.start || 0;\n    rcSlice.col.end = rcSlice.col.end || A[0].length;\n    rcSlice.col.step = rcSlice.col.step || 1;\n    nl = jStat.arange(rcSlice.col.start,\n                          Math.min(A.length, rcSlice.col.end),\n                          rcSlice.col.step);\n    var m = rcSlice.row;\n    nl.forEach(function(n, i) {\n      A[m][n] = B[i];\n    });\n    return A;\n  }\n\n  if (isNumber(rcSlice.col)) {\n    rcSlice.row = rcSlice.row || {};\n    rcSlice.row.start = rcSlice.row.start || 0;\n    rcSlice.row.end = rcSlice.row.end || A.length;\n    rcSlice.row.step = rcSlice.row.step || 1;\n    ml = jStat.arange(rcSlice.row.start,\n                          Math.min(A[0].length, rcSlice.row.end),\n                          rcSlice.row.step);\n    var n = rcSlice.col;\n    ml.forEach(function(m, j) {\n      A[m][n] = B[j];\n    });\n    return A;\n  }\n\n  if (B[0].length === undefined) {\n    B = [B];\n  }\n  rcSlice.row.start = rcSlice.row.start || 0;\n  rcSlice.row.end = rcSlice.row.end || A.length;\n  rcSlice.row.step = rcSlice.row.step || 1;\n  rcSlice.col.start = rcSlice.col.start || 0;\n  rcSlice.col.end = rcSlice.col.end || A[0].length;\n  rcSlice.col.step = rcSlice.col.step || 1;\n  ml = jStat.arange(rcSlice.row.start,\n                        Math.min(A.length, rcSlice.row.end),\n                        rcSlice.row.step);\n  nl = jStat.arange(rcSlice.col.start,\n                        Math.min(A[0].length, rcSlice.col.end),\n                        rcSlice.col.step);\n  ml.forEach(function(m, i) {\n    nl.forEach(function(n, j) {\n      A[m][n] = B[i][j];\n    });\n  });\n  return A;\n};\n\n\n// [1,2,3] ->\n// [[1,0,0],[0,2,0],[0,0,3]]\njStat.diagonal = function diagonal(diagArray) {\n  var mat = jStat.zeros(diagArray.length, diagArray.length);\n  diagArray.forEach(function(t, i) {\n    mat[i][i] = t;\n  });\n  return mat;\n};\n\n\n// return copy of A\njStat.copy = function copy(A) {\n  return A.map(function(row) {\n    if (isNumber(row))\n      return row;\n    return row.map(function(t) {\n      return t;\n    });\n  });\n};\n\n\n// TODO: Go over this entire implementation. Seems a tragic waste of resources\n// doing all this work. Instead, and while ugly, use new Function() to generate\n// a custom function for each static method.\n\n// Quick reference.\nvar jProto = jStat.prototype;\n\n// Default length.\njProto.length = 0;\n\n// For internal use only.\n// TODO: Check if they're actually used, and if they are then rename them\n// to _*\njProto.push = Array.prototype.push;\njProto.sort = Array.prototype.sort;\njProto.splice = Array.prototype.splice;\njProto.slice = Array.prototype.slice;\n\n\n// Return a clean array.\njProto.toArray = function toArray() {\n  return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n};\n\n\n// Map a function to a matrix or vector.\njProto.map = function map(func, toAlter) {\n  return jStat(jStat.map(this, func, toAlter));\n};\n\n\n// Cumulatively combine the elements of a matrix or vector using a function.\njProto.cumreduce = function cumreduce(func, toAlter) {\n  return jStat(jStat.cumreduce(this, func, toAlter));\n};\n\n\n// Destructively alter an array.\njProto.alter = function alter(func) {\n  jStat.alter(this, func);\n  return this;\n};\n\n\n// Extend prototype with methods that have no argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(func) {\n      var self = this,\n      results;\n      // Check for callback.\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self));\n        });\n        return this;\n      }\n      results = jStat[passfunc](this);\n      return isArray(results) ? jStat(results) : results;\n    };\n  })(funcs[i]);\n})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n\n// Extend prototype with methods that have one argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(index, func) {\n      var self = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self, index));\n        });\n        return this;\n      }\n      return jStat(jStat[passfunc](this, index));\n    };\n  })(funcs[i]);\n})('row col'.split(' '));\n\n\n// Extend prototype with simple shortcut methods.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('create zeros ones rand identity'.split(' '));\n\n\n// Exposing jStat.\nreturn jStat;\n\n}(Math));\n(function(jStat, Math) {\n\nvar isFunction = jStat.utils.isFunction;\n\n// Ascending functions for sort\nfunction ascNum(a, b) { return a - b; }\n\nfunction clip(arg, min, max) {\n  return Math.max(min, Math.min(arg, max));\n}\n\n\n// sum of an array\njStat.sum = function sum(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n\n// sum squared\njStat.sumsqrd = function sumsqrd(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i] * arr[i];\n  return sum;\n};\n\n\n// sum of squared errors of prediction (SSE)\njStat.sumsqerr = function sumsqerr(arr) {\n  var mean = jStat.mean(arr);\n  var sum = 0;\n  var i = arr.length;\n  var tmp;\n  while (--i >= 0) {\n    tmp = arr[i] - mean;\n    sum += tmp * tmp;\n  }\n  return sum;\n};\n\n// sum of an array in each row\njStat.sumrow = function sumrow(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n// product of an array\njStat.product = function product(arr) {\n  var prod = 1;\n  var i = arr.length;\n  while (--i >= 0)\n    prod *= arr[i];\n  return prod;\n};\n\n\n// minimum value of an array\njStat.min = function min(arr) {\n  var low = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] < low)\n      low = arr[i];\n  return low;\n};\n\n\n// maximum value of an array\njStat.max = function max(arr) {\n  var high = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] > high)\n      high = arr[i];\n  return high;\n};\n\n\n// unique values of an array\njStat.unique = function unique(arr) {\n  var hash = {}, _arr = [];\n  for(var i = 0; i < arr.length; i++) {\n    if (!hash[arr[i]]) {\n      hash[arr[i]] = true;\n      _arr.push(arr[i]);\n    }\n  }\n  return _arr;\n};\n\n\n// mean value of an array\njStat.mean = function mean(arr) {\n  return jStat.sum(arr) / arr.length;\n};\n\n\n// mean squared error (MSE)\njStat.meansqerr = function meansqerr(arr) {\n  return jStat.sumsqerr(arr) / arr.length;\n};\n\n\n// geometric mean of an array\njStat.geomean = function geomean(arr) {\n  return Math.pow(jStat.product(arr), 1 / arr.length);\n};\n\n\n// median of an array\njStat.median = function median(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  // check if array is even or odd, then return the appropriate\n  return !(arrlen & 1)\n    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2\n    : _arr[(arrlen / 2) | 0 ];\n};\n\n\n// cumulative sum of an array\njStat.cumsum = function cumsum(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a + b; });\n};\n\n\n// cumulative product of an array\njStat.cumprod = function cumprod(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a * b; });\n};\n\n\n// successive differences of a sequence\njStat.diff = function diff(arr) {\n  var diffs = [];\n  var arrLen = arr.length;\n  var i;\n  for (i = 1; i < arrLen; i++)\n    diffs.push(arr[i] - arr[i - 1]);\n  return diffs;\n};\n\n\n// ranks of an array\njStat.rank = function (arr) {\n  var arrlen = arr.length;\n  var sorted = arr.slice().sort(ascNum);\n  var ranks = new Array(arrlen);\n  var val;\n  for (var i = 0; i < arrlen; i++) {\n    var first = sorted.indexOf(arr[i]);\n    var last = sorted.lastIndexOf(arr[i]);\n    if (first === last) {\n      val = first;\n    } else {\n      val = (first + last) / 2;\n    }\n    ranks[i] = val + 1;\n  }\n  return ranks;\n};\n\n\n// mode of an array\n// if there are multiple modes of an array, return all of them\n// is this the appropriate way of handling it?\njStat.mode = function mode(arr) {\n  var arrLen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  var count = 1;\n  var maxCount = 0;\n  var numMaxCount = 0;\n  var mode_arr = [];\n  var i;\n\n  for (i = 0; i < arrLen; i++) {\n    if (_arr[i] === _arr[i + 1]) {\n      count++;\n    } else {\n      if (count > maxCount) {\n        mode_arr = [_arr[i]];\n        maxCount = count;\n        numMaxCount = 0;\n      }\n      // are there multiple max counts\n      else if (count === maxCount) {\n        mode_arr.push(_arr[i]);\n        numMaxCount++;\n      }\n      // resetting count for new value in array\n      count = 1;\n    }\n  }\n\n  return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n};\n\n\n// range of an array\njStat.range = function range(arr) {\n  return jStat.max(arr) - jStat.min(arr);\n};\n\n// variance of an array\n// flag = true indicates sample instead of population\njStat.variance = function variance(arr, flag) {\n  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n};\n\n// pooled variance of an array of arrays\njStat.pooledvariance = function pooledvariance(arr) {\n  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);\n  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);\n  return sumsqerr / (count - arr.length);\n};\n\n// deviation of an array\njStat.deviation = function (arr) {\n  var mean = jStat.mean(arr);\n  var arrlen = arr.length;\n  var dev = new Array(arrlen);\n  for (var i = 0; i < arrlen; i++) {\n    dev[i] = arr[i] - mean;\n  }\n  return dev;\n};\n\n// standard deviation of an array\n// flag = true indicates sample instead of population\njStat.stdev = function stdev(arr, flag) {\n  return Math.sqrt(jStat.variance(arr, flag));\n};\n\n// pooled standard deviation of an array of arrays\njStat.pooledstdev = function pooledstdev(arr) {\n  return Math.sqrt(jStat.pooledvariance(arr));\n};\n\n// mean deviation (mean absolute deviation) of an array\njStat.meandev = function meandev(arr) {\n  var mean = jStat.mean(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - mean));\n  }\n  return jStat.mean(a);\n};\n\n\n// median deviation (median absolute deviation) of an array\njStat.meddev = function meddev(arr) {\n  var median = jStat.median(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - median));\n  }\n  return jStat.median(a);\n};\n\n\n// coefficient of variation\njStat.coeffvar = function coeffvar(arr) {\n  return jStat.stdev(arr) / jStat.mean(arr);\n};\n\n\n// quartiles of an array\njStat.quartiles = function quartiles(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  return [\n    _arr[ Math.round((arrlen) / 4) - 1 ],\n    _arr[ Math.round((arrlen) / 2) - 1 ],\n    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]\n  ];\n};\n\n\n// Arbitary quantiles of an array. Direct port of the scipy.stats\n// implementation by Pierre GF Gerard-Marchant.\njStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n  var sortedArray = arr.slice().sort(ascNum);\n  var quantileVals = [quantilesArray.length];\n  var n = arr.length;\n  var i, p, m, aleph, k, gamma;\n\n  if (typeof alphap === 'undefined')\n    alphap = 3 / 8;\n  if (typeof betap === 'undefined')\n    betap = 3 / 8;\n\n  for (i = 0; i < quantilesArray.length; i++) {\n    p = quantilesArray[i];\n    m = alphap + p * (1 - alphap - betap);\n    aleph = n * p + m;\n    k = Math.floor(clip(aleph, 1, n - 1));\n    gamma = clip(aleph - k, 0, 1);\n    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n  }\n\n  return quantileVals;\n};\n\n// Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n// Passing true for the exclusive parameter excludes both endpoints of the range.\njStat.percentile = function percentile(arr, k, exclusive) {\n  var _arr = arr.slice().sort(ascNum);\n  var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n  var index = parseInt(realIndex);\n  var frac = realIndex - index;\n  if (index + 1 < _arr.length) {\n    return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n  } else {\n    return _arr[index - 1];\n  }\n}\n\n// The percentile rank of score in a given array. Returns the percentage\n// of all values in the input array that are less than (kind='strict') or\n// less or equal than (kind='weak') score. Default is weak.\njStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n  var counter = 0;\n  var len = arr.length;\n  var strict = false;\n  var value, i;\n\n  if (kind === 'strict')\n    strict = true;\n\n  for (i = 0; i < len; i++) {\n    value = arr[i];\n    if ((strict && value < score) ||\n        (!strict && value <= score)) {\n      counter++;\n    }\n  }\n\n  return counter / len;\n};\n\n\n// Histogram (bin count) data\njStat.histogram = function histogram(arr, binCnt) {\n  binCnt = binCnt || 4;\n  var first = jStat.min(arr);\n  var binWidth = (jStat.max(arr) - first) / binCnt;\n  var len = arr.length;\n  var bins = [];\n  var i;\n\n  for (i = 0; i < binCnt; i++)\n    bins[i] = 0;\n  for (i = 0; i < len; i++)\n    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;\n\n  return bins;\n};\n\n\n// covariance of two arrays\njStat.covariance = function covariance(arr1, arr2) {\n  var u = jStat.mean(arr1);\n  var v = jStat.mean(arr2);\n  var arr1Len = arr1.length;\n  var sq_dev = new Array(arr1Len);\n  var i;\n\n  for (i = 0; i < arr1Len; i++)\n    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n  return jStat.sum(sq_dev) / (arr1Len - 1);\n};\n\n\n// (pearson's) population correlation coefficient, rho\njStat.corrcoeff = function corrcoeff(arr1, arr2) {\n  return jStat.covariance(arr1, arr2) /\n      jStat.stdev(arr1, 1) /\n      jStat.stdev(arr2, 1);\n};\n\n  // (spearman's) rank correlation coefficient, sp\njStat.spearmancoeff =  function (arr1, arr2) {\n  arr1 = jStat.rank(arr1);\n  arr2 = jStat.rank(arr2);\n  //return pearson's correlation of the ranks:\n  return jStat.corrcoeff(arr1, arr2);\n}\n\n\n// statistical standardized moments (general form of skew/kurt)\njStat.stanMoment = function stanMoment(arr, n) {\n  var mu = jStat.mean(arr);\n  var sigma = jStat.stdev(arr);\n  var len = arr.length;\n  var skewSum = 0;\n\n  for (var i = 0; i < len; i++)\n    skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n  return skewSum / arr.length;\n};\n\n// (pearson's) moment coefficient of skewness\njStat.skewness = function skewness(arr) {\n  return jStat.stanMoment(arr, 3);\n};\n\n// (pearson's) (excess) kurtosis\njStat.kurtosis = function kurtosis(arr) {\n  return jStat.stanMoment(arr, 4) - 3;\n};\n\n\nvar jProto = jStat.prototype;\n\n\n// Extend jProto with method for calculating cumulative sums and products.\n// This differs from the similar extension below as cumsum and cumprod should\n// not be run again in the case fullbool === true.\n// If a matrix is passed, automatically assume operation should be done on the\n// columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('cumsum cumprod').split(' '));\n\n\n// Extend jProto with methods which don't require arguments and work on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        if (passfunc !== 'sumrow')\n          tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return fullbool === true\n            ? jStat[passfunc](jStat.utils.toVector(arr))\n            : arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +\n    'geomean median diff rank mode range variance deviation stdev meandev ' +\n    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n\n// Extend jProto with functions that take arguments. Operations on matrices are\n// done on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callbackFunction;\n\n      // If the last argument is a function, we assume it's a callback; we\n      // strip the callback out and call the function again.\n      if (isFunction(args[args.length - 1])) {\n        callbackFunction = args[args.length - 1];\n        var argsToPass = args.slice(0, args.length - 1);\n\n        setTimeout(function() {\n          callbackFunction.call(tmpthis,\n                                jProto[passfunc].apply(tmpthis, argsToPass));\n        });\n        return this;\n\n      // Otherwise we curry the function args and call normally.\n      } else {\n        callbackFunction = undefined;\n        var curriedFunction = function curriedFunction(vector) {\n          return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n        }\n      }\n\n      // If this is a matrix, run column-by-column.\n      if (this.length > 1) {\n        tmpthis = tmpthis.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = curriedFunction(tmpthis[i]);\n        return arr;\n      }\n\n      // Otherwise run on the vector.\n      return curriedFunction(this[0]);\n    };\n  })(funcs[i]);\n})('quantiles percentileOfScore'.split(' '));\n\n}(jStat, Math));\n// Special functions //\n(function(jStat, Math) {\n\n// Log-gamma function\njStat.gammaln = function gammaln(x) {\n  var j = 0;\n  var cof = [\n    76.18009172947146, -86.50532032941677, 24.01409824083091,\n    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n  ];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++)\n    ser += cof[j] / ++y;\n  return Math.log(2.5066282746310005 * ser / xx) - tmp;\n};\n\n/*\n * log-gamma function to support poisson distribution sampling. The\n * algorithm comes from SPECFUN by Shanjie Zhang and Jianming Jin and their\n * book \"Computation of Special Functions\", 1996, John Wiley & Sons, Inc.\n */\njStat.loggam = function loggam(x) {\n  var x0, x2, xp, gl, gl0;\n  var k, n;\n\n  var a = [8.333333333333333e-02, -2.777777777777778e-03,\n          7.936507936507937e-04, -5.952380952380952e-04,\n          8.417508417508418e-04, -1.917526917526918e-03,\n          6.410256410256410e-03, -2.955065359477124e-02,\n          1.796443723688307e-01, -1.39243221690590e+00];\n  x0 = x;\n  n = 0;\n  if ((x == 1.0) || (x == 2.0)) {\n      return 0.0;\n  }\n  if (x <= 7.0) {\n      n = Math.floor(7 - x);\n      x0 = x + n;\n  }\n  x2 = 1.0 / (x0 * x0);\n  xp = 2 * Math.PI;\n  gl0 = a[9];\n  for (k = 8; k >= 0; k--) {\n      gl0 *= x2;\n      gl0 += a[k];\n  }\n  gl = gl0 / x0 + 0.5 * Math.log(xp) + (x0 - 0.5) * Math.log(x0) - x0;\n  if (x <= 7.0) {\n      for (k = 1; k <= n; k++) {\n          gl -= Math.log(x0 - 1.0);\n          x0 -= 1.0;\n      }\n  }\n  return gl;\n}\n\n// gamma of x\njStat.gammafn = function gammafn(x) {\n  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n           629.3311553128184, 866.9662027904133, -31451.272968848367,\n           -36144.413418691176, 66456.14382024054\n  ];\n  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n           -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n           -134659.9598649693, -115132.2596755535];\n  var fact = false;\n  var n = 0;\n  var xden = 0;\n  var xnum = 0;\n  var y = x;\n  var i, z, yi, res;\n  if (y <= 0) {\n    res = y % 1 + 3.6e-16;\n    if (res) {\n      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n      y = 1 - y;\n    } else {\n      return Infinity;\n    }\n  }\n  yi = y;\n  if (y < 1) {\n    z = y++;\n  } else {\n    z = (y -= n = (y | 0) - 1) - 1;\n  }\n  for (i = 0; i < 8; ++i) {\n    xnum = (xnum + p[i]) * z;\n    xden = xden * z + q[i];\n  }\n  res = xnum / xden + 1;\n  if (yi < y) {\n    res /= yi;\n  } else if (yi > y) {\n    for (i = 0; i < n; ++i) {\n      res *= y;\n      y++;\n    }\n  }\n  if (fact) {\n    res = fact / res;\n  }\n  return res;\n};\n\n\n// lower incomplete gamma function, which is usually typeset with a\n// lower-case greek gamma as the function symbol\njStat.gammap = function gammap(a, x) {\n  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n};\n\n\n// The lower regularized incomplete gamma function, usually written P(a,x)\njStat.lowRegGamma = function lowRegGamma(a, x) {\n  var aln = jStat.gammaln(a);\n  var ap = a;\n  var sum = 1 / a;\n  var del = sum;\n  var b = x + 1 - a;\n  var c = 1 / 1.0e-30;\n  var d = 1 / b;\n  var h = d;\n  var i = 1;\n  // calculate maximum number of itterations required for a\n  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n  var an;\n\n  if (x < 0 || a <= 0) {\n    return NaN;\n  } else if (x < a + 1) {\n    for (; i <= ITMAX; i++) {\n      sum += del *= x / ++ap;\n    }\n    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n  }\n\n  for (; i <= ITMAX; i++) {\n    an = -i * (i - a);\n    b += 2;\n    d = an * d + b;\n    c = b + an / c;\n    d = 1 / d;\n    h *= d * c;\n  }\n\n  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n};\n\n// natural log factorial of n\njStat.factorialln = function factorialln(n) {\n  return n < 0 ? NaN : jStat.gammaln(n + 1);\n};\n\n// factorial of n\njStat.factorial = function factorial(n) {\n  return n < 0 ? NaN : jStat.gammafn(n + 1);\n};\n\n// combinations of n, m\njStat.combination = function combination(n, m) {\n  // make sure n or m don't exceed the upper limit of usable values\n  return (n > 170 || m > 170)\n      ? Math.exp(jStat.combinationln(n, m))\n      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);\n};\n\n\njStat.combinationln = function combinationln(n, m){\n  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n};\n\n\n// permutations of n, m\njStat.permutation = function permutation(n, m) {\n  return jStat.factorial(n) / jStat.factorial(n - m);\n};\n\n\n// beta function\njStat.betafn = function betafn(x, y) {\n  // ensure arguments are positive\n  if (x <= 0 || y <= 0)\n    return undefined;\n  // make sure x + y doesn't exceed the upper limit of usable values\n  return (x + y > 170)\n      ? Math.exp(jStat.betaln(x, y))\n      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n};\n\n\n// natural logarithm of beta function\njStat.betaln = function betaln(x, y) {\n  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n};\n\n\n// Evaluates the continued fraction for incomplete beta function by modified\n// Lentz's method.\njStat.betacf = function betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q's will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin)\n    d = fpmin;\n  d = 1 / d;\n  h = d;\n\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7)\n      break;\n  }\n\n  return h;\n};\n\n\n// Returns the inverse of the lower regularized inomplete gamma function\njStat.gammapinv = function gammapinv(p, a) {\n  var j = 0;\n  var a1 = a - 1;\n  var EPS = 1e-8;\n  var gln = jStat.gammaln(a);\n  var x, err, t, u, pp, lna1, afac;\n\n  if (p >= 1)\n    return Math.max(100, a + 100 * Math.sqrt(a));\n  if (p <= 0)\n    return 0;\n  if (a > 1) {\n    lna1 = Math.log(a1);\n    afac = Math.exp(a1 * (lna1 - 1) - gln);\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    x = Math.max(1e-3,\n                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n  } else {\n    t = 1 - a * (0.253 + a * 0.12);\n    if (p < t)\n      x = Math.pow(p / t, 1 / a);\n    else\n      x = 1 - Math.log(1 - (p - t) / (1 - t));\n  }\n\n  for(; j < 12; j++) {\n    if (x <= 0)\n      return 0;\n    err = jStat.lowRegGamma(a, x) - p;\n    if (a > 1)\n      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n    else\n      t = Math.exp(-x + a1 * Math.log(x) - gln);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (Math.abs(t) < EPS * x)\n      break;\n  }\n\n  return x;\n};\n\n\n// Returns the error function erf(x)\njStat.erf = function erf(x) {\n  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n             -6.886027e-12, 8.94487e-13, 3.13092e-13,\n             -1.12708e-13, 3.81e-16, 7.106e-15,\n             -1.523e-15, -9.4e-17, 1.21e-16,\n             -2.8e-17];\n  var j = cof.length - 1;\n  var isneg = false;\n  var d = 0;\n  var dd = 0;\n  var t, ty, tmp, res;\n\n  if (x < 0) {\n    x = -x;\n    isneg = true;\n  }\n\n  t = 2 / (2 + x);\n  ty = 4 * t - 2;\n\n  for(; j > 0; j--) {\n    tmp = d;\n    d = ty * d - dd + cof[j];\n    dd = tmp;\n  }\n\n  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n  return isneg ? res - 1 : 1 - res;\n};\n\n\n// Returns the complmentary error function erfc(x)\njStat.erfc = function erfc(x) {\n  return 1 - jStat.erf(x);\n};\n\n\n// Returns the inverse of the complementary error function\njStat.erfcinv = function erfcinv(p) {\n  var j = 0;\n  var x, err, t, pp;\n  if (p >= 2)\n    return -100;\n  if (p <= 0)\n    return 100;\n  pp = (p < 1) ? p : 2 - p;\n  t = Math.sqrt(-2 * Math.log(pp / 2));\n  x = -0.70711 * ((2.30753 + t * 0.27061) /\n                  (1 + t * (0.99229 + t * 0.04481)) - t);\n  for (; j < 2; j++) {\n    err = jStat.erfc(x) - pp;\n    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n  }\n  return (p < 1) ? x : -x;\n};\n\n\n// Returns the inverse of the incomplete beta function\njStat.ibetainv = function ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0)\n    return 0;\n  if (p >= 1)\n    return 1;\n  if (a >= 1 && b >= 1) {\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));\n    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n        (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w)\n      x = Math.pow(a * w * p, 1 / a);\n    else\n      x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n  for(; j < 10; j++) {\n    if (x === 0 || x === 1)\n      return x;\n    err = jStat.ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (x >= 1)\n      x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0)\n      break;\n  }\n  return x;\n};\n\n\n// Returns the incomplete beta function I_x(a,b)\njStat.ibeta = function ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = (x === 0 || x === 1) ?  0 :\n    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -\n             jStat.gammaln(b) + a * Math.log(x) + b *\n             Math.log(1 - x));\n  if (x < 0 || x > 1)\n    return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * jStat.betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n};\n\n\n// Returns a normal deviate (mu=0, sigma=1).\n// If n and m are specified it returns a object of normal deviates.\njStat.randn = function randn(n, m) {\n  var u, v, x, y, q;\n  if (!m)\n    m = n;\n  if (n)\n    return jStat.create(n, m, function() { return jStat.randn(); });\n  do {\n    u = jStat._random_fn();\n    v = 1.7156 * (jStat._random_fn() - 0.5);\n    x = u - 0.449871;\n    y = Math.abs(v) + 0.386595;\n    q = x * x + y * (0.19600 * y - 0.25472 * x);\n  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n  return v / u;\n};\n\n\n// Returns a gamma deviate by the method of Marsaglia and Tsang.\njStat.randg = function randg(shape, n, m) {\n  var oalph = shape;\n  var a1, a2, u, v, x, mat;\n  if (!m)\n    m = n;\n  if (!shape)\n    shape = 1;\n  if (n) {\n    mat = jStat.zeros(n,m);\n    mat.alter(function() { return jStat.randg(shape); });\n    return mat;\n  }\n  if (shape < 1)\n    shape += 1;\n  a1 = shape - 1 / 3;\n  a2 = 1 / Math.sqrt(9 * a1);\n  do {\n    do {\n      x = jStat.randn();\n      v = 1 + a2 * x;\n    } while(v <= 0);\n    v = v * v * v;\n    u = jStat._random_fn();\n  } while(u > 1 - 0.331 * Math.pow(x, 4) &&\n          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));\n  // alpha > 1\n  if (shape == oalph)\n    return a1 * v;\n  // alpha < 1\n  do {\n    u = jStat._random_fn();\n  } while(u === 0);\n  return Math.pow(u, 1 / oalph) * a1 * v;\n};\n\n\n// making use of static methods on the instance\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(\n          jStat.map(this, function(value) { return jStat[passfunc](value); }));\n    }\n  })(funcs[i]);\n})('gammaln gammafn factorial factorialln'.split(' '));\n\n\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('randn'.split(' '));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\n// generate all distribution instance methods\n(function(list) {\n  for (var i = 0; i < list.length; i++) (function(func) {\n    // distribution instance method\n    jStat[func] = function(a, b, c) {\n      if (!(this instanceof arguments.callee))\n        return new arguments.callee(a, b, c);\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      return this;\n    };\n    // distribution method to be used on a jStat instance\n    jStat.fn[func] = function(a, b, c) {\n      var newthis = jStat[func](a, b, c);\n      newthis.data = this;\n      return newthis;\n    };\n    // sample instance method\n    jStat[func].prototype.sample = function(arr) {\n      var a = this._a;\n      var b = this._b;\n      var c = this._c;\n      if (arr)\n        return jStat.alter(arr, function() {\n          return jStat[func].sample(a, b, c);\n        });\n      else\n        return jStat[func].sample(a, b, c);\n    };\n    // generate the pdf, cdf and inv instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function(x) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (!x && x !== 0)\n            x = this.data;\n          if (typeof x !== 'number') {\n            return jStat.fn.map.call(x, function(x) {\n              return jStat[func][fnfunc](x, a, b, c);\n            });\n          }\n          return jStat[func][fnfunc](x, a, b, c);\n        };\n      })(vals[i]);\n    })('pdf cdf inv'.split(' '));\n    // generate the mean, median, mode and variance instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function() {\n          return jStat[func][fnfunc](this._a, this._b, this._c);\n        };\n      })(vals[i]);\n    })('mean median mode variance'.split(' '));\n  })(list[i]);\n})((\n  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +\n  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +\n  'binomial negbin hypgeom poisson triangular tukey arcsine'\n).split(' '));\n\n\n\n// extend beta function with static methods\njStat.extend(jStat.beta, {\n  pdf: function pdf(x, alpha, beta) {\n    // PDF is zero outside the support\n    if (x > 1 || x < 0)\n      return 0;\n    // PDF is one for the uniform case\n    if (alpha == 1 && beta == 1)\n      return 1;\n\n    if (alpha < 512 && beta < 512) {\n      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n          jStat.betafn(alpha, beta);\n    } else {\n      return Math.exp((alpha - 1) * Math.log(x) +\n                      (beta - 1) * Math.log(1 - x) -\n                      jStat.betaln(alpha, beta));\n    }\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n  },\n\n  inv: function inv(x, alpha, beta) {\n    return jStat.ibetainv(x, alpha, beta);\n  },\n\n  mean: function mean(alpha, beta) {\n    return alpha / (alpha + beta);\n  },\n\n  median: function median(alpha, beta) {\n    return jStat.ibetainv(0.5, alpha, beta);\n  },\n\n  mode: function mode(alpha, beta) {\n    return (alpha - 1 ) / ( alpha + beta - 2);\n  },\n\n  // return a random sample\n  sample: function sample(alpha, beta) {\n    var u = jStat.randg(alpha);\n    return u / (u + jStat.randg(beta));\n  },\n\n  variance: function variance(alpha, beta) {\n    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n  }\n});\n\n// extend F function with static methods\njStat.extend(jStat.centralF, {\n  // This implementation of the pdf function avoids float overflow\n  // See the way that R calculates this value:\n  // https://svn.r-project.org/R/trunk/src/nmath/df.c\n  pdf: function pdf(x, df1, df2) {\n    var p, q, f;\n\n    if (x < 0)\n      return 0;\n\n    if (df1 <= 2) {\n      if (x === 0 && df1 < 2) {\n        return Infinity;\n      }\n      if (x === 0 && df1 === 2) {\n        return 1;\n      }\n      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *\n              Math.pow(df1 / df2, df1 / 2) *\n              Math.pow(x, (df1/2) - 1) *\n              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n    }\n\n    p = (df1 * x) / (df2 + x * df1);\n    q = df2 / (df2 + x * df1);\n    f = df1 * q / 2.0;\n    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n  },\n\n  cdf: function cdf(x, df1, df2) {\n    if (x < 0)\n      return 0;\n    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n  },\n\n  inv: function inv(x, df1, df2) {\n    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n  },\n\n  mean: function mean(df1, df2) {\n    return (df2 > 2) ? df2 / (df2 - 2) : undefined;\n  },\n\n  mode: function mode(df1, df2) {\n    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;\n  },\n\n  // return a random sample\n  sample: function sample(df1, df2) {\n    var x1 = jStat.randg(df1 / 2) * 2;\n    var x2 = jStat.randg(df2 / 2) * 2;\n    return (x1 / df1) / (x2 / df2);\n  },\n\n  variance: function variance(df1, df2) {\n    if (df2 <= 4)\n      return undefined;\n    return 2 * df2 * df2 * (df1 + df2 - 2) /\n        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n  }\n});\n\n\n// extend cauchy function with static methods\njStat.extend(jStat.cauchy, {\n  pdf: function pdf(x, local, scale) {\n    if (scale < 0) { return 0; }\n\n    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;\n  },\n\n  cdf: function cdf(x, local, scale) {\n    return Math.atan((x - local) / scale) / Math.PI + 0.5;\n  },\n\n  inv: function(p, local, scale) {\n    return local + scale * Math.tan(Math.PI * (p - 0.5));\n  },\n\n  median: function median(local/*, scale*/) {\n    return local;\n  },\n\n  mode: function mode(local/*, scale*/) {\n    return local;\n  },\n\n  sample: function sample(local, scale) {\n    return jStat.randn() *\n        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n  }\n});\n\n\n\n// extend chisquare function with static methods\njStat.extend(jStat.chisquare, {\n  pdf: function pdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && dof === 2) ? 0.5 :\n        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                 Math.log(2) - jStat.gammaln(dof / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(dof / 2, x / 2);\n  },\n\n  inv: function(p, dof) {\n    return 2 * jStat.gammapinv(p, 0.5 * dof);\n  },\n\n  mean : function(dof) {\n    return dof;\n  },\n\n  // TODO: this is an approximation (is there a better way?)\n  median: function median(dof) {\n    return dof * Math.pow(1 - (2 / (9 * dof)), 3);\n  },\n\n  mode: function mode(dof) {\n    return (dof - 2 > 0) ? dof - 2 : 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randg(dof / 2) * 2;\n  },\n\n  variance: function variance(dof) {\n    return 2 * dof;\n  }\n});\n\n\n\n// extend exponential function with static methods\njStat.extend(jStat.exponential, {\n  pdf: function pdf(x, rate) {\n    return x < 0 ? 0 : rate * Math.exp(-rate * x);\n  },\n\n  cdf: function cdf(x, rate) {\n    return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n  },\n\n  inv: function(p, rate) {\n    return -Math.log(1 - p) / rate;\n  },\n\n  mean : function(rate) {\n    return 1 / rate;\n  },\n\n  median: function (rate) {\n    return (1 / rate) * Math.log(2);\n  },\n\n  mode: function mode(/*rate*/) {\n    return 0;\n  },\n\n  sample: function sample(rate) {\n    return -1 / rate * Math.log(jStat._random_fn());\n  },\n\n  variance : function(rate) {\n    return Math.pow(rate, -2);\n  }\n});\n\n\n\n// extend gamma function with static methods\njStat.extend(jStat.gamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                    jStat.gammaln(shape) - shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(shape, x / scale);\n  },\n\n  inv: function(p, shape, scale) {\n    return jStat.gammapinv(p, shape) * scale;\n  },\n\n  mean : function(shape, scale) {\n    return shape * scale;\n  },\n\n  mode: function mode(shape, scale) {\n    if(shape > 1) return (shape - 1) * scale;\n    return undefined;\n  },\n\n  sample: function sample(shape, scale) {\n    return jStat.randg(shape) * scale;\n  },\n\n  variance: function variance(shape, scale) {\n    return shape * scale * scale;\n  }\n});\n\n// extend inverse gamma function with static methods\njStat.extend(jStat.invgamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -\n                    jStat.gammaln(shape) + shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return 1 - jStat.lowRegGamma(shape, scale / x);\n  },\n\n  inv: function(p, shape, scale) {\n    return scale / jStat.gammapinv(1 - p, shape);\n  },\n\n  mean : function(shape, scale) {\n    return (shape > 1) ? scale / (shape - 1) : undefined;\n  },\n\n  mode: function mode(shape, scale) {\n    return scale / (shape + 1);\n  },\n\n  sample: function sample(shape, scale) {\n    return scale / jStat.randg(shape);\n  },\n\n  variance: function variance(shape, scale) {\n    if (shape <= 2)\n      return undefined;\n    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n  }\n});\n\n\n// extend kumaraswamy function with static methods\njStat.extend(jStat.kumaraswamy, {\n  pdf: function pdf(x, alpha, beta) {\n    if (x === 0 && alpha === 1)\n      return beta;\n    else if (x === 1 && beta === 1)\n      return alpha;\n    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *\n                    Math.log(x) + (beta - 1) *\n                    Math.log(1 - Math.pow(x, alpha)));\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    if (x < 0)\n      return 0;\n    else if (x > 1)\n      return 1;\n    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));\n  },\n\n  inv: function inv(p, alpha, beta) {\n    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n  },\n\n  mean : function(alpha, beta) {\n    return (beta * jStat.gammafn(1 + 1 / alpha) *\n            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));\n  },\n\n  median: function median(alpha, beta) {\n    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n  },\n\n  mode: function mode(alpha, beta) {\n    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n      return undefined;\n    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n  },\n\n  variance: function variance(/*alpha, beta*/) {\n    throw new Error('variance not yet implemented');\n    // TODO: complete this\n  }\n});\n\n\n\n// extend lognormal function with static methods\njStat.extend(jStat.lognormal, {\n  pdf: function pdf(x, mu, sigma) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n                    (2 * sigma * sigma));\n  },\n\n  cdf: function cdf(x, mu, sigma) {\n    if (x < 0)\n      return 0;\n    return 0.5 +\n        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n  },\n\n  inv: function(p, mu, sigma) {\n    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n  },\n\n  mean: function mean(mu, sigma) {\n    return Math.exp(mu + sigma * sigma / 2);\n  },\n\n  median: function median(mu/*, sigma*/) {\n    return Math.exp(mu);\n  },\n\n  mode: function mode(mu, sigma) {\n    return Math.exp(mu - sigma * sigma);\n  },\n\n  sample: function sample(mu, sigma) {\n    return Math.exp(jStat.randn() * sigma + mu);\n  },\n\n  variance: function variance(mu, sigma) {\n    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n  }\n});\n\n\n\n// extend noncentralt function with static methods\njStat.extend(jStat.noncentralt, {\n  pdf: function pdf(x, dof, ncp) {\n    var tol = 1e-14;\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.pdf(x, dof)\n\n    if (Math.abs(x) < tol) {  // different formula for x == 0\n      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -\n                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n    }\n\n    // formula for x != 0\n    return dof / x *\n        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -\n         jStat.noncentralt.cdf(x, dof, ncp));\n  },\n\n  cdf: function cdf(x, dof, ncp) {\n    var tol = 1e-14;\n    var min_iterations = 200;\n\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.cdf(x, dof);\n\n    // turn negative x into positive and flip result afterwards\n    var flip = false;\n    if (x < 0) {\n      flip = true;\n      ncp = -ncp;\n    }\n\n    var prob = jStat.normal.cdf(-ncp, 0, 1);\n    var value = tol + 1;\n    // use value at last two steps to determine convergence\n    var lastvalue = value;\n    var y = x * x / (x * x + dof);\n    var j = 0;\n    var p = Math.exp(-ncp * ncp / 2);\n    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -\n                     jStat.gammaln(3 / 2)) * ncp;\n    while (j < min_iterations || lastvalue > tol || value > tol) {\n      lastvalue = value;\n      if (j > 0) {\n        p *= (ncp * ncp) / (2 * j);\n        q *= (ncp * ncp) / (2 * (j + 1 / 2));\n      }\n      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +\n          q * jStat.beta.cdf(y, j+1, dof/2);\n      prob += 0.5 * value;\n      j++;\n    }\n\n    return flip ? (1 - prob) : prob;\n  }\n});\n\n\n// extend normal function with static methods\njStat.extend(jStat.normal, {\n  pdf: function pdf(x, mean, std) {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n  },\n\n  cdf: function cdf(x, mean, std) {\n    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n  },\n\n  inv: function(p, mean, std) {\n    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n  },\n\n  mean : function(mean/*, std*/) {\n    return mean;\n  },\n\n  median: function median(mean/*, std*/) {\n    return mean;\n  },\n\n  mode: function (mean/*, std*/) {\n    return mean;\n  },\n\n  sample: function sample(mean, std) {\n    return jStat.randn() * std + mean;\n  },\n\n  variance : function(mean, std) {\n    return std * std;\n  }\n});\n\n\n\n// extend pareto function with static methods\njStat.extend(jStat.pareto, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return 1 - Math.pow(scale / x, shape);\n  },\n\n  inv: function inv(p, scale, shape) {\n    return scale / Math.pow(1 - p, 1 / shape);\n  },\n\n  mean: function mean(scale, shape) {\n    if (shape <= 1)\n      return undefined;\n    return (shape * Math.pow(scale, shape)) / (shape - 1);\n  },\n\n  median: function median(scale, shape) {\n    return scale * (shape * Math.SQRT2);\n  },\n\n  mode: function mode(scale/*, shape*/) {\n    return scale;\n  },\n\n  variance : function(scale, shape) {\n    if (shape <= 2)\n      return undefined;\n    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));\n  }\n});\n\n\n\n// extend studentt function with static methods\njStat.extend(jStat.studentt, {\n  pdf: function pdf(x, dof) {\n    dof = dof > 1e100 ? 1e100 : dof;\n    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *\n        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    var dof2 = dof / 2;\n    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /\n                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n  },\n\n  inv: function(p, dof) {\n    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt(dof * (1 - x) / x);\n    return (p > 0.5) ? x : -x;\n  },\n\n  mean: function mean(dof) {\n    return (dof > 1) ? 0 : undefined;\n  },\n\n  median: function median(/*dof*/) {\n    return 0;\n  },\n\n  mode: function mode(/*dof*/) {\n    return 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n  },\n\n  variance: function variance(dof) {\n    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;\n  }\n});\n\n\n\n// extend weibull function with static methods\njStat.extend(jStat.weibull, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < 0 || scale < 0 || shape < 0)\n      return 0;\n    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n        Math.exp(-(Math.pow((x / scale), shape)));\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n  },\n\n  inv: function(p, scale, shape) {\n    return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n  },\n\n  mean : function(scale, shape) {\n    return scale * jStat.gammafn(1 + 1 / shape);\n  },\n\n  median: function median(scale, shape) {\n    return scale * Math.pow(Math.log(2), 1 / shape);\n  },\n\n  mode: function mode(scale, shape) {\n    if (shape <= 1)\n      return 0;\n    return scale * Math.pow((shape - 1) / shape, 1 / shape);\n  },\n\n  sample: function sample(scale, shape) {\n    return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n  },\n\n  variance: function variance(scale, shape) {\n    return scale * scale * jStat.gammafn(1 + 2 / shape) -\n        Math.pow(jStat.weibull.mean(scale, shape), 2);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.uniform, {\n  pdf: function pdf(x, a, b) {\n    return (x < a || x > b) ? 0 : 1 / (b - a);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (x - a) / (b - a);\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (p * (b - a));\n  },\n\n  mean: function mean(a, b) {\n    return 0.5 * (a + b);\n  },\n\n  median: function median(a, b) {\n    return jStat.mean(a, b);\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n  },\n\n  variance: function variance(a, b) {\n    return Math.pow(b - a, 2) / 12;\n  }\n});\n\n\n// Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\nfunction betinc(x, a, b, eps) {\n  var a0 = 0;\n  var b0 = 1;\n  var a1 = 1;\n  var b1 = 1;\n  var m9 = 0;\n  var a2 = 0;\n  var c9;\n\n  while (Math.abs((a1 - a2) / a1) > eps) {\n    a2 = a1;\n    c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n    a0 = a1 + c9 * a0;\n    b0 = b1 + c9 * b0;\n    m9 = m9 + 1;\n    c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n    a1 = a0 + c9 * a1;\n    b1 = b0 + c9 * b1;\n    a0 = a0 / b1;\n    b0 = b0 / b1;\n    a1 = a1 / b1;\n    b1 = 1;\n  }\n\n  return a1 / a;\n}\n\n\n// extend uniform function with static methods\njStat.extend(jStat.binomial, {\n  pdf: function pdf(k, n, p) {\n    return (p === 0 || p === 1) ?\n      ((n * p) === k ? 1 : 0) :\n      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n  },\n\n  cdf: function cdf(x, n, p) {\n    var betacdf;\n    var eps = 1e-10;\n\n    if (x < 0)\n      return 0;\n    if (x >= n)\n      return 1;\n    if (p < 0 || p > 1 || n <= 0)\n      return NaN;\n\n    x = Math.floor(x);\n    var z = p;\n    var a = x + 1;\n    var b = n - x;\n    var s = a + b;\n    var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) -\n                      jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n\n    if (z < (a + 1) / (s + 2))\n      betacdf = bt * betinc(z, a, b, eps);\n    else\n      betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n\n    return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.negbin, {\n  pdf: function pdf(k, r, p) {\n    if (k !== k >>> 0)\n      return false;\n    if (k < 0)\n      return 0;\n    return jStat.combination(k + r - 1, r - 1) *\n        Math.pow(1 - p, k) * Math.pow(p, r);\n  },\n\n  cdf: function cdf(x, r, p) {\n    var sum = 0,\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sum += jStat.negbin.pdf(k, r, p);\n    }\n    return sum;\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.hypgeom, {\n  pdf: function pdf(k, N, m, n) {\n    // Hypergeometric PDF.\n\n    // A simplification of the CDF algorithm below.\n\n    // k = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(k !== k | 0) {\n      return false;\n    } else if(k < 0 || k < m - (N - n)) {\n      // It's impossible to have this few successes drawn.\n      return 0;\n    } else if(k > n || k > m) {\n      // It's impossible to have this many successes drawn.\n      return 0;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return jStat.hypgeom.pdf(m - k, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.pdf(k, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate product to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < k; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledPDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          scaledPDF *= 1 - (m / (N - samplesDone));\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledPDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledPDF));\n    }\n  },\n\n  cdf: function cdf(x, N, m, n) {\n    // Hypergeometric CDF.\n\n    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n    // and comes from his hypergeometric test calculator at\n    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n    // x = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(x < 0 || x < m - (N - n)) {\n      // It's impossible to have this few successes drawn or fewer.\n      return 0;\n    } else if(x >= n || x >= m) {\n      // We will always have this many successes or fewer.\n      return 1;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.cdf(x, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate sum to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // Holds the intermediate, scaled total CDF.\n      var scaledCDF = 1;\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < x; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledCDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          var factor = 1 - (m / (N - samplesDone));\n\n          scaledPDF *= factor;\n          scaledCDF *= factor;\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n        // Add to the CDF answer.\n        scaledCDF += scaledPDF;\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledCDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledCDF));\n    }\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.poisson, {\n  pdf: function pdf(k, l) {\n    if (l < 0 || (k % 1) !== 0 || k < 0) {\n      return 0;\n    }\n\n    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n  },\n\n  cdf: function cdf(x, l) {\n    var sumarr = [],\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sumarr.push(jStat.poisson.pdf(k, l));\n    }\n    return jStat.sum(sumarr);\n  },\n\n  mean : function(l) {\n    return l;\n  },\n\n  variance : function(l) {\n    return l;\n  },\n\n  sampleSmall: function sampleSmall(l) {\n    var p = 1, k = 0, L = Math.exp(-l);\n    do {\n      k++;\n      p *= jStat._random_fn();\n    } while (p > L);\n    return k - 1;\n  },\n\n  sampleLarge: function sampleLarge(l) {\n    var lam = l;\n    var k;\n    var U, V, slam, loglam, a, b, invalpha, vr, us;\n\n    slam = Math.sqrt(lam);\n    loglam = Math.log(lam);\n    b = 0.931 + 2.53 * slam;\n    a = -0.059 + 0.02483 * b;\n    invalpha = 1.1239 + 1.1328 / (b - 3.4);\n    vr = 0.9277 - 3.6224 / (b - 2);\n\n    while (1) {\n      U = Math.random() - 0.5;\n      V = Math.random();\n      us = 0.5 - Math.abs(U);\n      k = Math.floor((2 * a / us + b) * U + lam + 0.43);\n      if ((us >= 0.07) && (V <= vr)) {\n          return k;\n      }\n      if ((k < 0) || ((us < 0.013) && (V > us))) {\n          continue;\n      }\n      /* log(V) == log(0.0) ok here */\n      /* if U==0.0 so that us==0.0, log is ok since always returns */\n      if ((Math.log(V) + Math.log(invalpha) - Math.log(a / (us * us) + b)) <= (-lam + k * loglam - jStat.loggam(k + 1))) {\n          return k;\n      }\n    }\n  },\n\n  sample: function sample(l) {\n    if (l < 10)\n      return this.sampleSmall(l);\n    else\n      return this.sampleLarge(l);\n  }\n});\n\n// extend triangular function with static methods\njStat.extend(jStat.triangular, {\n  pdf: function pdf(x, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (x < a || x > b) {\n        return 0;\n      } else if (x < c) {\n          return (2 * (x - a)) / ((b - a) * (c - a));\n      } else if (x === c) {\n          return (2 / (b - a));\n      } else { // x > c\n          return (2 * (b - x)) / ((b - a) * (b - c));\n      }\n    }\n  },\n\n  cdf: function cdf(x, a, b, c) {\n    if (b <= a || c < a || c > b)\n      return NaN;\n    if (x <= a)\n      return 0;\n    else if (x >= b)\n      return 1;\n    if (x <= c)\n      return Math.pow(x - a, 2) / ((b - a) * (c - a));\n    else // x > c\n      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n  },\n\n  inv: function inv(p, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (p <= ((c - a) / (b - a))) {\n        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n      } else { // p > ((c - a) / (b - a))\n        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));\n      }\n    }\n  },\n\n  mean: function mean(a, b, c) {\n    return (a + b + c) / 3;\n  },\n\n  median: function median(a, b, c) {\n    if (c <= (a + b) / 2) {\n      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n    } else if (c > (a + b) / 2) {\n      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n    }\n  },\n\n  mode: function mode(a, b, c) {\n    return c;\n  },\n\n  sample: function sample(a, b, c) {\n    var u = jStat._random_fn();\n    if (u < ((c - a) / (b - a)))\n      return a + Math.sqrt(u * (b - a) * (c - a))\n    return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n  },\n\n  variance: function variance(a, b, c) {\n    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n  }\n});\n\n\n// extend arcsine function with static methods\njStat.extend(jStat.arcsine, {\n  pdf: function pdf(x, a, b) {\n    if (b <= a) return NaN;\n\n    return (x <= a || x >= b) ? 0 :\n      (2 / Math.PI) *\n        Math.pow(Math.pow(b - a, 2) -\n                  Math.pow(2 * x - a - b, 2), -0.5);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n  },\n\n  mean: function mean(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  median: function median(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return ((a + b) / 2) + ((b - a) / 2) *\n      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n  },\n\n  variance: function variance(a, b) {\n    if (b <= a) return NaN;\n    return Math.pow(b - a, 2) / 8;\n  }\n});\n\n\nfunction laplaceSign(x) { return x / Math.abs(x); }\n\njStat.extend(jStat.laplace, {\n  pdf: function pdf(x, mu, b) {\n    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);\n  },\n\n  cdf: function cdf(x, mu, b) {\n    if (b <= 0) { return 0; }\n\n    if(x < mu) {\n      return 0.5 * Math.exp((x - mu) / b);\n    } else {\n      return 1 - 0.5 * Math.exp(- (x - mu) / b);\n    }\n  },\n\n  mean: function(mu/*, b*/) {\n    return mu;\n  },\n\n  median: function(mu/*, b*/) {\n    return mu;\n  },\n\n  mode: function(mu/*, b*/) {\n    return mu;\n  },\n\n  variance: function(mu, b) {\n    return 2 * b * b;\n  },\n\n  sample: function sample(mu, b) {\n    var u = jStat._random_fn() - 0.5;\n\n    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));\n  }\n});\n\nfunction tukeyWprob(w, rr, cc) {\n  var nleg = 12;\n  var ihalf = 6;\n\n  var C1 = -30;\n  var C2 = -50;\n  var C3 = 60;\n  var bb   = 8;\n  var wlar = 3;\n  var wincr1 = 2;\n  var wincr2 = 3;\n  var xleg = [\n    0.981560634246719250690549090149,\n    0.904117256370474856678465866119,\n    0.769902674194304687036893833213,\n    0.587317954286617447296702418941,\n    0.367831498998180193752691536644,\n    0.125233408511468915472441369464\n  ];\n  var aleg = [\n    0.047175336386511827194615961485,\n    0.106939325995318430960254718194,\n    0.160078328543346226334652529543,\n    0.203167426723065921749064455810,\n    0.233492536538354808760849898925,\n    0.249147045813402785000562436043\n  ];\n\n  var qsqz = w * 0.5;\n\n  // if w >= 16 then the integral lower bound (occurs for c=20)\n  // is 0.99999999999995 so return a value of 1.\n\n  if (qsqz >= bb)\n    return 1.0;\n\n  // find (f(w/2) - 1) ^ cc\n  // (first term in integral of hartley's form).\n\n  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n  // if pr_w ^ cc < 2e-22 then set pr_w = 0\n  if (pr_w >= Math.exp(C2 / cc))\n    pr_w = Math.pow(pr_w, cc);\n  else\n    pr_w = 0.0;\n\n  // if w is large then the second component of the\n  // integral is small, so fewer intervals are needed.\n\n  var wincr;\n  if (w > wlar)\n    wincr = wincr1;\n  else\n    wincr = wincr2;\n\n  // find the integral of second term of hartley's form\n  // for the integral of the range for equal-length\n  // intervals using legendre quadrature.  limits of\n  // integration are from (w/2, 8).  two or three\n  // equal-length intervals are used.\n\n  // blb and bub are lower and upper limits of integration.\n\n  var blb = qsqz;\n  var binc = (bb - qsqz) / wincr;\n  var bub = blb + binc;\n  var einsum = 0.0;\n\n  // integrate over each interval\n\n  var cc1 = cc - 1.0;\n  for (var wi = 1; wi <= wincr; wi++) {\n    var elsum = 0.0;\n    var a = 0.5 * (bub + blb);\n\n    // legendre quadrature with order = nleg\n\n    var b = 0.5 * (bub - blb);\n\n    for (var jj = 1; jj <= nleg; jj++) {\n      var j, xx;\n      if (ihalf < jj) {\n        j = (nleg - jj) + 1;\n        xx = xleg[j-1];\n      } else {\n        j = jj;\n        xx = -xleg[j-1];\n      }\n      var c = b * xx;\n      var ac = a + c;\n\n      // if exp(-qexpo/2) < 9e-14,\n      // then doesn't contribute to integral\n\n      var qexpo = ac * ac;\n      if (qexpo > C3)\n        break;\n\n      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n      // if rinsum ^ (cc-1) < 9e-14,\n      // then doesn't contribute to integral\n\n      var rinsum = (pplus * 0.5) - (pminus * 0.5);\n      if (rinsum >= Math.exp(C1 / cc1)) {\n        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  // if pr_w ^ rr < 9e-14, then return 0\n  pr_w += einsum;\n  if (pr_w <= Math.exp(C1 / rr))\n    return 0;\n\n  pr_w = Math.pow(pr_w, rr);\n  if (pr_w >= 1) // 1 was iMax was eps\n    return 1;\n  return pr_w;\n}\n\nfunction tukeyQinv(p, c, v) {\n  var p0 = 0.322232421088;\n  var q0 = 0.993484626060e-01;\n  var p1 = -1.0;\n  var q1 = 0.588581570495;\n  var p2 = -0.342242088547;\n  var q2 = 0.531103462366;\n  var p3 = -0.204231210125;\n  var q3 = 0.103537752850;\n  var p4 = -0.453642210148e-04;\n  var q4 = 0.38560700634e-02;\n  var c1 = 0.8832;\n  var c2 = 0.2368;\n  var c3 = 1.214;\n  var c4 = 1.208;\n  var c5 = 1.4142;\n  var vmax = 120.0;\n\n  var ps = 0.5 - 0.5 * p;\n  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)\n     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  var q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * Math.log(c - 1.0) + c5);\n}\n\njStat.extend(jStat.tukey, {\n  cdf: function cdf(q, nmeans, df) {\n    // Identical implementation as the R ptukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var nlegq = 16;\n    var ihalfq = 8;\n\n    var eps1 = -30.0;\n    var eps2 = 1.0e-14;\n    var dhaf  = 100.0;\n    var dquar = 800.0;\n    var deigh = 5000.0;\n    var dlarg = 25000.0;\n    var ulen1 = 1.0;\n    var ulen2 = 0.5;\n    var ulen3 = 0.25;\n    var ulen4 = 0.125;\n    var xlegq = [\n      0.989400934991649932596154173450,\n      0.944575023073232576077988415535,\n      0.865631202387831743880467897712,\n      0.755404408355003033895101194847,\n      0.617876244402643748446671764049,\n      0.458016777657227386342419442984,\n      0.281603550779258913230460501460,\n      0.950125098376374401853193354250e-1\n    ];\n    var alegq = [\n      0.271524594117540948517805724560e-1,\n      0.622535239386478928628438369944e-1,\n      0.951585116824927848099251076022e-1,\n      0.124628971255533872052476282192,\n      0.149595988816576732081501730547,\n      0.169156519395002538189312079030,\n      0.182603415044923588866763667969,\n      0.189450610455068496285396723208\n    ];\n\n    if (q <= 0)\n      return 0;\n\n    // df must be > 1\n    // there must be at least two values\n\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (!Number.isFinite(q))\n      return 1;\n\n    if (df > dlarg)\n      return tukeyWprob(q, rr, cc);\n\n    // calculate leading constant\n\n    var f2 = df * 0.5;\n    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);\n    var f21 = f2 - 1.0;\n\n    // integral is divided into unit, half-unit, quarter-unit, or\n    // eighth-unit length intervals depending on the value of the\n    // degrees of freedom.\n\n    var ff4 = df * 0.25;\n    var ulen;\n    if      (df <= dhaf)  ulen = ulen1;\n    else if (df <= dquar) ulen = ulen2;\n    else if (df <= deigh) ulen = ulen3;\n    else                  ulen = ulen4;\n\n    f2lf += Math.log(ulen);\n\n    // integrate over each subinterval\n\n    var ans = 0.0;\n\n    for (var i = 1; i <= 50; i++) {\n      var otsum = 0.0;\n\n      // legendre quadrature with order = nlegq\n      // nodes (stored in xlegq) are symmetric around zero.\n\n      var twa1 = (2 * i - 1) * ulen;\n\n      for (var jj = 1; jj <= nlegq; jj++) {\n        var j, t1;\n        if (ihalfq < jj) {\n          j = jj - ihalfq - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))\n              - (((xlegq[j] * ulen) + twa1) * ff4);\n        } else {\n          j = jj - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))\n              + (((xlegq[j] * ulen) - twa1) * ff4);\n        }\n\n        // if exp(t1) < 9e-14, then doesn't contribute to integral\n        var qsqz;\n        if (t1 >= eps1) {\n          if (ihalfq < jj) {\n            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);\n          } else {\n            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);\n          }\n\n          // call wprob to find integral of range portion\n\n          var wprb = tukeyWprob(qsqz, rr, cc);\n          var rotsum = (wprb * alegq[j]) * Math.exp(t1);\n          otsum += rotsum;\n        }\n        // end legendre integral for interval i\n        // L200:\n      }\n\n      // if integral for interval i < 1e-14, then stop.\n      // However, in order to avoid small area under left tail,\n      // at least  1 / ulen  intervals are calculated.\n      if (i * ulen >= 1.0 && otsum <= eps2)\n        break;\n\n      // end of interval i\n      // L330:\n\n      ans += otsum;\n    }\n\n    if (otsum > eps2) { // not converged\n      throw new Error('tukey.cdf failed to converge');\n    }\n    if (ans > 1)\n      ans = 1;\n    return ans;\n  },\n\n  inv: function(p, nmeans, df) {\n    // Identical implementation as the R qtukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var eps = 0.0001;\n    var maxiter = 50;\n\n    // df must be > 1 ; there must be at least two values\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (p < 0 || p > 1) return NaN;\n    if (p === 0) return 0;\n    if (p === 1) return Infinity;\n\n    // Initial value\n\n    var x0 = tukeyQinv(p, cc, df);\n\n    // Find prob(value < x0)\n\n    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n    // Find the second iterate and prob(value < x1).\n    // If the first iterate has probability value\n    // exceeding p then second iterate is 1 less than\n    // first iterate; otherwise it is 1 greater.\n\n    var x1;\n    if (valx0 > 0.0)\n      x1 = Math.max(0.0, x0 - 1.0);\n    else\n      x1 = x0 + 1.0;\n    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n    // Find new iterate\n\n    var ans;\n    for(var iter = 1; iter < maxiter; iter++) {\n      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));\n      valx0 = valx1;\n\n      // New iterate must be >= 0\n\n      x0 = x1;\n      if (ans < 0.0) {\n        ans = 0.0;\n        valx1 = -p;\n      }\n      // Find prob(value < new iterate)\n\n      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n      x1 = ans;\n\n      // If the difference between two successive\n      // iterates is less than eps, stop\n\n      var xabs = Math.abs(x1 - x0);\n      if (xabs < eps)\n        return ans;\n    }\n\n    throw new Error('tukey.inv failed to converge');\n  }\n});\n\n}(jStat, Math));\n/* Provides functions for the solution of linear system of equations, integration, extrapolation,\n * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n(function(jStat, Math) {\n\nvar push = Array.prototype.push;\nvar isArray = jStat.utils.isArray;\n\nfunction isUsable(arg) {\n  return isArray(arg) || arg instanceof jStat;\n}\n\njStat.extend({\n\n  // add a vector/matrix to a vector/matrix or scalar\n  add: function add(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value + arg[row][col];\n      });\n    }\n    return jStat.map(arr, function(value) { return value + arg; });\n  },\n\n  // subtract a vector or scalar from the vector\n  subtract: function subtract(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value - arg[row][col] || 0;\n      });\n    }\n    return jStat.map(arr, function(value) { return value - arg; });\n  },\n\n  // matrix division\n  divide: function divide(arr, arg) {\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.multiply(arr, jStat.inv(arg));\n    }\n    return jStat.map(arr, function(value) { return value / arg; });\n  },\n\n  // matrix multiplication\n  multiply: function multiply(arr, arg) {\n    var row, col, nrescols, sum, nrow, ncol, res, rescols;\n    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n    if (arr.length === undefined && arg.length === undefined) {\n      return arr * arg;\n    }\n    nrow = arr.length,\n    ncol = arr[0].length,\n    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),\n    rescols = 0;\n    if (isUsable(arg)) {\n      for (; rescols < nrescols; rescols++) {\n        for (row = 0; row < nrow; row++) {\n          sum = 0;\n          for (col = 0; col < ncol; col++)\n          sum += arr[row][col] * arg[col][rescols];\n          res[row][rescols] = sum;\n        }\n      }\n      return (nrow === 1 && rescols === 1) ? res[0][0] : res;\n    }\n    return jStat.map(arr, function(value) { return value * arg; });\n  },\n\n  // outer([1,2,3],[4,5,6])\n  // ===\n  // [[1],[2],[3]] times [[4,5,6]]\n  // ->\n  // [[4,5,6],[8,10,12],[12,15,18]]\n  outer:function outer(A, B) {\n    return jStat.multiply(A.map(function(t){ return [t] }), [B]);\n  },\n\n\n  // Returns the dot product of two matricies\n  dot: function dot(arr, arg) {\n    if (!isUsable(arr[0])) arr = [ arr ];\n    if (!isUsable(arg[0])) arg = [ arg ];\n    // convert column to row vector\n    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,\n    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,\n    res = [],\n    row = 0,\n    nrow = left.length,\n    ncol = left[0].length,\n    sum, col;\n    for (; row < nrow; row++) {\n      res[row] = [];\n      sum = 0;\n      for (col = 0; col < ncol; col++)\n      sum += left[row][col] * right[row][col];\n      res[row] = sum;\n    }\n    return (res.length === 1) ? res[0] : res;\n  },\n\n  // raise every element by a scalar\n  pow: function pow(arr, arg) {\n    return jStat.map(arr, function(value) { return Math.pow(value, arg); });\n  },\n\n  // exponentiate every element\n  exp: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.exp(value); });\n  },\n\n  // generate the natural log of every element\n  log: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.log(value); });\n  },\n\n  // generate the absolute values of the vector\n  abs: function abs(arr) {\n    return jStat.map(arr, function(value) { return Math.abs(value); });\n  },\n\n  // computes the p-norm of the vector\n  // In the case that a matrix is passed, uses the first row as the vector\n  norm: function norm(arr, p) {\n    var nnorm = 0,\n    i = 0;\n    // check the p-value of the norm, and set for most common case\n    if (isNaN(p)) p = 2;\n    // check if multi-dimensional array, and make vector correction\n    if (isUsable(arr[0])) arr = arr[0];\n    // vector norm\n    for (; i < arr.length; i++) {\n      nnorm += Math.pow(Math.abs(arr[i]), p);\n    }\n    return Math.pow(nnorm, 1 / p);\n  },\n\n  // computes the angle between two vectors in rads\n  // In case a matrix is passed, this uses the first row as the vector\n  angle: function angle(arr, arg) {\n    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n  },\n\n  // augment one matrix by another\n  // Note: this function returns a matrix, not a jStat object\n  aug: function aug(a, b) {\n    var newarr = [];\n    var i;\n    for (i = 0; i < a.length; i++) {\n      newarr.push(a[i].slice());\n    }\n    for (i = 0; i < newarr.length; i++) {\n      push.apply(newarr[i], b[i]);\n    }\n    return newarr;\n  },\n\n  // The inv() function calculates the inverse of a matrix\n  // Create the inverse by augmenting the matrix by the identity matrix of the\n  // appropriate size, and then use G-J elimination on the augmented matrix.\n  inv: function inv(a) {\n    var rows = a.length;\n    var cols = a[0].length;\n    var b = jStat.identity(rows, cols);\n    var c = jStat.gauss_jordan(a, b);\n    var result = [];\n    var i = 0;\n    var j;\n\n    //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n    for (; i < rows; i++) {\n      result[i] = [];\n      for (j = cols; j < c[0].length; j++)\n        result[i][j - cols] = c[i][j];\n    }\n    return result;\n  },\n\n  // calculate the determinant of a matrix\n  det: function det(a) {\n    var alen = a.length,\n    alend = alen * 2,\n    vals = new Array(alend),\n    rowshift = alen - 1,\n    colshift = alend - 1,\n    mrow = rowshift - alen + 1,\n    mcol = colshift,\n    i = 0,\n    result = 0,\n    j;\n    // check for special 2x2 case\n    if (alen === 2) {\n      return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n    }\n    for (; i < alend; i++) {\n      vals[i] = 1;\n    }\n    for (i = 0; i < alen; i++) {\n      for (j = 0; j < alen; j++) {\n        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];\n        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];\n        mrow++;\n        mcol--;\n      }\n      mrow = --rowshift - alen + 1;\n      mcol = --colshift;\n    }\n    for (i = 0; i < alen; i++) {\n      result += vals[i];\n    }\n    for (; i < alend; i++) {\n      result -= vals[i];\n    }\n    return result;\n  },\n\n  gauss_elimination: function gauss_elimination(a, b) {\n    var i = 0,\n    j = 0,\n    n = a.length,\n    m = a[0].length,\n    factor = 1,\n    sum = 0,\n    x = [],\n    maug, pivot, temp, k;\n    a = jStat.aug(a, b);\n    maug = a[0].length;\n    for(i = 0; i < n; i++) {\n      pivot = a[i][i];\n      j = i;\n      for (k = i + 1; k < m; k++) {\n        if (pivot < Math.abs(a[k][i])) {\n          pivot = a[k][i];\n          j = k;\n        }\n      }\n      if (j != i) {\n        for(k = 0; k < maug; k++) {\n          temp = a[i][k];\n          a[i][k] = a[j][k];\n          a[j][k] = temp;\n        }\n      }\n      for (j = i + 1; j < n; j++) {\n        factor = a[j][i] / a[i][i];\n        for(k = i; k < maug; k++) {\n          a[j][k] = a[j][k] - factor * a[i][k];\n        }\n      }\n    }\n    for (i = n - 1; i >= 0; i--) {\n      sum = 0;\n      for (j = i + 1; j<= n - 1; j++) {\n        sum = sum + x[j] * a[i][j];\n      }\n      x[i] =(a[i][maug - 1] - sum) / a[i][i];\n    }\n    return x;\n  },\n\n  gauss_jordan: function gauss_jordan(a, b) {\n    var m = jStat.aug(a, b);\n    var h = m.length;\n    var w = m[0].length;\n    var c = 0;\n    var x, y, y2;\n    // find max pivot\n    for (y = 0; y < h; y++) {\n      var maxrow = y;\n      for (y2 = y+1; y2 < h; y2++) {\n        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n          maxrow = y2;\n      }\n      var tmp = m[y];\n      m[y] = m[maxrow];\n      m[maxrow] = tmp\n      for (y2 = y+1; y2 < h; y2++) {\n        c = m[y2][y] / m[y][y];\n        for (x = y; x < w; x++) {\n          m[y2][x] -= m[y][x] * c;\n        }\n      }\n    }\n    // backsubstitute\n    for (y = h-1; y >= 0; y--) {\n      c = m[y][y];\n      for (y2 = 0; y2 < y; y2++) {\n        for (x = w-1; x > y-1; x--) {\n          m[y2][x] -= m[y][x] * m[y2][y] / c;\n        }\n      }\n      m[y][y] /= c;\n      for (x = h; x < w; x++) {\n        m[y][x] /= c;\n      }\n    }\n    return m;\n  },\n\n  // solve equation\n  // Ax=b\n  // A is upper triangular matrix\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[1,2,3]\n  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n  // if you use matrix style\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[[1],[2],[3]]\n  // will return [[2.666],[0.1666],[1.666]]\n  triaUpSolve: function triaUpSolve(A, b) {\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n    var matrix_mode = false;\n\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size - 1, -1, -1).forEach(function(i) {\n      parts = jStat.arange(i + 1, size).map(function(j) {\n        return x[j] * A[i][j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    });\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n  triaLowSolve: function triaLowSolve(A, b) {\n    // like to triaUpSolve but A is lower triangular matrix\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n\n    var matrix_mode=false;\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(j) {\n        return A[i][j] * x[j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    })\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n\n  // A -> [L,U]\n  // A=LU\n  // L is lower triangular matrix\n  // U is upper triangular matrix\n  lu: function lu(A) {\n    var size = A.length;\n    //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n    var L = jStat.identity(size);\n    var R = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(t) {\n      R[0][t] = A[0][t];\n    });\n    jStat.arange(1, size).forEach(function(l) {\n      jStat.arange(l).forEach(function(i) {\n        parts = jStat.arange(i).map(function(jj) {\n          return L[l][jj] * R[jj][i];\n        });\n        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n      });\n      jStat.arange(l, size).forEach(function(j) {\n        parts = jStat.arange(l).map(function(jj) {\n          return L[l][jj] * R[jj][j];\n        });\n        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n      });\n    });\n    return [L, R];\n  },\n\n  // A -> T\n  // A=TT'\n  // T is lower triangular matrix\n  cholesky: function cholesky(A) {\n    var size = A.length;\n    var T = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(t) {\n        return Math.pow(T[i][t],2);\n      });\n      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n      jStat.arange(i + 1, size).forEach(function(j) {\n        parts = jStat.arange(i).map(function(t) {\n          return T[i][t] * T[j][t];\n        });\n        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n      });\n    });\n    return T;\n  },\n\n\n  gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n    var i = 0;\n    var j = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n    c = jStat.multiply(jStat.inv(d), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  gauss_seidel: function gauss_seidel(a, b, x, r) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i = i + 1;\n    }\n    return xk;\n  },\n\n  SOR: function SOR(a, b, x, r, w) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),\n                       jStat.subtract(jStat.multiply(d, 1 - w),\n                                      jStat.multiply(u, w)));\n    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,\n        jStat.multiply(l, w))), b), w);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  householder: function householder(a) {\n    var m = a.length;\n    var n = a[0].length;\n    var i = 0;\n    var w = [];\n    var p = [];\n    var alpha, r, k, j, factor;\n    for (; i < m - 1; i++) {\n      alpha = 0;\n      for (j = i + 1; j < n; j++)\n      alpha += (a[j][i] * a[j][i]);\n      factor = (a[i + 1][i] > 0) ? -1 : 1;\n      alpha = factor * Math.sqrt(alpha);\n      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));\n      w = jStat.zeros(m, 1);\n      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n      p = jStat.subtract(jStat.identity(m, n),\n          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n      a = jStat.multiply(p, jStat.multiply(a, p));\n    }\n    return a;\n  },\n\n  // A -> [Q,R]\n  // Q is orthogonal matrix\n  // R is upper triangular\n  QR: (function() {\n    // x -> Q\n    // find a orthogonal matrix Q st.\n    // Qx=y\n    // y is [||x||,0,0,...]\n\n    // quick ref\n    var sum   = jStat.sum;\n    var range = jStat.arange;\n\n    function qr2(x) {\n      // quick impletation\n      // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n      var n = x.length;\n      var p = x[0].length;\n\n      var r = jStat.zeros(p, p);\n      x = jStat.copy(x);\n\n      var i,j,k;\n      for(j = 0; j < p; j++){\n        r[j][j] = Math.sqrt(sum(range(n).map(function(i){\n          return x[i][j] * x[i][j];\n        })));\n        for(i = 0; i < n; i++){\n          x[i][j] = x[i][j] / r[j][j];\n        }\n        for(k = j+1; k < p; k++){\n          r[j][k] = sum(range(n).map(function(i){\n            return x[i][j] * x[i][k];\n          }));\n          for(i = 0; i < n; i++){\n            x[i][k] = x[i][k] - x[i][j]*r[j][k];\n          }\n        }\n      }\n      return [x, r];\n    }\n\n    return qr2;\n  }()),\n\n  lstsq: (function() {\n    // solve least squard problem for Ax=b as QR decomposition way if b is\n    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n    function R_I(A) {\n      A = jStat.copy(A);\n      var size = A.length;\n      var I = jStat.identity(size);\n      jStat.arange(size - 1, -1, -1).forEach(function(i) {\n        jStat.sliceAssign(\n            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n        jStat.sliceAssign(\n            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n        jStat.arange(i).forEach(function(j) {\n          var c = jStat.multiply(A[j][i], -1);\n          var Aj = jStat.slice(A, { row: j });\n          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n          var Ij = jStat.slice(I, { row: j });\n          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n        })\n      });\n      return I;\n    }\n\n    function qr_solve(A, b){\n      var array_mode = false;\n      if (b[0].length === undefined) {\n        // [c1,c2,c3] mode\n        b = b.map(function(x){ return [x] });\n        array_mode = true;\n      }\n      var QR = jStat.QR(A);\n      var Q = QR[0];\n      var R = QR[1];\n      var attrs = A[0].length;\n      var Q1 = jStat.slice(Q,{col:{end:attrs}});\n      var R1 = jStat.slice(R,{row:{end:attrs}});\n      var RI = R_I(R1);\n      var Q2 = jStat.transpose(Q1);\n\n      if(Q2[0].length === undefined){\n        Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n      var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n      if(x.length === undefined){\n        x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n\n      if (array_mode)\n        return x.map(function(i){ return i[0] });\n      return x;\n    }\n\n    return qr_solve;\n  }()),\n\n  jacobi: function jacobi(a) {\n    var condition = 1;\n    var n = a.length;\n    var e = jStat.identity(n, n);\n    var ev = [];\n    var b, i, j, p, q, maxim, theta, s;\n    // condition === 1 only if tolerance is not reached\n    while (condition === 1) {\n      maxim = a[0][1];\n      p = 0;\n      q = 1;\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i != j) {\n            if (maxim < Math.abs(a[i][j])) {\n              maxim = Math.abs(a[i][j]);\n              p = i;\n              q = j;\n            }\n          }\n        }\n      }\n      if (a[p][p] === a[q][q])\n        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;\n      else\n        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n      s = jStat.identity(n, n);\n      s[p][p] = Math.cos(theta);\n      s[p][q] = -Math.sin(theta);\n      s[q][p] = Math.sin(theta);\n      s[q][q] = Math.cos(theta);\n      // eigen vector matrix\n      e = jStat.multiply(e, s);\n      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n      a = b;\n      condition = 0;\n      for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n          if (i != j && Math.abs(a[i][j]) > 0.001) {\n            condition = 1;\n          }\n        }\n      }\n    }\n    for (i = 0; i < n; i++) ev.push(a[i][i]);\n    //returns both the eigenvalue and eigenmatrix\n    return [e, ev];\n  },\n\n  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n    var k1, k2, u_j1, k3, k4;\n    if (order === 2) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h, u_j + k1);\n        u_j1 = u_j + (k1 + k2) / 2;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    if (order === 4) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n        k4 = h * f(t_j +h, u_j + k3);\n        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    return u_j;\n  },\n\n  romberg: function romberg(f, a, b, order) {\n    var i = 0;\n    var h = (b - a) / 2;\n    var x = [];\n    var h1 = [];\n    var g = [];\n    var m, a1, j, k, I;\n    while (i < order / 2) {\n      I = f(a);\n      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n      m = x.length;\n      for (j = 1; j < m - 1; j++) {\n        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);\n      }\n      I = (h / 3) * (I + f(b));\n      g[i] = I;\n      h /= 2;\n      i++;\n    }\n    a1 = g.length;\n    m = 1;\n    while (a1 !== 1) {\n      for (j = 0; j < a1 - 1; j++)\n      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a1 = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  richardson: function richardson(X, f, x, h) {\n    function pos(X, x) {\n      var i = 0;\n      var n = X.length;\n      var p;\n      for (; i < n; i++)\n        if (X[i] === x) p = i;\n      return p;\n    }\n    var h_min = Math.abs(x - X[pos(X, x) + 1]);\n    var i = 0;\n    var g = [];\n    var h1 = [];\n    var y1, y2, m, a, j;\n    while (h >= h_min) {\n      y1 = pos(X, x + h);\n      y2 = pos(X, x);\n      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n      h /= 2;\n      i++;\n    }\n    a = g.length;\n    m = 1;\n    while (a != 1) {\n      for (j = 0; j < a - 1; j++)\n        h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  simpson: function simpson(f, a, b, n) {\n    var h = (b - a) / n;\n    var I = f(a);\n    var x = [];\n    var j = a;\n    var k = 0;\n    var i = 1;\n    var m;\n    for (; j <= b; j = j + h, k++)\n      x[k] = j;\n    m = x.length;\n    for (; i < m - 1; i++) {\n      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);\n    }\n    return (h / 3) * (I + f(b));\n  },\n\n  hermite: function hermite(X, F, dF, value) {\n    var n = X.length;\n    var p = 0;\n    var i = 0;\n    var l = [];\n    var dl = [];\n    var A = [];\n    var B = [];\n    var j;\n    for (; i < n; i++) {\n      l[i] = 1;\n      for (j = 0; j < n; j++) {\n        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n      }\n      dl[i] = 0;\n      for (j = 0; j < n; j++) {\n        if (i != j) dl[i] += 1 / (X [i] - X[j]);\n      }\n      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n      B[i] = (value - X[i]) * (l[i] * l[i]);\n      p += (A[i] * F[i] + B[i] * dF[i]);\n    }\n    return p;\n  },\n\n  lagrange: function lagrange(X, F, value) {\n    var p = 0;\n    var i = 0;\n    var j, l;\n    var n = X.length;\n    for (; i < n; i++) {\n      l = F[i];\n      for (j = 0; j < n; j++) {\n        // calculating the lagrange polynomial L_i\n        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n      }\n      // adding the lagrange polynomials found above\n      p += l;\n    }\n    return p;\n  },\n\n  cubic_spline: function cubic_spline(X, F, value) {\n    var n = X.length;\n    var i = 0, j;\n    var A = [];\n    var B = [];\n    var alpha = [];\n    var c = [];\n    var h = [];\n    var b = [];\n    var d = [];\n    for (; i < n - 1; i++)\n      h[i] = X[i + 1] - X[i];\n    alpha[0] = 0;\n    for (i = 1; i < n - 1; i++) {\n      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -\n          (3 / h[i-1]) * (F[i] - F[i-1]);\n    }\n    for (i = 1; i < n - 1; i++) {\n      A[i] = [];\n      B[i] = [];\n      A[i][i-1] = h[i-1];\n      A[i][i] = 2 * (h[i - 1] + h[i]);\n      A[i][i+1] = h[i];\n      B[i][0] = alpha[i];\n    }\n    c = jStat.multiply(jStat.inv(A), B);\n    for (j = 0; j < n - 1; j++) {\n      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n    }\n    for (j = 0; j < n; j++) {\n      if (X[j] > value) break;\n    }\n    j -= 1;\n    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *\n        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n  },\n\n  gauss_quadrature: function gauss_quadrature() {\n    throw new Error('gauss_quadrature not yet implemented');\n  },\n\n  PCA: function PCA(X) {\n    var m = X.length;\n    var n = X[0].length;\n    var i = 0;\n    var j, temp1;\n    var u = [];\n    var D = [];\n    var result = [];\n    var temp2 = [];\n    var Y = [];\n    var Bt = [];\n    var B = [];\n    var C = [];\n    var V = [];\n    var Vt = [];\n    for (i = 0; i < m; i++) {\n      u[i] = jStat.sum(X[i]) / n;\n    }\n    for (i = 0; i < n; i++) {\n      B[i] = [];\n      for(j = 0; j < m; j++) {\n        B[i][j] = X[j][i] - u[j];\n      }\n    }\n    B = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      C[i] = [];\n      for (j = 0; j < m; j++) {\n        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);\n      }\n    }\n    result = jStat.jacobi(C);\n    V = result[0];\n    D = result[1];\n    Vt = jStat.transpose(V);\n    for (i = 0; i < D.length; i++) {\n      for (j = i; j < D.length; j++) {\n        if(D[i] < D[j])  {\n          temp1 = D[i];\n          D[i] = D[j];\n          D[j] = temp1;\n          temp2 = Vt[i];\n          Vt[i] = Vt[j];\n          Vt[j] = temp2;\n        }\n      }\n    }\n    Bt = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      Y[i] = [];\n      for (j = 0; j < Bt.length; j++) {\n        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n      }\n    }\n    return [X, D, Vt, Y];\n  }\n});\n\n// extend jStat.fn with methods that require one argument\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function(arg, func) {\n      var tmpthis = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n        }, 15);\n        return this;\n      }\n      if (typeof jStat[passfunc](this, arg) === 'number')\n        return jStat[passfunc](this, arg);\n      else\n        return jStat(jStat[passfunc](this, arg));\n    };\n  }(funcs[i]));\n}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\nvar slice = [].slice;\nvar isNumber = jStat.utils.isNumber;\nvar isArray = jStat.utils.isArray;\n\n// flag==true denotes use of sample standard deviation\n// Z Statistics\njStat.extend({\n  // 2 different parameter lists:\n  // (value, mean, sd)\n  // (value, array, flag)\n  zscore: function zscore() {\n    var args = slice.call(arguments);\n    if (isNumber(args[1])) {\n      return (args[0] - args[1]) / args[2];\n    }\n    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, sides)\n  // (zscore, sides)\n  // (value, array, sides, flag)\n  ztest: function ztest() {\n    var args = slice.call(arguments);\n    var z;\n    if (isArray(args[1])) {\n      // (value, array, sides, flag)\n      z = jStat.zscore(args[0],args[1],args[3]);\n      return (args[2] === 1) ?\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);\n    } else {\n      if (args.length > 2) {\n        // (value, mean, sd, sides)\n        z = jStat.zscore(args[0],args[1],args[2]);\n        return (args[3] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);\n      } else {\n        // (zscore, sides)\n        z = args[0];\n        return (args[1] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)*2);\n      }\n    }\n  }\n});\n\njStat.extend(jStat.fn, {\n  zscore: function zscore(value, flag) {\n    return (value - this.mean()) / this.stdev(flag);\n  },\n\n  ztest: function ztest(value, sides, flag) {\n    var zscore = Math.abs(this.zscore(value, flag));\n    return (sides === 1) ?\n      (jStat.normal.cdf(-zscore, 0, 1)) :\n      (jStat.normal.cdf(-zscore, 0, 1) * 2);\n  }\n});\n\n// T Statistics\njStat.extend({\n  // 2 parameter lists\n  // (value, mean, sd, n)\n  // (value, array)\n  tscore: function tscore() {\n    var args = slice.call(arguments);\n    return (args.length === 4) ?\n      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :\n      ((args[0] - jStat.mean(args[1])) /\n       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, n, sides)\n  // (tscore, n, sides)\n  // (value, array, sides)\n  ttest: function ttest() {\n    var args = slice.call(arguments);\n    var tscore;\n    if (args.length === 5) {\n      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n      return (args[4] === 1) ?\n        (jStat.studentt.cdf(-tscore, args[3]-1)) :\n        (jStat.studentt.cdf(-tscore, args[3]-1)*2);\n    }\n    if (isNumber(args[1])) {\n      tscore = Math.abs(args[0])\n      return (args[2] == 1) ?\n        (jStat.studentt.cdf(-tscore, args[1]-1)) :\n        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);\n    }\n    tscore = Math.abs(jStat.tscore(args[0], args[1]))\n    return (args[2] == 1) ?\n      (jStat.studentt.cdf(-tscore, args[1].length-1)) :\n      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  tscore: function tscore(value) {\n    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n  },\n\n  ttest: function ttest(value, sides) {\n    return (sides === 1) ?\n      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :\n      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);\n  }\n});\n\n// F Statistics\njStat.extend({\n  // Paramter list is as follows:\n  // (array1, array2, array3, ...)\n  // or it is an array of arrays\n  // array of arrays conversion\n  anovafscore: function anovafscore() {\n    var args = slice.call(arguments),\n    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n    if (args.length === 1) {\n      tmpargs = new Array(args[0].length);\n      for (i = 0; i < args[0].length; i++) {\n        tmpargs[i] = args[0][i];\n      }\n      args = tmpargs;\n    }\n    // Builds sample array\n    sample = new Array();\n    for (i = 0; i < args.length; i++) {\n      sample = sample.concat(args[i]);\n    }\n    sampMean = jStat.mean(sample);\n    // Computes the explained variance\n    expVar = 0;\n    for (i = 0; i < args.length; i++) {\n      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n    }\n    expVar /= (args.length - 1);\n    // Computes unexplained variance\n    unexpVar = 0;\n    for (i = 0; i < args.length; i++) {\n      sampSampMean = jStat.mean(args[i]);\n      for (j = 0; j < args[i].length; j++) {\n        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n      }\n    }\n    unexpVar /= (sample.length - args.length);\n    return expVar / unexpVar;\n  },\n\n  // 2 different paramter setups\n  // (array1, array2, array3, ...)\n  // (anovafscore, df1, df2)\n  anovaftest: function anovaftest() {\n    var args = slice.call(arguments),\n    df1, df2, n, i;\n    if (isNumber(args[0])) {\n      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n    }\n    var anovafscore = jStat.anovafscore(args);\n    df1 = args.length - 1;\n    n = 0;\n    for (i = 0; i < args.length; i++) {\n      n = n + args[i].length;\n    }\n    df2 = n - df1 - 1;\n    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n  },\n\n  ftest: function ftest(fscore, df1, df2) {\n    return 1 - jStat.centralF.cdf(fscore, df1, df2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  anovafscore: function anovafscore() {\n    return jStat.anovafscore(this.toArray());\n  },\n\n  anovaftes: function anovaftes() {\n    var n = 0;\n    var i;\n    for (i = 0; i < this.length; i++) {\n      n = n + this[i].length;\n    }\n    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n  }\n});\n\n// Tukey's range test\njStat.extend({\n  // 2 parameter lists\n  // (mean1, mean2, n1, n2, sd)\n  // (array1, array2, sd)\n  qscore: function qscore() {\n    var args = slice.call(arguments);\n    var mean1, mean2, n1, n2, sd;\n    if (isNumber(args[0])) {\n        mean1 = args[0];\n        mean2 = args[1];\n        n1 = args[2];\n        n2 = args[3];\n        sd = args[4];\n    } else {\n        mean1 = jStat.mean(args[0]);\n        mean2 = jStat.mean(args[1]);\n        n1 = args[0].length;\n        n2 = args[1].length;\n        sd = args[2];\n    }\n    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n  },\n\n  // 3 different parameter lists:\n  // (qscore, n, k)\n  // (mean1, mean2, n1, n2, sd, n, k)\n  // (array1, array2, sd, n, k)\n  qtest: function qtest() {\n    var args = slice.call(arguments);\n\n    var qscore;\n    if (args.length === 3) {\n      qscore = args[0];\n      args = args.slice(1);\n    } else if (args.length === 7) {\n      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n      args = args.slice(5);\n    } else {\n      qscore = jStat.qscore(args[0], args[1], args[2]);\n      args = args.slice(3);\n    }\n\n    var n = args[0];\n    var k = args[1];\n\n    return 1 - jStat.tukey.cdf(qscore, k, n - k);\n  },\n\n  tukeyhsd: function tukeyhsd(arrays) {\n    var sd = jStat.pooledstdev(arrays);\n    var means = arrays.map(function (arr) {return jStat.mean(arr);});\n    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);\n\n    var results = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n        }\n    }\n\n    return results;\n  }\n});\n\n// Error Bounds\njStat.extend({\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  normalci: function normalci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  tci: function tci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *\n                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  significant: function significant(pvalue, alpha) {\n    return pvalue < alpha;\n  }\n});\n\njStat.extend(jStat.fn, {\n  normalci: function normalci(value, alpha) {\n    return jStat.normalci(value, alpha, this.toArray());\n  },\n\n  tci: function tci(value, alpha) {\n    return jStat.tci(value, alpha, this.toArray());\n  }\n});\n\n// internal method for calculating the z-score for a difference of proportions test\nfunction differenceOfProportions(p1, n1, p2, n2) {\n  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n    throw new Error(\"Proportions should be greater than 0 and less than 1\")\n  }\n  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));\n  return (p1 - p2) / se;\n}\n\n// Difference of Proportions\njStat.extend(jStat.fn, {\n  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 1);\n  },\n\n  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 2);\n  }\n});\n\n}(jStat, Math));\njStat.models = (function(){\n  function sub_regress(exog) {\n    var var_count = exog[0].length;\n    var modelList = jStat.arange(var_count).map(function(endog_index) {\n      var exog_index =\n          jStat.arange(var_count).filter(function(i){return i!==endog_index});\n      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),\n                 jStat.col(exog, exog_index))\n    });\n    return modelList;\n  }\n\n  // do OLS model regress\n  // exog have include const columns ,it will not generate it .In fact, exog is\n  // \"design matrix\" look at\n  //https://en.wikipedia.org/wiki/Design_matrix\n  function ols(endog, exog) {\n    var nobs = endog.length;\n    var df_model = exog[0].length - 1;\n    var df_resid = nobs-df_model - 1;\n    var coef = jStat.lstsq(exog, endog);\n    var predict =\n        jStat.multiply(exog, coef.map(function(x) { return [x] }))\n            .map(function(p) { return p[0] });\n    var resid = jStat.subtract(endog, predict);\n    var ybar = jStat.mean(endog);\n    // constant cause problem\n    // var SST = jStat.sum(endog.map(function(y) {\n    //   return Math.pow(y-ybar,2);\n    // }));\n    var SSE = jStat.sum(predict.map(function(f) {\n      return Math.pow(f - ybar, 2);\n    }));\n    var SSR = jStat.sum(endog.map(function(y, i) {\n      return Math.pow(y - predict[i], 2);\n    }));\n    var SST = SSE + SSR;\n    var R2 = (SSE / SST);\n    return {\n        exog:exog,\n        endog:endog,\n        nobs:nobs,\n        df_model:df_model,\n        df_resid:df_resid,\n        coef:coef,\n        predict:predict,\n        resid:resid,\n        ybar:ybar,\n        SST:SST,\n        SSE:SSE,\n        SSR:SSR,\n        R2:R2\n    };\n  }\n\n  // H0: b_I=0\n  // H1: b_I!=0\n  function t_test(model) {\n    var subModelList = sub_regress(model.exog);\n    //var sigmaHat=jStat.stdev(model.resid);\n    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));\n    var seBetaHat = subModelList.map(function(mod) {\n      var SST = mod.SST;\n      var R2 = mod.R2;\n      return sigmaHat / Math.sqrt(SST * (1 - R2));\n    });\n    var tStatistic = model.coef.map(function(coef, i) {\n      return (coef - 0) / seBetaHat[i];\n    });\n    var pValue = tStatistic.map(function(t) {\n      var leftppf = jStat.studentt.cdf(t, model.df_resid);\n      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n    });\n    var c = jStat.studentt.inv(0.975, model.df_resid);\n    var interval95 = model.coef.map(function(coef, i) {\n      var d = c * seBetaHat[i];\n      return [coef - d, coef + d];\n    })\n    return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n    };\n  }\n\n  function F_test(model) {\n    var F_statistic =\n        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);\n    var fcdf = function(x, n1, n2) {\n      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)\n    }\n    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n    return { F_statistic: F_statistic, pvalue: pvalue };\n  }\n\n  function ols_wrap(endog, exog) {\n    var model = ols(endog,exog);\n    var ttest = t_test(model);\n    var ftest = F_test(model);\n    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n    // Which matches the 'adjusted R^2' provided by R's lm package\n    var adjust_R2 =\n        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));\n    model.t = ttest;\n    model.f = ftest;\n    model.adjust_R2 = adjust_R2;\n    return model;\n  }\n\n  return { ols: ols_wrap };\n})();\n//To regress, simply build X matrix\n//(append column of 1's) using\n//buildxmatrix and build the Y\n//matrix using buildymatrix\n//(simply the transpose)\n//and run regress.\n\n\n\n//Regressions\n\njStat.extend({\n  buildxmatrix: function buildxmatrix(){\n    //Parameters will be passed in as such\n    //(array1,array2,array3,...)\n    //as (x1,x2,x3,...)\n    //needs to be (1,x1,x2,x3,...)\n    var matrixRows = new Array(arguments.length);\n    for(var i=0;i<arguments.length;i++){\n      var array = [1];\n      matrixRows[i]= array.concat(arguments[i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  builddxmatrix: function builddxmatrix() {\n    //Paramters will be passed in as such\n    //([array1,array2,...]\n    var matrixRows = new Array(arguments[0].length);\n    for(var i=0;i<arguments[0].length;i++){\n      var array = [1]\n      matrixRows[i]= array.concat(arguments[0][i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  buildjxmatrix: function buildjxmatrix(jMat) {\n    //Builds from jStat Matrix\n    var pass = new Array(jMat.length)\n    for(var i=0;i<jMat.length;i++){\n      pass[i] = jMat[i];\n    }\n    return jStat.builddxmatrix(pass);\n\n  },\n\n  buildymatrix: function buildymatrix(array){\n    return jStat(array).transpose();\n  },\n\n  buildjymatrix: function buildjymatrix(jMat){\n    return jMat.transpose();\n  },\n\n  matrixmult: function matrixmult(A,B){\n    var i, j, k, result, sum;\n    if (A.cols() == B.rows()) {\n      if(B.rows()>1){\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[k][j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n      result = [];\n      for (i = 0; i < A.rows(); i++) {\n        result[i] = [];\n        for (j = 0; j < B.cols(); j++) {\n          sum = 0;\n          for (k = 0; k < A.cols(); k++) {\n            sum += A.toArray()[i][k] * B.toArray()[j];\n          }\n          result[i][j] = sum;\n        }\n      }\n      return jStat(result);\n    }\n  },\n\n  //regress and regresst to be fixed\n\n  regress: function regress(jMatX,jMatY){\n    //print(\"regressin!\");\n    //print(jMatX.toArray());\n    var innerinv = jStat.xtranspxinv(jMatX);\n    //print(innerinv);\n    var xtransp = jMatX.transpose();\n    var next = jStat.matrixmult(jStat(innerinv),xtransp);\n    return jStat.matrixmult(next,jMatY);\n\n  },\n\n  regresst: function regresst(jMatX,jMatY,sides){\n    var beta = jStat.regress(jMatX,jMatY);\n\n    var compile = {};\n    compile.anova = {};\n    var jMatYBar = jStat.jMatYBar(jMatX, beta);\n    compile.yBar = jMatYBar;\n    var yAverage = jMatY.mean();\n    compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n\n    compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n    compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n\n    compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n    compile.anova.mse =\n        compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.sst = jStat.sst(jMatY, yAverage);\n    compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n\n    compile.anova.r2 = 1 - (compile.anova.sse / compile.anova.sst);\n    if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n\n    compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n    compile.anova.pvalue =\n        jStat.anovaftest(compile.anova.fratio,\n                         jMatX[0].length - 1,\n                         jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.rmse = Math.sqrt(compile.anova.mse);\n\n    compile.anova.r2adj = 1 - (compile.anova.mse / compile.anova.mst);\n    if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n\n    compile.stats = new Array(jMatX[0].length);\n    var covar = jStat.xtranspxinv(jMatX);\n    var sds, ts, ps;\n\n    for(var i=0; i<beta.length;i++){\n      sds=Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n      ts= Math.abs(beta[i] / sds);\n      ps= jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n\n      compile.stats[i]=[beta[i], sds, ts, ps];\n    }\n\n    compile.regress = beta;\n    return compile;\n  },\n\n  xtranspx: function xtranspx(jMatX){\n    return jStat.matrixmult(jMatX.transpose(),jMatX);\n  },\n\n\n  xtranspxinv: function xtranspxinv(jMatX){\n    var inner = jStat.matrixmult(jMatX.transpose(),jMatX);\n    var innerinv = jStat.inv(inner);\n    return innerinv;\n  },\n\n  jMatYBar: function jMatYBar(jMatX, beta) {\n    var yBar = jStat.matrixmult(jMatX, beta);\n    return new jStat(yBar);\n  },\n\n  residuals: function residuals(jMatY, jMatYBar) {\n    return jStat.matrixsubtract(jMatY, jMatYBar);\n  },\n\n  ssr: function ssr(jMatYBar, yAverage) {\n    var ssr = 0;\n    for(var i = 0; i < jMatYBar.length; i++) {\n      ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n    }\n    return ssr;\n  },\n\n  sse: function sse(jMatY, jMatYBar) {\n    var sse = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n    }\n    return sse;\n  },\n\n  sst: function sst(jMatY, yAverage) {\n    var sst = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sst += Math.pow(jMatY[i] - yAverage, 2);\n    }\n    return sst;\n  },\n\n  matrixsubtract: function matrixsubtract(A,B){\n    var ans = new Array(A.length);\n    for(var i=0;i<A.length;i++){\n      ans[i] = new Array(A[i].length);\n      for(var j=0;j<A[i].length;j++){\n        ans[i][j]=A[i][j]-B[i][j];\n      }\n    }\n    return jStat(ans);\n  }\n});\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n\n  return jStat;\n});\n","\n// Internal dependencies\nexport {default} from './sdt-math';\n","\nimport * as jStat from 'jstat';\n\n/*\n  SDTMath Static Class - Not intended for instantiation!\n\n  Variables:\n    H = hits\n    M = misses\n    FA = false alarms\n    CR = correct rejections\n    HR = hit rate\n    FAR = false alarm rate\n    ACC = accuracy\n    PPV = positive predictive value\n    FOMR = false omission rate (used FOMR to avoid keyword FOR!)\n    d = sensitivity (d' for equal variance, d_a for unequal variance)\n    c = response bias (c for equal variance, c_a for unequal variance)\n    s = standard deviation of signal distribution, with standard deviation of noise distribution = 1\n    muN = mean of noise distribution\n    muS = mean of signal distribution\n    l = lambda, threshold location, with l = 0 indicating no response bias\n    h = height of signal distribution\n\n  Equations (* = unequal variance):\n    HR = H / (H + M)\n    FAR = FA / (FA + CR)\n    ACC = (H + CR) / (H + M + FA + CR)\n    ACC = (HR + (1 - FAR)) / 2\n    PPV = H / (H + FA)\n    FOMR = M / (M + CR)\n\n    d' = Z^-1(HR) - Z^-1(FAR)\n    *d' = (2 / (s^2 + 1))^(1/2) * (s * Z^-1(HR) - Z^-1(FAR))\n\n    c = -(Z^-1(HR) + Z^-1(FAR))/2\n    *c = (2 / (s^2 + 1))^(1/2) * (s / s + 1) * -(Z^-1(HR) + Z^-1(FAR))\n\n    HR = Z(d'/2 - c)\n    *HR = Z(((s^2 + 1) / 2)^(1/2) * (d' / (s + 1) - c / s))\n\n    FAR = Z(-d'/2 - c)\n    *FAR = Z(((s^2 + 1) / 2)^(1/2) * -(d' / (s + 1) + c))\n\n    HR = Z(d' + Z^-1(FAR))\n    *HR = Z(((s^2 + 1) / 2)^(1/2) * d' + Z^-1(FAR) / s)\n\n    HR = Z(-2c - Z^-1(FAR))\n    *HR = Z(-((s^2 + 1) / 2)^(1/2) * ((s + 1) / s) * c - Z^-1(FAR))\n\n    muN = -d'/2\n    *muN = -((s^2 + 1) / 2)^(1/2) * (1 / (s + 1)) * d'\n\n    d' = -2 * muN\n    *d' = -(2 / (s^2 + 1))^(1/2) * (s + 1) * muN\n\n    muS = d'/2\n    *muS = ((s^2 + 1) / 2)^(1/2) * (s / (s + 1)) * d'\n\n    d' = 2 * muS\n    *d' = (2 / (s^2 + 1))^(1/2) * ((s + 1) / s) * muS\n\n    l = c\n    l = ((s^2 + 1) / 2)^(1/2) * c\n\n    c = l\n    c = (2 / (s^2 + 1))^(1/2) * l\n\n    h = 1 / (s * (2 * pi)^(1/2))\n    s = 1 / (h * (2 * pi)^(1/2))\n*/\nexport default class SDTMath {\n  static hM2Hr(h, m) {\n    if ((h === 0) && (m === 0)) {\n      return 0;\n    }\n    return h / (h + m);\n  }\n\n  static faCr2Far(fa, cr) {\n    if ((fa === 0) && (cr === 0)) {\n      return 0;\n    }\n    return fa / (fa + cr);\n  }\n\n  static hMFaCr2Acc(h, m, fa, cr) {\n    if ((h === 0) && (m === 0) && (fa === 0) && (cr === 0)) {\n      return 0;\n    }\n    return (h + cr) / (h + m + fa + cr);\n  }\n\n  static hrFar2Acc(hr, far) {\n    return (hr + (1 - far)) / 2;\n  }\n\n  static hFa2Ppv(h, fa) {\n    if ((h === 0) && (fa === 0)) {\n      return 0;\n    }\n    return h / (h + fa);\n  }\n\n  static mCr2Fomr(m, cr) {\n    if ((m === 0) && (cr === 0)) {\n      return 0;\n    }\n    return m / (m + cr);\n  }\n\n  static hrFar2D(hr, far, s = 1) {\n    if (s === 1) return (jStat.normal.inv(hr, 0, 1) - jStat.normal.inv(far, 0, 1));\n    return (\n      Math.sqrt(2 / (s * s + 1))\n      * (s * jStat.normal.inv(hr, 0, 1) - jStat.normal.inv(far, 0, 1))\n    );\n  }\n\n  static hrFar2C(hr, far, s = 1) {\n    if (s === 1) return (-(jStat.normal.inv(hr, 0, 1) + jStat.normal.inv(far, 0, 1)) / 2);\n    return (\n      Math.sqrt(2 / (s * s + 1))\n      * (s / (s + 1))\n      * -(jStat.normal.inv(hr, 0, 1) + jStat.normal.inv(far, 0, 1))\n    );\n  }\n\n  static dC2Hr(d, c, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(d / 2 - c, 0, 1));\n    return (jStat.normal.cdf(Math.sqrt((s * s + 1) / 2) * (d / (1 + s) - c / s), 0, 1));\n  }\n\n  static dC2Far(d, c, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(-(d / 2 + c), 0, 1));\n    return (jStat.normal.cdf(Math.sqrt((s * s + 1) / 2) * -(d / (1 + s) + c), 0, 1));\n  }\n\n  static dFar2Hr(d, far, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(d + jStat.normal.inv(far, 0, 1), 0, 1));\n    return (jStat.normal.cdf(\n      (Math.sqrt((s * s + 1) / 2) * d + jStat.normal.inv(far, 0, 1)) / s,\n      0,\n      1,\n    ));\n  }\n\n  static cFar2Hr(c, far, s = 1) {\n    if (s === 1) return (jStat.normal.cdf(-(2 * c) - jStat.normal.inv(far, 0, 1), 0, 1));\n    return (jStat.normal.cdf(\n      -Math.sqrt((s * s + 1) / 2) * ((s + 1) / s) * c - jStat.normal.inv(far, 0, 1),\n      0,\n      1,\n    ));\n  }\n\n  static d2MuN(d, s = 1) {\n    if (s === 1) return -d / 2;\n    return -Math.sqrt((s * s + 1) / 2) * (1 / (s + 1)) * d;\n  }\n\n  static muN2D(muN, s = 1) {\n    if (s === 1) return -2 * muN;\n    return -Math.sqrt(2 / (s * s + 1)) * (s + 1) * muN;\n  }\n\n  static d2MuS(d, s = 1) {\n    if (s === 1) return d / 2;\n    return Math.sqrt((s * s + 1) / 2) * (s / (s + 1)) * d;\n  }\n\n  static muS2D(muS, s = 1) {\n    if (s === 1) return 2 * muS;\n    return Math.sqrt(2 / (s * s + 1)) * ((s + 1) / s) * muS;\n  }\n\n  static c2L(c, s = 1) {\n    if (s === 1) return c;\n    return Math.sqrt((s * s + 1) / 2) * c;\n  }\n\n  static l2C(l, s = 1) {\n    if (s === 1) return l;\n    return Math.sqrt(2 / (s * s + 1)) * l;\n  }\n\n  static s2H(s = 1) {\n    return 1 / (s * Math.sqrt(2 * Math.PI));\n  }\n\n  static h2S(h) {\n    return 1 / (h * Math.sqrt(2 * Math.PI));\n  }\n\n  static hr2Zhr(hr) {\n    return jStat.normal.inv(hr, 0, 1);\n  }\n\n  static far2Zfar(far) {\n    return jStat.normal.inv(far, 0, 1);\n  }\n\n  static zhr2Hr(zhr) {\n    return jStat.normal.cdf(zhr, 0, 1);\n  }\n\n  static zfar2Far(zfar) {\n    return jStat.normal.cdf(zfar, 0, 1);\n  }\n}\n"]}