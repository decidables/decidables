// FONTS

$font-map: (
  // filename: (family, style, weight, stretch)
  SourceCodePro-Regular: ("Source Code Pro", normal, 400, normal),
  SourceCodePro-It: ("Source Code Pro", italic, 400, normal),
  SourceCodePro-Semibold: ("Source Code Pro", normal, 600, normal),
  SourceCodePro-SemiboldIt: ("Source Code Pro", italic, 600, normal),
  SourceCodePro-Bold: ("Source Code Pro", normal, 700, normal),
  SourceCodePro-BoldIt: ("Source Code Pro", italic, 700, normal),
  SourceSansPro-Regular: ("Source Sans Pro", normal, 400, normal),
  SourceSansPro-It: ("Source Sans Pro", italic, 400, normal),
  SourceSansPro-Semibold: ("Source Sans Pro", normal, 600, normal),
  SourceSansPro-SemiboldIt: ("Source Sans Pro", italic, 600, normal),
  SourceSansPro-Bold: ("Source Sans Pro", normal, 700, normal),
  SourceSansPro-BoldIt: ("Source Sans Pro", italic, 700, normal),
  SourceSerifPro-Regular: ("Source Serif Pro", normal, 400, normal),
  SourceSerifPro-It: ("Source Serif Pro", italic, 400, normal),
  SourceSerifPro-Semibold: ("Source Serif Pro", normal, 600, normal),
  SourceSerifPro-SemiboldIt: ("Source Serif Pro", italic, 600, normal),
  SourceSerifPro-Bold: ("Source Serif Pro", normal, 700, normal),
  SourceSerifPro-BoldIt: ("Source Serif Pro", italic, 700, normal),
);

@each $file, $font-list in $font-map {
  @font-face {
    src: url("fonts/#{$file}.otf.woff") format("woff");
    font-family: nth($font-list, 1);
    font-style: nth($font-list, 2);
    font-weight: nth($font-list, 3);
    font-stretch: nth($font-list, 4);
  }
}

// COLOR

// SCSS variables
// http://colorbrewer2.org/#type=qualitative&scheme=Set1&n=9
$color-map: (
  h: #4daf4a, // green (CB3)
  m: #ff7f00, // orange (CB5)
  fa: #377eb8, // blue (CB2)
  cr: #e41a1c, // red (CB1)
  hr: #ffff33, // yellow (CB6)
  far:#984ea3, // purple (CB4)
  acc: #999999, // grey (CB9)
  d: #f781bf, // pink (CB8)
  c: #a65628, // brown (CB7)
  s: #4545d0, // violet
  present: #f032e6, // magenta
  absent: #10dbc9, // cyan
  correct: #ffffff, // white
  error: #000000, // black
);

// Greys:
$color-grey-base: #999999; // baseline grey

$color-white: #ffffff; // 100% lightness #ffffff
$color-grey-light75: mix(#ffffff, $color-grey-base, 75%); // 90% lightness #e6e6e6
$color-grey-light50: mix(#ffffff, $color-grey-base, 50%); // 80% lightness #cccccc
$color-grey-light25: mix(#ffffff, $color-grey-base, 25%); // 70% lightness #b3b3b3
$color-grey: $color-grey-base; // 60% lightness #999999
$color-grey-dark25: mix(#000000, $color-grey-base, 25%); // 45% lightness #737373
$color-grey-dark50: mix(#000000, $color-grey-base, 50%); // 30% lightness #4d4d4d
$color-grey-dark75: mix(#000000, $color-grey-base, 75%); // 15% lightness #262626
$color-black: #000000;  // 0% lightness #000000

// Bootstrap SCSS variables
$body-bg: $color-white;
$border-color: $color-grey-light75;
$body-color: $color-grey-dark75;
$link-color: $color-grey-dark25;

// CSS variables
:root {
  @each $name, $color in $color-map {
    --color-#{$name}: #{$color};
    --color-#{$name}-light: #{mix(#ffffff, $color, 50%)};
    --color-#{$name}-dark: #{mix(#000000, $color, 50%)};
  }
  --color-background: #{$body-bg};
  --color-border: #{$border-color};
  --color-text: #{$body-color};
  --color-text-inverse: #{$color-white};
  --color-link: #{$link-color};
  --color-element-background: #{$color-grey-light75};
  --color-element-disabled: #{$color-grey-light50};
  --color-element-enabled: #{$color-grey};
  --color-element-selected: #{$color-grey-dark25};
  --color-element-border: #{$color-grey-dark50};
  --color-element-emphasis: #{$color-grey-dark75};
}

// TODO
// cleanup Links

// BOOTSTRAP VARIABLES
$font-family-base: "Source Sans Pro", sans-serif;
$grid-gutter-width: 2rem;
$border-width: 1px;
$border-radius: 0.25rem;

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1590px
);
$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1560px
);

// SCSS VARIABLES
$font-family-math: "Source Serif Pro", serif; // Not in Bootstrap
$border: $border-width solid $border-color;

// Shadows based on Material Design
// https://github.com/material-components/material-components-web/tree/master/packages/mdc-elevation
$shadow-baseline-color: #000000;
$shadow-umbra-opacity: 0.2;
$shadow-penumbra-opacity: 0.14;
$shadow-ambient-opacity: 0.12;
$shadow-opacity-boost: 0.2;

$shadow-umbra-map: (
  0: "0px 0px 0px 0px",
  2: "1.5px 3px 1px -2px",
  4: "1px 2px 4px -1px",
  8: "2.5px 5px 5px -3px",
  16: "4px 8px 10px -5px");

$shadow-penumbra-map: (
  0: "0px 0px 0px 0px",
  2: "1px 2px 2px 0px",
  4: "2px 4px 5px 0px",
  8: "4px 8px 10px 1px",
  16: "8px 16px 24px 2px"
);

$shadow-ambient-map: (
  0: "0px 0px 0px 0px",
  2: "0.5px 1px 5px 0px",
  4: "0.5px 1px 10px 0px",
  8: "1.5px 3px 14px 2px",
  16: "3px 6px 30px 5px"
);

@mixin shadow($shadow-level) {
  $shadow-umbra: map-get($shadow-umbra-map, $shadow-level);
  $shadow-penumbra: map-get($shadow-penumbra-map, $shadow-level);
  $shadow-ambient: map-get($shadow-ambient-map, $shadow-level);

  $shadow-umbra-color: rgba($shadow-baseline-color, $shadow-umbra-opacity + $shadow-opacity-boost);
  $shadow-penumbra-color: rgba($shadow-baseline-color, $shadow-penumbra-opacity + $shadow-opacity-boost);
  $shadow-ambient-color: rgba($shadow-baseline-color, $shadow-ambient-opacity + $shadow-opacity-boost);

  box-shadow:
    #{$shadow-umbra} #{$shadow-umbra-color},
    #{$shadow-penumbra} #{$shadow-penumbra-color},
    #{$shadow-ambient} #{$shadow-ambient-color};
}


// CSS VARIABLES for SDT
:root { /* stylelint-disable-line no-duplicate-selectors */
  --font-family-base: #{$font-family-base};
  --font-family-math: #{$font-family-math};
  --border: #{$border};
  --border-radius: #{$border-radius};
}


// BOOTSTRAP IMPORTS
// Structure
@import "node_modules/bootstrap/scss/functions";
@import "node_modules/bootstrap/scss/variables";
@import "node_modules/bootstrap/scss/mixins";
// Core
@import "node_modules/bootstrap/scss/reboot";
@import "node_modules/bootstrap/scss/type";
// @import "node_modules/bootstrap/scss/images";
@import "node_modules/bootstrap/scss/grid";
// Elements
// @import "node_modules/bootstrap/scss/tables";
@import "node_modules/bootstrap/scss/buttons";
@import "node_modules/bootstrap/scss/transitions";
@import "node_modules/bootstrap/scss/dropdown";
// @import "node_modules/bootstrap/scss/card";
@import "node_modules/bootstrap/scss/nav";
@import "node_modules/bootstrap/scss/navbar";
// @import "node_modules/bootstrap/scss/alert";
// @import "node_modules/bootstrap/scss/list-group";
// @import "node_modules/bootstrap/scss/close";
// @import "node_modules/bootstrap/scss/modal";
// Utility
@import "node_modules/bootstrap/scss/utilities";


// CUSTOM CSS

// Responsive sizing (changes font size, but also margins, padding, etc... due to use of rem)
html {
  font-size: 1rem;
}

@include media-breakpoint-down(sm) {
  html {
    font-size: 0.9rem;
  }
}

@include media-breakpoint-down(xs) {
  html {
    font-size: 0.8rem;
  }
}

body {
  font-size: 1.125rem;
}

.math-var {
  font-family: $font-family-math;
  font-style: italic;
}

.math-greek {
  font-family: $font-family-math;
  font-style: normal;
}

// CLEAN
.sdt-page {
  @include make-container();
}

.sdt-layout {
  @include make-row();
}

.sdt-sidebar {
  @include make-col-ready();
  @include make-col(10, 10);

  order: 0;

  border-bottom: $border;

  @include media-breakpoint-up(md) {
    @include make-col(2, 10);

    min-height: 100vh;

    border-right: $border;

    @supports (position: sticky) or (position: -webkit-sticky) {
      position: -webkit-sticky; /* stylelint-disable-line value-no-vendor-prefix */
      position: sticky;
      top: 0;
      z-index: 1000;

      height: 100vh;
    }
  }

  @include media-breakpoint-up(lg) {
    @include make-col(2, 12);
  }

  @include media-breakpoint-up(xl) {
    flex: 0 1 20rem;
  }

  .sdt-detectable {
    font-size: 1.5rem;
  }
}

.sdt-brandnav {
  position: relative;
  display: flex;

  align-items: center;

  padding: 0.5rem;
  margin-right: ($grid-gutter-width / -2);
  margin-left: ($grid-gutter-width / -2);
}

.sdt-tocnav-toggle {
  @extend .btn;
  @extend .btn-link;

  padding: 0.1875rem 0.5rem;
  margin: 0;

  line-height: 1;
  color: $body-color;

  border: 0;

  @include media-breakpoint-up(md) {
    display: none;
  }

  &:hover {
    @include shadow(2);

    color: $body-color;
  }

  &:focus {
    @include shadow(2);

    color: $body-color;
  }

  &:active {
    @include shadow(4);

    color: $body-color;
  }

  svg {
    width: 1.875rem;
    height: 1.875rem;
  }
}

.sdt-brand-link {
  @extend .navbar-brand;

  padding: 0 0.5rem;
  margin: 0;

  font-weight: 600;
  color: $body-color;

  border-radius: 0.25rem;
  outline: none;

  &:hover {
    @include shadow(2);

    color: $body-color;
    text-decoration: none;
  }

  &:focus {
    @include shadow(2);

    color: $body-color;
    text-decoration: none;
  }

  &:active {
    @include shadow(4);

    color: $body-color;
    text-decoration: none;
  }
}

.sdt-tocnav {
  padding-top: 0.25rem;
  padding-bottom: 0.5rem;
  margin-right: ($grid-gutter-width / -2);
  margin-left: ($grid-gutter-width / -2);

  @include media-breakpoint-up(md) {
    @supports (position: sticky) {
      max-height: calc(100vh - 3.5rem);
      overflow-y: auto;
    }
  }
  // Override collapse behaviors
  @include media-breakpoint-up(md) {
    display: block !important;
  }
}

.sdt-toc {
  @extend .nav;

  display: block;
}

.sdt-toclink {
  padding: 0.375rem 0.5rem;

  font-size: 1rem;
  font-weight: 600;
  line-height: 1.1;
  color: $link-color;

  border-radius: 0.25rem;
  outline: none;

  &:hover {
    @include shadow(2);

    color: $body-color;
    text-decoration: none;
  }

  &:focus {
    @include shadow(2);

    color: $body-color;
    text-decoration: none;
  }

  &:active {
    @include shadow(4);

    color: $body-color;
    text-decoration: none;
  }

}

.sdt-tocitem .sdt-toclink {
  display: block;

  padding: 0.375rem 0.5rem;
  margin: 0 0.5rem;
}

.sdt-tocitem-active .sdt-toclink,
.sdt-tocitem-active:hover .sdt-toclink {
  font-weight: 700;
  color: $body-color;
}

.sdt-tocitem-extra.sdt-tocitem-1 {
  padding-top: 1.25rem;
}

.sdt-main {
  @include make-col-ready();
  @include make-col(10, 10);

  padding-top: 1rem;
  padding-bottom: 1rem;

  @include media-breakpoint-up(md) {
    @include make-col(8, 10);
  }

  @include media-breakpoint-up(lg) {
    @include make-col(10, 12);
  }

  @include media-breakpoint-up(xl) {
    @include make-col(9, 12);
    border-right: $border;
  }

  @include media-breakpoint-up(xxl) {
    @include make-col(8, 12);
    border-right: $border;
  }
}

.sdt-content {
  padding-bottom: 1rem;

  // STYLING FOR MARKDOWN
  h2 {
    padding-top: 1rem;
  }

  code {
    padding: 0.0625rem 0.25rem;

    font-family: "Source Code Pro", monospace;
    font-size: 1rem;
    font-style: normal;
    font-weight: 600;
    white-space: nowrap;

    background-color: var(--color-element-background);
    border-radius: 0.25rem;
  }

  code[class="Bias"] {
    background-color: var(--color-c-light);
  }

  code[class="c"] {
    font-family: "Source Serif Pro", serif;
    font-style: italic;

    background-color: var(--color-c-light);
  }

  code[class="Iso-BiasCurve"] {
    border: 2px solid var(--color-c);
  }

  code[class="Sensitivity"] {
    background-color: var(--color-d-light);
  }

  code[class="d′"] {
    font-family: "Source Serif Pro", serif;
    font-style: italic;

    background-color: var(--color-d-light);
  }

  code[class="Iso-SensitivityCurve"] {
    border: 2px solid var(--color-d);
  }

  code[class="Variance"] {
    background-color: var(--color-s-light);
  }

  code[class="σ"] {
    font-family: "Source Serif Pro", serif;
    font-style: italic;

    background-color: var(--color-s-light);
  }

  code[class="RespondPresent"] {
    background-color: var(--color-present-light);
    border: 3px solid var(--color-present);
    border-radius: 0;
  }

  code[class="RespondAbsent"] {
    background-color: var(--color-absent-light);
    border: 3px solid var(--color-absent);
    border-radius: 0;
  }

  code[class="Evidence"] {
    background-color: var(--color-acc-light);
    border: 3px solid var(--color-acc);
    border-radius: 0;
  }

  code[class="SignalPresent"] {
    background-color: var(--color-hr-light);
    border: 3px solid var(--color-hr);
    border-radius: 0;
  }

  code[class="SignalAbsent"] {
    background-color: var(--color-far-light);
    border: 3px solid var(--color-far);
    border-radius: 0;
  }

  code[class="OutcomeHit"] {
    background-color: var(--color-h-light);
    border: 3px solid var(--color-h);
    border-radius: 0;
  }

  code[class="OutcomeMiss"] {
    background-color: var(--color-m-light);
    border: 3px solid var(--color-m);
    border-radius: 0;
  }

  code[class="OutcomeCorrectRejection"] {
    background-color: var(--color-cr-light);
    border: 3px solid var(--color-cr);
    border-radius: 0;
  }

  code[class="OutcomeFalseAlarm"] {
    background-color: var(--color-fa-light);
    border: 3px solid var(--color-fa);
    border-radius: 0;
  }

  code[class="Signal+Noise"] {
    background-color: var(--color-hr-light);
    border: 2px solid var(--color-element-emphasis);
  }

  code[class="NoiseDistribution"] {
    background-color: var(--color-far-light);
    border: 2px solid var(--color-element-emphasis);
  }

  code[class="Coherence"],
  code[class="Trials"] {
    position: relative;

    padding-right: 1.5rem;

    background-color: var(--color-element-background);
  }

  code[class="Coherence"]::before,
  code[class="Trials"]::before {
    position: absolute;

    top: 0;
    right: 0.625rem;

    width: 0.25rem;
    height: 1.375rem;

    content: "";

    background-color: var(--color-element-disabled);
    border-width: 0.125rem;
  }

  code[class="Coherence"]::after,
  code[class="Trials"]::after {
    position: absolute;

    top: 0.4rem;
    right: 0.125rem;

    width: 1.25rem;
    height: 0.625rem;

    content: "";

    background-color: var(--color-element-enabled);
    border-width: 0.25rem;
    border-radius: 0.25rem;
  }

  code[class="Pause"],
  code[class="Reset"],
  code[class="Run"] {
    color: var(--color-background);

    background-color: var(--color-element-enabled);
  }

  code[class="+"],
  code[class="?"] {
    background-color: var(--color-element-disabled);

    border: 2px solid var(--color-element-emphasis);
    border-radius: 1rem;
  }

  code[class="Present"] {
    color: var(--color-background);

    background-color: var(--color-present);
  }

  code[class="Absent"] {
    color: var(--color-background);

    background-color: var(--color-absent);
  }

  code[class="Correct"] {
    background-color: var(--color-correct-light);
    border: 1px solid var(--color-element-emphasis);
    border-radius: 0;
  }

  code[class="Error"] {
    color: var(--color-background);

    background-color: var(--color-error-light);
    border: 1px solid var(--color-element-emphasis);
    border-radius: 0;
  }

  code[class="NoResponse"] {
    background-color: var(--color-element-background);
    border: 1px solid var(--color-element-emphasis);
    border-radius: 0;
  }

  code[class="Hit"],
  code[class="Hits"] {
    background-color: var(--color-h-light);
  }

  code[class="Miss"],
  code[class="Misses"] {
    background-color: var(--color-m-light);
  }

  code[class="CorrectRejection"],
  code[class="CorrectRejections"] {
    background-color: var(--color-cr-light);
  }

  code[class="FalseAlarm"],
  code[class="FalseAlarms"] {
    background-color: var(--color-fa-light);
  }

  code[class="HitRate"] {
    background-color: var(--color-hr-light);
  }

  code[class="FalseAlarmRate"] {
    background-color: var(--color-far-light);
  }

  code[class="PositivePredictiveValue"] {
    background-color: var(--color-present-light);
  }

  code[class="FalseOmissionRate"] {
    background-color: var(--color-absent-light);
  }

  code[class="Accuracy"] {
    background-color: var(--color-acc-light);
  }

  .csl-entry {
    padding-left: 2rem;

    text-indent: -2rem;
  }
}


// Legend formatting
.sdt-legend {
  dt {
    display: inline-block;

    width: 12rem;
    // padding: 0.375rem 0.675rem;
    padding: 0.25rem 0.675rem;

    font-weight: 600;
  }

  dd {
    margin-top: 0.25rem;
    margin-bottom: 1.5rem;
    margin-left: 2rem;
  }

  .h {
    background: var(--color-h-light);
    border-left: 1rem solid var(--color-h);
  }

  .m {
    background: var(--color-m-light);
    border-left: 1rem solid var(--color-m);
  }

  .fa {
    background: var(--color-fa-light);
    border-left: 1rem solid var(--color-fa);
  }

  .cr {
    background: var(--color-cr-light);
    border-left: 1rem solid var(--color-cr);
  }

  .hr {
    background: var(--color-hr-light);
    border-left: 1rem solid var(--color-hr);
  }

  .far {
    background: var(--color-far-light);
    border-left: 1rem solid var(--color-far);
  }

  .acc {
    background: var(--color-acc-light);
    border-left: 1rem solid var(--color-acc);
  }

  .d {
    background: var(--color-d-light);
    border-left: 1rem solid var(--color-d);
  }

  .c {
    background: var(--color-c-light);
    border-left: 1rem solid var(--color-c);
  }

  .s {
    background: var(--color-s-light);
    border-left: 1rem solid var(--color-s);
  }

  .present {
    background: var(--color-present-light);
    border-left: 1rem solid var(--color-present);
  }

  .absent {
    background: var(--color-absent-light);
    border-left: 1rem solid var(--color-absent);
  }

  .correct {
    padding-left: calc(1.675rem - 1px);

    background: var(--color-correct);
    border: 1px solid var(--color-element-border);
  }

  .error {
    color: var(--color-text-inverse);

    background: var(--color-error-light);
    border-left: 1rem solid var(--color-error);
  }
}

// Glossary formatting to get the term and definition inline, with a hanging indent
.sdt-glossary {
  margin-left: 2rem;

  dt {
    display: inline;

    margin-left: -2rem;

    font-weight: 600;
  }

  dt::after {
    content: ":";
  }

  dd {
    display: inline;
  }

  dd::after {
    display: block;

    content: "";
  }
}

.sdt-footer {
  @include make-row();

  padding-top: 1rem;

  border-top: $border;
}

.sdt-footer-item {
  @include make-col-ready();

  flex: 0 0 auto;

  width: auto;
  max-width: none;
  padding: 0 0.5rem;

  font-size: 1rem;
  font-weight: 600;
  line-height: 1.1;

  &.sdt-footer-item-left {
    margin-right: auto;
  }
}
