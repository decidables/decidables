{"version":3,"sources":["mixins/converterSet.js"],"names":["SDTMixinConverterSet","superclass","converterSet","fromAttribute","value","Set","split","toAttribute","size","join"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,UAAD,EAAgB;AAC3C;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,MAAqBA,UAArB;AAAA;AAED,CAHD,C,CAKA;;;;AACAD,oBAAoB,CAACE,YAArB,GAAoC;AAClCC,EAAAA,aAAa,EAAE,uBAACC,KAAD,EAAW;AACxB,WAAO,IAAIC,GAAJ,CAAQD,KAAK,CAACE,KAAN,CAAY,KAAZ,CAAR,CAAP;AACD,GAHiC;AAIlCC,EAAAA,WAAW,EAAE,qBAACH,KAAD,EAAW;AACtB,WAAQA,KAAK,CAACI,IAAP,GAAe,mBAAIJ,KAAJ,EAAWK,IAAX,CAAgB,GAAhB,CAAf,GAAsC,IAA7C;AACD;AANiC,CAApC","sourcesContent":["\nconst SDTMixinConverterSet = (superclass) => {\n  return class extends superclass {\n  };\n};\n\n// Static property of SDTMixinConverterSet!\nSDTMixinConverterSet.converterSet = {\n  fromAttribute: (value) => {\n    return new Set(value.split(/\\s+/));\n  },\n  toAttribute: (value) => {\n    return (value.size) ? [...value].join(' ') : null;\n  },\n};\n\nexport {SDTMixinConverterSet as default};\n"],"file":"converterSet.js"}