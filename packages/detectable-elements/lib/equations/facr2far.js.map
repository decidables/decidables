{"version":3,"sources":["equations/facr2far.js"],"names":["SDTEquationFaCr2Far","fa","attribute","type","Number","reflect","cr","far","alignState","SDTMath","faCr2Far","dispatchEvent","CustomEvent","detail","bubbles","event","parseInt","target","value","sendEvent","numeric","html","interactive","faInput","bind","crInput","toFixed","SDTEquation","customElements","define"],"mappings":";;;;;;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;IAOqBA,mB;;;;;wBACK;AACtB,aAAO;AACLC,QAAAA,EAAE,EAAE;AACFC,UAAAA,SAAS,EAAE,cADT;AAEFC,UAAAA,IAAI,EAAEC,MAFJ;AAGFC,UAAAA,OAAO,EAAE;AAHP,SADC;AAMLC,QAAAA,EAAE,EAAE;AACFJ,UAAAA,SAAS,EAAE,oBADT;AAEFC,UAAAA,IAAI,EAAEC,MAFJ;AAGFC,UAAAA,OAAO,EAAE;AAHP,SANC;AAWLE,QAAAA,GAAG,EAAE;AACHL,UAAAA,SAAS,EAAE,KADR;AAEHC,UAAAA,IAAI,EAAEC,MAFH;AAGHC,UAAAA,OAAO,EAAE;AAHN;AAXA,OAAP;AAiBD;;;AAED,iCAAc;AAAA;;AAAA;;AACZ;AACA,UAAKJ,EAAL,GAAU,CAAV;AACA,UAAKK,EAAL,GAAU,CAAV;;AACA,UAAKE,UAAL;;AAJY;AAKb;;;;iCAEY;AACX,WAAKD,GAAL,GAAWE,wBAAQC,QAAR,CAAiB,KAAKT,EAAtB,EAA0B,KAAKK,EAA/B,CAAX;AACD;;;gCAEW;AACV,WAAKK,aAAL,CAAmB,IAAIC,WAAJ,CAAgB,8BAAhB,EAAgD;AACjEC,QAAAA,MAAM,EAAE;AACNZ,UAAAA,EAAE,EAAE,KAAKA,EADH;AAENK,UAAAA,EAAE,EAAE,KAAKA,EAFH;AAGNC,UAAAA,GAAG,EAAE,KAAKA;AAHJ,SADyD;AAMjEO,QAAAA,OAAO,EAAE;AANwD,OAAhD,CAAnB;AAQD;;;4BAEOC,K,EAAO;AACb,WAAKd,EAAL,GAAUe,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,EAAqB,EAArB,CAAlB;AACA,WAAKV,UAAL;AACA,WAAKW,SAAL;AACD;;;4BAEOJ,K,EAAO;AACb,WAAKT,EAAL,GAAUU,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,EAAqB,EAArB,CAAlB;AACA,WAAKV,UAAL;AACA,WAAKW,SAAL;AACD;;;6BAEQ;AACP,WAAKX,UAAL;AACA,UAAIP,EAAJ;AACA,UAAIK,EAAJ;AACA,UAAIC,GAAJ;;AACA,UAAI,KAAKa,OAAT,EAAkB;AAChBnB,QAAAA,EAAE,OAAGoB,gBAAH,qBAC0C,CAAC,KAAKC,WADhD,EAC+E,KAAKrB,EADpF,EACkG,KAAKsB,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CADlG,CAAF;AAKAlB,QAAAA,EAAE,OAAGe,gBAAH,sBAC0C,CAAC,KAAKC,WADhD,EAC+E,KAAKhB,EADpF,EACkG,KAAKmB,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CADlG,CAAF;AAKAjB,QAAAA,GAAG,OAAGc,gBAAH,sBAC6E,CAAC,KAAKd,GAAL,CAASmB,OAAT,CAAiB,CAAjB,CAD9E,CAAH;AAKD,OAhBD,MAgBO;AACLzB,QAAAA,EAAE,OAAGoB,gBAAH,qBAAF;AACAf,QAAAA,EAAE,OAAGe,gBAAH,qBAAF;AACAd,QAAAA,GAAG,OAAGc,gBAAH,qBAAH;AACD;;AACD,iBAAOA,gBAAP,sBAMcd,GANd,EAScN,EATd,EAccA,EAdd,EAc8CK,EAd9C;AAoBD;;;;EArG8CqB,oB;;;AAwGjDC,cAAc,CAACC,MAAf,CAAsB,uBAAtB,EAA+C7B,mBAA/C","sourcesContent":["\nimport {html} from 'lit-element';\n\nimport SDTMath from '@decidable/detectable-math';\n\nimport SDTEquation from './sdt-equation';\n\n/*\n  SDTEquationFaCr2Far element\n  <sdt-equation-facr2far>\n\n  Attributes:\n  False Alarms; Correct Rejections; False Alarm Rate;\n*/\nexport default class SDTEquationFaCr2Far extends SDTEquation {\n  static get properties() {\n    return {\n      fa: {\n        attribute: 'false-alarms',\n        type: Number,\n        reflect: true,\n      },\n      cr: {\n        attribute: 'correct-rejections',\n        type: Number,\n        reflect: true,\n      },\n      far: {\n        attribute: false,\n        type: Number,\n        reflect: false,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this.fa = 0;\n    this.cr = 0;\n    this.alignState();\n  }\n\n  alignState() {\n    this.far = SDTMath.faCr2Far(this.fa, this.cr);\n  }\n\n  sendEvent() {\n    this.dispatchEvent(new CustomEvent('sdt-equation-facr2far-change', {\n      detail: {\n        fa: this.fa,\n        cr: this.cr,\n        far: this.far,\n      },\n      bubbles: true,\n    }));\n  }\n\n  faInput(event) {\n    this.fa = parseInt(event.target.value, 10);\n    this.alignState();\n    this.sendEvent();\n  }\n\n  crInput(event) {\n    this.cr = parseInt(event.target.value, 10);\n    this.alignState();\n    this.sendEvent();\n  }\n\n  render() {\n    this.alignState();\n    let fa;\n    let cr;\n    let far;\n    if (this.numeric) {\n      fa = html`\n        <decidable-spinner class=\"fa\" ?disabled=${!this.interactive} min=\"0\" .value=\"${this.fa}\" @input=${this.faInput.bind(this)}>\n          <var>False Alarms</var>\n        </decidable-spinner>\n      `;\n      cr = html`\n        <decidable-spinner class=\"cr\" ?disabled=${!this.interactive} min=\"0\" .value=\"${this.cr}\" @input=${this.crInput.bind(this)}>\n          <var>Correct Rejections</var>\n        </decidable-spinner>\n      `;\n      far = html`\n        <decidable-spinner class=\"far\" disabled min=\"0\" max=\"1\" step=\".001\" .value=\"${+this.far.toFixed(3)}\">\n          <var>False Alarm Rate</var>\n        </decidable-spinner>\n      `;\n    } else {\n      fa = html`<var class=\"fa\">False Alarms</var>`;\n      cr = html`<var class=\"cr\">Correct Rejections</var>`;\n      far = html`<var class=\"far\">False Alarm Rate</var>`;\n    }\n    return html`\n      <div class=\"holder\">\n        <table class=\"equation\">\n          <tbody>\n            <tr>\n              <td rowspan=\"2\">\n                ${far}<span class=\"equals\">=</span>\n              </td>\n              <td class=\"underline\">\n                ${fa}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                ${fa}<span class=\"plus\">+</span>${cr}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>`;\n  }\n}\n\ncustomElements.define('sdt-equation-facr2far', SDTEquationFaCr2Far);\n"],"file":"facr2far.js"}