{"version":3,"sources":["components/sdt-response.js"],"names":["SDTResponse","feedback","attribute","type","String","reflect","trial","Boolean","payoff","hPayoff","Number","mPayoff","faPayoff","crPayoff","nrPayoff","state","trialCount","trialTotal","feedbacks","payoffs","states","signals","signal","undefined","responses","response","outcomes","outcome","accuracies","accuracy","h","m","cr","fa","c","e","nr","responded","dispatchEvent","CustomEvent","detail","trialPayoff","totalPayoff","bubbles","html","interactive","present","bind","absent","css","SDTElement","customElements","define"],"mappings":"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","sourcesContent":["\nimport {html, css} from 'lit-element';\n\nimport '@decidable/decidable-elements';\n\nimport SDTElement from '../sdt-element';\n\n/*\n  SDTResponse element\n  <sdt-response>\n\n  Attributes:\n\n*/\nexport default class SDTResponse extends SDTElement {\n  static get properties() {\n    return {\n      feedback: {\n        attribute: 'feedback',\n        type: String,\n        reflect: true,\n      },\n      trial: {\n        attribute: 'trial',\n        type: Boolean,\n        reflect: true,\n      },\n      payoff: {\n        attribute: 'payoff',\n        type: String,\n        reflect: true,\n      },\n      hPayoff: {\n        attribute: 'hit-payoff',\n        type: Number,\n        reflect: true,\n      },\n      mPayoff: {\n        attribute: 'miss-payoff',\n        type: Number,\n        reflect: true,\n      },\n      faPayoff: {\n        attribute: 'false-alarm-payoff',\n        type: Number,\n        reflect: true,\n      },\n      crPayoff: {\n        attribute: 'correct-rejection-payoff',\n        type: Number,\n        reflect: true,\n      },\n      nrPayoff: {\n        attribute: 'no-response-payoff',\n        type: Number,\n        reflect: true,\n      },\n\n      state: {\n        attribute: false,\n        type: String,\n        reflect: false,\n      },\n      trialCount: {\n        attribute: false,\n        type: Number,\n        reflect: false,\n      },\n      trialTotal: {\n        attribute: false,\n        type: Number,\n        reflect: false,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n\n    // Attributes\n    this.feedbacks = ['none', 'accuracy', 'outcome']; // Possible values for 'feedback'\n    this.feedback = 'outcome'; // What feedback to display\n    this.trial = false; // Show trial count?\n    this.payoffs = ['none', 'trial', 'total']; // Possible types of 'payoff' info\n    this.payoff = 'none'; // What payoff info to display\n\n    this.hPayoff = 0; // Hit payoff\n    this.mPayoff = 0; // Miss payoff\n    this.crPayoff = 0; // Correct Rejection payoff\n    this.faPayoff = 0; // False Alarm payoff\n    this.nrPayoff = 0; // No Response payoff\n\n    // Properties\n    this.states = ['off', 'waiting', 'feedback']; // Possible states\n    this.state = 'off'; // Current state\n\n    this.trialCount = 0; // Current trial\n    this.trialTotal = 0; // Total trials\n\n    // Private\n    this.signals = ['present', 'absent']; // Possible values of 'signal'\n    this.signal = undefined; // Signal for current trial\n    this.responses = ['present', 'absent']; // Possible values of 'response'\n    this.response = undefined; // Response for current trial\n    this.outcomes = ['h', 'm', 'fa', 'cr', 'nr']; // Possible values of 'outcome'\n    this.outcome = undefined; // Outcome for current trial\n    this.accuracies = ['c', 'e', 'nr']; // Possible values of 'accuracy'\n    this.accuracy = undefined; // Accuracy for current trial\n\n    this.h = 0; // Count of Hits\n    this.m = 0; // Count of Misses\n    this.cr = 0; // Count of Correct Rejections\n    this.fa = 0; // Count of False Alarms\n\n    this.c = 0; // Count of Correct trials\n    this.e = 0; // Count of Error trials\n\n    this.nr = 0; // Count of No Response trials\n  }\n\n  get trialPayoff() {\n    switch (this.outcome) {\n      case 'h':\n        return this.hPayoff;\n      case 'm':\n        return this.mPayoff;\n      case 'fa':\n        return this.faPayoff;\n      case 'cr':\n        return this.crPayoff;\n      case 'nr':\n        return this.nrPayoff;\n      default:\n        return undefined;\n    }\n  }\n\n  get totalPayoff() {\n    return ((this.h * this.hPayoff)\n      + (this.m * this.mPayoff)\n      + (this.cr * this.crPayoff)\n      + (this.fa * this.faPayoff)\n      + (this.nr * this.nrPayoff));\n  }\n\n  start(signal, trial) {\n    this.trialCount = trial;\n    this.state = 'waiting';\n    this.signal = signal;\n    this.response = undefined;\n    this.outcome = undefined;\n  }\n\n  stop() {\n    this.state = 'feedback';\n    if (this.response === undefined) {\n      this.outcome = 'nr';\n      this.nr += 1;\n      this.accuracy = 'nr';\n    }\n  }\n\n  present() {\n    this.responded('present');\n  }\n\n  absent() {\n    this.responded('absent');\n  }\n\n  responded(response) {\n    this.state = 'feedback';\n    this.response = response;\n    if (this.signal === 'present' && this.response === 'present') {\n      this.outcome = 'h';\n      this.h += 1;\n      this.accuracy = 'c';\n      this.c += 1;\n    } else if (this.signal === 'present' && this.response === 'absent') {\n      this.outcome = 'm';\n      this.m += 1;\n      this.accuracy = 'e';\n      this.e += 1;\n    } else if (this.signal === 'absent' && this.response === 'present') {\n      this.outcome = 'fa';\n      this.fa += 1;\n      this.accuracy = 'e';\n      this.e += 1;\n    } else if (this.signal === 'absent' && this.response === 'absent') {\n      this.outcome = 'cr';\n      this.cr += 1;\n      this.accuracy = 'c';\n      this.c += 1;\n    }\n\n    this.dispatchEvent(new CustomEvent('sdt-response', {\n      detail: {\n        trial: this.trialCount,\n        signal: this.signal,\n        response: this.response,\n        outcome: this.outcome,\n        payoff: this.trialPayoff,\n        h: this.h,\n        m: this.m,\n        fa: this.fa,\n        cr: this.cr,\n        nr: this.nr,\n        totalPayoff: this.totalPayoff,\n      },\n      bubbles: true,\n    }));\n  }\n\n  reset() {\n    this.state = 'off';\n    this.trialCount = 0;\n    this.signal = undefined;\n    this.response = undefined;\n    this.outcome = undefined;\n    this.accuracy = undefined;\n    this.h = 0;\n    this.m = 0;\n    this.cr = 0;\n    this.fa = 0;\n    this.nr = 0;\n    this.c = 0;\n    this.e = 0;\n  }\n\n  static get styles() {\n    return [\n      super.styles,\n      css`\n        :host {\n          display: inline-block;\n        }\n\n        /* Overall container */\n        .holder {\n          display: flex;\n\n          flex-direction: row;\n        }\n\n        /* Response buttons */\n        .responses {\n          display: flex;\n\n          flex-direction: column;\n\n          align-items: stretch;\n          justify-content: center;\n        }\n\n        .waiting[disabled] {\n          --decidable-button-background-color: var(---color-element-enabled);\n        }\n\n        .selected[disabled][name=\"present\"] {\n          --decidable-button-background-color: var(---color-present);\n        }\n\n        .selected[disabled][name=\"absent\"] {\n          --decidable-button-background-color: var(---color-absent);\n        }\n\n        /* Feedback messages */\n        .feedbacks {\n          display: flex;\n\n          flex-direction: column;\n\n          justify-content: center;\n        }\n\n        /* Trial feedback */\n        .trial {\n          text-align: center;\n        }\n\n        .trial .label {\n          font-weight: 600;\n        }\n\n        /* Outcome feedback */\n        .feedback {\n          display: flex;\n\n          flex-direction: column;\n\n          align-items: center;\n          justify-content: center;\n\n          width: 6rem;\n          height: 3.5rem;\n          padding: 0.375rem 0.75rem;\n          margin: 0.25rem;\n\n          text-align: center;\n\n          background-color: var(---color-element-background);\n          border: 1px solid var(---color-element-border);\n        }\n\n        .feedback.h {\n          background-color: var(---color-h-light);\n        }\n\n        .feedback.m {\n          background-color: var(---color-m-light);\n        }\n\n        .feedback.fa {\n          background-color: var(---color-fa-light);\n        }\n\n        .feedback.cr {\n          background-color: var(---color-cr-light);\n        }\n\n        .feedback.nr {\n          background-color: var(---color-nr-light);\n        }\n\n        .feedback.c {\n          background-color: var(---color-correct-light);\n        }\n\n        .feedback.e {\n          color: var(---color-text-inverse);\n\n          background-color: var(---color-error-light);\n        }\n\n        .feedback .outcome {\n          font-weight: 600;\n          line-height: 1.15;\n        }\n\n        :host([payoff=\"trial\"]) .feedback,\n        :host([payoff=\"total\"]) .feedback {\n          height: 4rem;\n        }\n\n        /* Payoff feedback */\n        .payoff {\n          text-align: center;\n        }\n\n        .payoff .label {\n          font-weight: 600;\n        }\n      `,\n    ];\n  }\n\n  render() {\n    return html`\n      <div class=\"holder\">\n        <div class=\"responses\">\n          <decidable-button name=\"present\" class=${(this.state === 'feedback' && this.response === 'present') ? 'selected' : ((this.state === 'waiting') ? 'waiting' : '')} ?disabled=${this.state !== 'waiting' || this.interactive !== true} @click=${this.present.bind(this)}>Present</decidable-button>\n          <decidable-button name=\"absent\" class=${(this.state === 'feedback' && this.response === 'absent') ? 'selected' : ((this.state === 'waiting') ? 'waiting' : '')} ?disabled=${this.state !== 'waiting' || this.interactive !== true} @click=${this.absent.bind(this)}>Absent</decidable-button>\n        </div>\n        ${(this.trial || this.feedback !== 'none' || this.payoff === 'total')\n          ? html`\n            <div class=\"feedbacks\">\n              ${(this.trial)\n                ? html`\n                  <div class=\"trial\">\n                    <span class=\"label\">Trial: </span><span class=\"count\">${this.trialCount}</span><span class=\"of\"> of </span><span class=\"total\">${this.trialTotal}</span>\n                  </div>`\n                : html``}\n              ${(this.feedback !== 'none')\n                ? html`\n                  <div class=${`feedback ${(this.state === 'feedback')\n                    ? (this.feedback === 'outcome')\n                      ? this.outcome\n                      : this.accuracy\n                    : ''}`}>\n                    ${(this.state === 'feedback')\n                      ? (this.feedback === 'outcome')\n                        ? (this.outcome === 'h')\n                          ? html`<span class=\"outcome\">Hit</span>`\n                          : (this.outcome === 'm')\n                            ? html`<span class=\"outcome\">Miss</span>`\n                            : (this.outcome === 'fa')\n                              ? html`<span class=\"outcome\">False<br>Alarm</span>`\n                              : (this.outcome === 'cr')\n                                ? html`<span class=\"outcome\">Correct<br>Rejection</span>`\n                                : html`<span class=\"outcome\">No<br>Response</span>`\n                        : (this.accuracy === 'c')\n                          ? html`<span class=\"outcome\">Correct</span>`\n                          : (this.accuracy === 'e')\n                            ? html`<span class=\"outcome\">Error</span>`\n                            : html`<span class=\"outcome\">No<br>Response</span>`\n                      : ''}\n                    ${(this.payoff === 'trial' || this.payoff === 'total')\n                      ? html`<span class=\"payoff\">${this.trialPayoff}</span>`\n                      : html``}\n                  </div>`\n                : html``}\n              ${(this.payoff === 'total')\n                ? html`\n                  <div class=\"payoff\">\n                    <span class=\"label\">Total: </span><span class=\"value\">${this.totalPayoff}</span>\n                  </div>`\n                : html``}\n            </div>`\n          : html``}\n      </div>`;\n  }\n}\n\ncustomElements.define('sdt-response', SDTResponse);\n"],"file":"sdt-response.js"}